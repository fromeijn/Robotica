
lichtsensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00802000  000011d4  00001268  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000020d  00802006  00802006  0000126e  2**0
                  ALLOC
  3 .stab         00002b08  00000000  00000000  00001270  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000a29  00000000  00000000  00003d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000047a1  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000160  00000000  00000000  000047d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000263b  00000000  00000000  00004930  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000aff  00000000  00000000  00006f6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000ff0  00000000  00000000  00007a6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000004c8  00000000  00000000  00008a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000e4e  00000000  00000000  00008f24  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001867  00000000  00000000  00009d72  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000100  00000000  00000000  0000b5d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
       2:	00 00       	nop
       4:	1f c1       	rjmp	.+574    	; 0x244 <__bad_interrupt>
       6:	00 00       	nop
       8:	1d c1       	rjmp	.+570    	; 0x244 <__bad_interrupt>
       a:	00 00       	nop
       c:	1b c1       	rjmp	.+566    	; 0x244 <__bad_interrupt>
       e:	00 00       	nop
      10:	19 c1       	rjmp	.+562    	; 0x244 <__bad_interrupt>
      12:	00 00       	nop
      14:	17 c1       	rjmp	.+558    	; 0x244 <__bad_interrupt>
      16:	00 00       	nop
      18:	15 c1       	rjmp	.+554    	; 0x244 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	13 c1       	rjmp	.+550    	; 0x244 <__bad_interrupt>
      1e:	00 00       	nop
      20:	11 c1       	rjmp	.+546    	; 0x244 <__bad_interrupt>
      22:	00 00       	nop
      24:	0f c1       	rjmp	.+542    	; 0x244 <__bad_interrupt>
      26:	00 00       	nop
      28:	0d c1       	rjmp	.+538    	; 0x244 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0b c1       	rjmp	.+534    	; 0x244 <__bad_interrupt>
      2e:	00 00       	nop
      30:	09 c1       	rjmp	.+530    	; 0x244 <__bad_interrupt>
      32:	00 00       	nop
      34:	07 c1       	rjmp	.+526    	; 0x244 <__bad_interrupt>
      36:	00 00       	nop
      38:	05 c1       	rjmp	.+522    	; 0x244 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	03 c1       	rjmp	.+518    	; 0x244 <__bad_interrupt>
      3e:	00 00       	nop
      40:	01 c1       	rjmp	.+514    	; 0x244 <__bad_interrupt>
      42:	00 00       	nop
      44:	ff c0       	rjmp	.+510    	; 0x244 <__bad_interrupt>
      46:	00 00       	nop
      48:	fd c0       	rjmp	.+506    	; 0x244 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	fb c0       	rjmp	.+502    	; 0x244 <__bad_interrupt>
      4e:	00 00       	nop
      50:	f9 c0       	rjmp	.+498    	; 0x244 <__bad_interrupt>
      52:	00 00       	nop
      54:	f7 c0       	rjmp	.+494    	; 0x244 <__bad_interrupt>
      56:	00 00       	nop
      58:	f5 c0       	rjmp	.+490    	; 0x244 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f3 c0       	rjmp	.+486    	; 0x244 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f1 c0       	rjmp	.+482    	; 0x244 <__bad_interrupt>
      62:	00 00       	nop
      64:	ef c0       	rjmp	.+478    	; 0x244 <__bad_interrupt>
      66:	00 00       	nop
      68:	ed c0       	rjmp	.+474    	; 0x244 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	eb c0       	rjmp	.+470    	; 0x244 <__bad_interrupt>
      6e:	00 00       	nop
      70:	e9 c0       	rjmp	.+466    	; 0x244 <__bad_interrupt>
      72:	00 00       	nop
      74:	e7 c0       	rjmp	.+462    	; 0x244 <__bad_interrupt>
      76:	00 00       	nop
      78:	e5 c0       	rjmp	.+458    	; 0x244 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e3 c0       	rjmp	.+454    	; 0x244 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e1 c0       	rjmp	.+450    	; 0x244 <__bad_interrupt>
      82:	00 00       	nop
      84:	df c0       	rjmp	.+446    	; 0x244 <__bad_interrupt>
      86:	00 00       	nop
      88:	dd c0       	rjmp	.+442    	; 0x244 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	db c0       	rjmp	.+438    	; 0x244 <__bad_interrupt>
      8e:	00 00       	nop
      90:	d9 c0       	rjmp	.+434    	; 0x244 <__bad_interrupt>
      92:	00 00       	nop
      94:	d7 c0       	rjmp	.+430    	; 0x244 <__bad_interrupt>
      96:	00 00       	nop
      98:	d5 c0       	rjmp	.+426    	; 0x244 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d3 c0       	rjmp	.+422    	; 0x244 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d1 c0       	rjmp	.+418    	; 0x244 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	cf c0       	rjmp	.+414    	; 0x244 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	cd c0       	rjmp	.+410    	; 0x244 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	cb c0       	rjmp	.+406    	; 0x244 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	c9 c0       	rjmp	.+402    	; 0x244 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c7 c0       	rjmp	.+398    	; 0x244 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c5 c0       	rjmp	.+394    	; 0x244 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	c3 c0       	rjmp	.+390    	; 0x244 <__bad_interrupt>
      be:	00 00       	nop
      c0:	c1 c0       	rjmp	.+386    	; 0x244 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	bf c0       	rjmp	.+382    	; 0x244 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	bd c0       	rjmp	.+378    	; 0x244 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	bb c0       	rjmp	.+374    	; 0x244 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	b9 c0       	rjmp	.+370    	; 0x244 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	b7 c0       	rjmp	.+366    	; 0x244 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	b5 c0       	rjmp	.+362    	; 0x244 <__bad_interrupt>
      da:	00 00       	nop
      dc:	b3 c0       	rjmp	.+358    	; 0x244 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b1 c0       	rjmp	.+354    	; 0x244 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	af c0       	rjmp	.+350    	; 0x244 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	ad c0       	rjmp	.+346    	; 0x244 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	ab c0       	rjmp	.+342    	; 0x244 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	a9 c0       	rjmp	.+338    	; 0x244 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	a7 c0       	rjmp	.+334    	; 0x244 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	a5 c0       	rjmp	.+330    	; 0x244 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	a3 c0       	rjmp	.+326    	; 0x244 <__bad_interrupt>
      fe:	00 00       	nop
     100:	a1 c0       	rjmp	.+322    	; 0x244 <__bad_interrupt>
     102:	00 00       	nop
     104:	9f c0       	rjmp	.+318    	; 0x244 <__bad_interrupt>
     106:	00 00       	nop
     108:	9d c0       	rjmp	.+314    	; 0x244 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	9b c0       	rjmp	.+310    	; 0x244 <__bad_interrupt>
     10e:	00 00       	nop
     110:	99 c0       	rjmp	.+306    	; 0x244 <__bad_interrupt>
     112:	00 00       	nop
     114:	97 c0       	rjmp	.+302    	; 0x244 <__bad_interrupt>
     116:	00 00       	nop
     118:	95 c0       	rjmp	.+298    	; 0x244 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	93 c0       	rjmp	.+294    	; 0x244 <__bad_interrupt>
     11e:	00 00       	nop
     120:	91 c0       	rjmp	.+290    	; 0x244 <__bad_interrupt>
     122:	00 00       	nop
     124:	8f c0       	rjmp	.+286    	; 0x244 <__bad_interrupt>
     126:	00 00       	nop
     128:	8d c0       	rjmp	.+282    	; 0x244 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	8b c0       	rjmp	.+278    	; 0x244 <__bad_interrupt>
     12e:	00 00       	nop
     130:	89 c0       	rjmp	.+274    	; 0x244 <__bad_interrupt>
     132:	00 00       	nop
     134:	87 c0       	rjmp	.+270    	; 0x244 <__bad_interrupt>
     136:	00 00       	nop
     138:	85 c0       	rjmp	.+266    	; 0x244 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	83 c0       	rjmp	.+262    	; 0x244 <__bad_interrupt>
     13e:	00 00       	nop
     140:	81 c0       	rjmp	.+258    	; 0x244 <__bad_interrupt>
     142:	00 00       	nop
     144:	7f c0       	rjmp	.+254    	; 0x244 <__bad_interrupt>
     146:	00 00       	nop
     148:	7d c0       	rjmp	.+250    	; 0x244 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	7b c0       	rjmp	.+246    	; 0x244 <__bad_interrupt>
     14e:	00 00       	nop
     150:	79 c0       	rjmp	.+242    	; 0x244 <__bad_interrupt>
     152:	00 00       	nop
     154:	77 c0       	rjmp	.+238    	; 0x244 <__bad_interrupt>
     156:	00 00       	nop
     158:	75 c0       	rjmp	.+234    	; 0x244 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	73 c0       	rjmp	.+230    	; 0x244 <__bad_interrupt>
     15e:	00 00       	nop
     160:	72 c0       	rjmp	.+228    	; 0x246 <__vector_88>
     162:	00 00       	nop
     164:	a4 c0       	rjmp	.+328    	; 0x2ae <__vector_89>
     166:	00 00       	nop
     168:	6d c0       	rjmp	.+218    	; 0x244 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	6b c0       	rjmp	.+214    	; 0x244 <__bad_interrupt>
     16e:	00 00       	nop
     170:	69 c0       	rjmp	.+210    	; 0x244 <__bad_interrupt>
     172:	00 00       	nop
     174:	67 c0       	rjmp	.+206    	; 0x244 <__bad_interrupt>
     176:	00 00       	nop
     178:	65 c0       	rjmp	.+202    	; 0x244 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	63 c0       	rjmp	.+198    	; 0x244 <__bad_interrupt>
     17e:	00 00       	nop
     180:	61 c0       	rjmp	.+194    	; 0x244 <__bad_interrupt>
     182:	00 00       	nop
     184:	5f c0       	rjmp	.+190    	; 0x244 <__bad_interrupt>
     186:	00 00       	nop
     188:	5d c0       	rjmp	.+186    	; 0x244 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	5b c0       	rjmp	.+182    	; 0x244 <__bad_interrupt>
     18e:	00 00       	nop
     190:	59 c0       	rjmp	.+178    	; 0x244 <__bad_interrupt>
     192:	00 00       	nop
     194:	57 c0       	rjmp	.+174    	; 0x244 <__bad_interrupt>
     196:	00 00       	nop
     198:	55 c0       	rjmp	.+170    	; 0x244 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	53 c0       	rjmp	.+166    	; 0x244 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	51 c0       	rjmp	.+162    	; 0x244 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	4f c0       	rjmp	.+158    	; 0x244 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	4d c0       	rjmp	.+154    	; 0x244 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	4b c0       	rjmp	.+150    	; 0x244 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	49 c0       	rjmp	.+146    	; 0x244 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	47 c0       	rjmp	.+142    	; 0x244 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	45 c0       	rjmp	.+138    	; 0x244 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	43 c0       	rjmp	.+134    	; 0x244 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	41 c0       	rjmp	.+130    	; 0x244 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	3f c0       	rjmp	.+126    	; 0x244 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	3d c0       	rjmp	.+122    	; 0x244 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	3b c0       	rjmp	.+118    	; 0x244 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	39 c0       	rjmp	.+114    	; 0x244 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	37 c0       	rjmp	.+110    	; 0x244 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	35 c0       	rjmp	.+106    	; 0x244 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	33 c0       	rjmp	.+102    	; 0x244 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	31 c0       	rjmp	.+98     	; 0x244 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	2f c0       	rjmp	.+94     	; 0x244 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	2d c0       	rjmp	.+90     	; 0x244 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	2b c0       	rjmp	.+86     	; 0x244 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	29 c0       	rjmp	.+82     	; 0x244 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	27 c0       	rjmp	.+78     	; 0x244 <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	25 c0       	rjmp	.+74     	; 0x244 <__bad_interrupt>
	...

000001fc <__ctors_end>:
     1fc:	11 24       	eor	r1, r1
     1fe:	1f be       	out	0x3f, r1	; 63
     200:	cf ef       	ldi	r28, 0xFF	; 255
     202:	df e3       	ldi	r29, 0x3F	; 63
     204:	de bf       	out	0x3e, r29	; 62
     206:	cd bf       	out	0x3d, r28	; 61
     208:	00 e0       	ldi	r16, 0x00	; 0
     20a:	0c bf       	out	0x3c, r16	; 60
     20c:	18 be       	out	0x38, r1	; 56
     20e:	19 be       	out	0x39, r1	; 57
     210:	1a be       	out	0x3a, r1	; 58
     212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
     214:	10 e2       	ldi	r17, 0x20	; 32
     216:	a0 e0       	ldi	r26, 0x00	; 0
     218:	b0 e2       	ldi	r27, 0x20	; 32
     21a:	e4 ed       	ldi	r30, 0xD4	; 212
     21c:	f1 e1       	ldi	r31, 0x11	; 17
     21e:	00 e0       	ldi	r16, 0x00	; 0
     220:	0b bf       	out	0x3b, r16	; 59
     222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
     224:	07 90       	elpm	r0, Z+
     226:	0d 92       	st	X+, r0
     228:	a6 30       	cpi	r26, 0x06	; 6
     22a:	b1 07       	cpc	r27, r17
     22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
     22e:	1b be       	out	0x3b, r1	; 59

00000230 <__do_clear_bss>:
     230:	22 e2       	ldi	r18, 0x22	; 34
     232:	a6 e0       	ldi	r26, 0x06	; 6
     234:	b0 e2       	ldi	r27, 0x20	; 32
     236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
     238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
     23a:	a3 31       	cpi	r26, 0x13	; 19
     23c:	b2 07       	cpc	r27, r18
     23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
     240:	93 d0       	rcall	.+294    	; 0x368 <main>
     242:	c6 c7       	rjmp	.+3980   	; 0x11d0 <_exit>

00000244 <__bad_interrupt>:
     244:	dd ce       	rjmp	.-582    	; 0x0 <__vectors>

00000246 <__vector_88>:
/*!
 *  \brief Interrupt Service Routine for receiving with UARTD0.
 *         This ISR is only defined if the macro ENABLE_UART_D0 is defined.
 */
ISR(USARTD0_RXC_vect)
{
     246:	1f 92       	push	r1
     248:	0f 92       	push	r0
     24a:	0f b6       	in	r0, 0x3f	; 63
     24c:	0f 92       	push	r0
     24e:	11 24       	eor	r1, r1
     250:	08 b6       	in	r0, 0x38	; 56
     252:	0f 92       	push	r0
     254:	18 be       	out	0x38, r1	; 56
     256:	09 b6       	in	r0, 0x39	; 57
     258:	0f 92       	push	r0
     25a:	19 be       	out	0x39, r1	; 57
     25c:	0b b6       	in	r0, 0x3b	; 59
     25e:	0f 92       	push	r0
     260:	1b be       	out	0x3b, r1	; 59
     262:	2f 93       	push	r18
     264:	3f 93       	push	r19
     266:	4f 93       	push	r20
     268:	5f 93       	push	r21
     26a:	6f 93       	push	r22
     26c:	7f 93       	push	r23
     26e:	8f 93       	push	r24
     270:	9f 93       	push	r25
     272:	af 93       	push	r26
     274:	bf 93       	push	r27
     276:	ef 93       	push	r30
     278:	ff 93       	push	r31
  USART_RXComplete(&uartD0);
     27a:	86 e0       	ldi	r24, 0x06	; 6
     27c:	90 e2       	ldi	r25, 0x20	; 32
     27e:	77 d2       	rcall	.+1262   	; 0x76e <USART_RXComplete>
}
     280:	ff 91       	pop	r31
     282:	ef 91       	pop	r30
     284:	bf 91       	pop	r27
     286:	af 91       	pop	r26
     288:	9f 91       	pop	r25
     28a:	8f 91       	pop	r24
     28c:	7f 91       	pop	r23
     28e:	6f 91       	pop	r22
     290:	5f 91       	pop	r21
     292:	4f 91       	pop	r20
     294:	3f 91       	pop	r19
     296:	2f 91       	pop	r18
     298:	0f 90       	pop	r0
     29a:	0b be       	out	0x3b, r0	; 59
     29c:	0f 90       	pop	r0
     29e:	09 be       	out	0x39, r0	; 57
     2a0:	0f 90       	pop	r0
     2a2:	08 be       	out	0x38, r0	; 56
     2a4:	0f 90       	pop	r0
     2a6:	0f be       	out	0x3f, r0	; 63
     2a8:	0f 90       	pop	r0
     2aa:	1f 90       	pop	r1
     2ac:	18 95       	reti

000002ae <__vector_89>:
/*!
 *  \brief Interrupt Service Routine for transmitting with UARTD0.
 *         This ISR is only defined if the macro ENABLE_UART_D0 is defined.
 */
ISR(USARTD0_DRE_vect)
{
     2ae:	1f 92       	push	r1
     2b0:	0f 92       	push	r0
     2b2:	0f b6       	in	r0, 0x3f	; 63
     2b4:	0f 92       	push	r0
     2b6:	11 24       	eor	r1, r1
     2b8:	08 b6       	in	r0, 0x38	; 56
     2ba:	0f 92       	push	r0
     2bc:	18 be       	out	0x38, r1	; 56
     2be:	09 b6       	in	r0, 0x39	; 57
     2c0:	0f 92       	push	r0
     2c2:	19 be       	out	0x39, r1	; 57
     2c4:	0b b6       	in	r0, 0x3b	; 59
     2c6:	0f 92       	push	r0
     2c8:	1b be       	out	0x3b, r1	; 59
     2ca:	2f 93       	push	r18
     2cc:	3f 93       	push	r19
     2ce:	4f 93       	push	r20
     2d0:	5f 93       	push	r21
     2d2:	6f 93       	push	r22
     2d4:	7f 93       	push	r23
     2d6:	8f 93       	push	r24
     2d8:	9f 93       	push	r25
     2da:	af 93       	push	r26
     2dc:	bf 93       	push	r27
     2de:	ef 93       	push	r30
     2e0:	ff 93       	push	r31
  USART_DataRegEmpty(&uartD0);
     2e2:	86 e0       	ldi	r24, 0x06	; 6
     2e4:	90 e2       	ldi	r25, 0x20	; 32
     2e6:	60 d2       	rcall	.+1216   	; 0x7a8 <USART_DataRegEmpty>
}
     2e8:	ff 91       	pop	r31
     2ea:	ef 91       	pop	r30
     2ec:	bf 91       	pop	r27
     2ee:	af 91       	pop	r26
     2f0:	9f 91       	pop	r25
     2f2:	8f 91       	pop	r24
     2f4:	7f 91       	pop	r23
     2f6:	6f 91       	pop	r22
     2f8:	5f 91       	pop	r21
     2fa:	4f 91       	pop	r20
     2fc:	3f 91       	pop	r19
     2fe:	2f 91       	pop	r18
     300:	0f 90       	pop	r0
     302:	0b be       	out	0x3b, r0	; 59
     304:	0f 90       	pop	r0
     306:	09 be       	out	0x39, r0	; 57
     308:	0f 90       	pop	r0
     30a:	08 be       	out	0x38, r0	; 56
     30c:	0f 90       	pop	r0
     30e:	0f be       	out	0x3f, r0	; 63
     310:	0f 90       	pop	r0
     312:	1f 90       	pop	r1
     314:	18 95       	reti

00000316 <set_adcch_input>:
  int line;
  int line1;
 
   void set_adcch_input(ADC_CH_t *ch, uint8_t pos_pin_gc, uint8_t neg_pin_gc)
   {
	   ch->MUXCTRL = pos_pin_gc | neg_pin_gc;
     316:	64 2b       	or	r22, r20
     318:	fc 01       	movw	r30, r24
     31a:	61 83       	std	Z+1, r22	; 0x01
	   ch->CTRL = ADC_CH_INPUTMODE_SINGLEENDED_gc;
     31c:	21 e0       	ldi	r18, 0x01	; 1
     31e:	20 83       	st	Z, r18
     320:	08 95       	ret

00000322 <init_adc>:
   }
   void init_adc(void)
   {
	   PORTA.DIRCLR = PIN3_bm|PIN2_bm|PIN1_bm|PIN0_bm; // PA3..0 are input
     322:	8f e0       	ldi	r24, 0x0F	; 15
     324:	e0 e0       	ldi	r30, 0x00	; 0
     326:	f6 e0       	ldi	r31, 0x06	; 6
     328:	82 83       	std	Z+2, r24	; 0x02
	   set_adcch_input(&ADCA.CH0, ADC_CH_MUXPOS_PIN1_gc, ADC_CH_MUXNEG_INTGND_gc);
     32a:	47 e0       	ldi	r20, 0x07	; 7
     32c:	68 e0       	ldi	r22, 0x08	; 8
     32e:	80 e2       	ldi	r24, 0x20	; 32
     330:	92 e0       	ldi	r25, 0x02	; 2
     332:	f1 df       	rcall	.-30     	; 0x316 <set_adcch_input>
	   set_adcch_input(&ADCA.CH1, ADC_CH_MUXPOS_PIN2_gc, ADC_CH_MUXNEG_INTGND_gc);
     334:	47 e0       	ldi	r20, 0x07	; 7
     336:	60 e1       	ldi	r22, 0x10	; 16
     338:	88 e2       	ldi	r24, 0x28	; 40
     33a:	92 e0       	ldi	r25, 0x02	; 2
     33c:	ec df       	rcall	.-40     	; 0x316 <set_adcch_input>
	   set_adcch_input(&ADCA.CH2, ADC_CH_MUXPOS_PIN3_gc, ADC_CH_MUXNEG_INTGND_gc);
     33e:	47 e0       	ldi	r20, 0x07	; 7
     340:	68 e1       	ldi	r22, 0x18	; 24
     342:	80 e3       	ldi	r24, 0x30	; 48
     344:	92 e0       	ldi	r25, 0x02	; 2
     346:	e7 df       	rcall	.-50     	; 0x316 <set_adcch_input>
	   set_adcch_input(&ADCA.CH3, ADC_CH_MUXPOS_PIN4_gc, ADC_CH_MUXNEG_INTGND_gc);
     348:	47 e0       	ldi	r20, 0x07	; 7
     34a:	60 e2       	ldi	r22, 0x20	; 32
     34c:	88 e3       	ldi	r24, 0x38	; 56
     34e:	92 e0       	ldi	r25, 0x02	; 2
     350:	e2 df       	rcall	.-60     	; 0x316 <set_adcch_input>
	   ADCA.CTRLB = ADC_RESOLUTION_12BIT_gc |
     352:	e0 e0       	ldi	r30, 0x00	; 0
     354:	f2 e0       	ldi	r31, 0x02	; 2
     356:	88 e0       	ldi	r24, 0x08	; 8
     358:	81 83       	std	Z+1, r24	; 0x01
	   (!ADC_CONMODE_bm) |
	   ADC_FREERUN_bm; // free running mode
	   ADCA.REFCTRL = ADC_REFSEL_AREFA_gc;
     35a:	80 e2       	ldi	r24, 0x20	; 32
     35c:	82 83       	std	Z+2, r24	; 0x02
	   ADCA.PRESCALER = ADC_PRESCALER_DIV512_gc;
     35e:	87 e0       	ldi	r24, 0x07	; 7
     360:	84 83       	std	Z+4, r24	; 0x04
	   ADCA.CTRLA = ADC_ENABLE_bm;
     362:	81 e0       	ldi	r24, 0x01	; 1
     364:	80 83       	st	Z, r24
     366:	08 95       	ret

00000368 <main>:
	   //ADCA.EVCTRL = ADC_SWEEP_0123_gc|ADC_EVSEL_0123_gc|ADC_EVACT_NONE_gc;
   }
   
int main(void)
{
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	cd b7       	in	r28, 0x3d	; 61
     36e:	de b7       	in	r29, 0x3e	; 62
     370:	da 95       	dec	r29
     372:	cd bf       	out	0x3d, r28	; 61
     374:	de bf       	out	0x3e, r29	; 62
	char str[256];
	init_adc();
     376:	d5 df       	rcall	.-86     	; 0x322 <init_adc>
	init_uart(&uartD0, &USARTD0, F_CPU, D0_BAUD, D0_CLK2X);
     378:	c1 2c       	mov	r12, r1
     37a:	e1 2c       	mov	r14, r1
     37c:	12 ec       	ldi	r17, 0xC2	; 194
     37e:	f1 2e       	mov	r15, r17
     380:	01 e0       	ldi	r16, 0x01	; 1
     382:	10 e0       	ldi	r17, 0x00	; 0
     384:	20 e8       	ldi	r18, 0x80	; 128
     386:	34 e8       	ldi	r19, 0x84	; 132
     388:	4e e1       	ldi	r20, 0x1E	; 30
     38a:	50 e0       	ldi	r21, 0x00	; 0
     38c:	60 ea       	ldi	r22, 0xA0	; 160
     38e:	79 e0       	ldi	r23, 0x09	; 9
     390:	86 e0       	ldi	r24, 0x06	; 6
     392:	90 e2       	ldi	r25, 0x20	; 32
     394:	4e d1       	rcall	.+668    	; 0x632 <init_uart>
	PMIC.CTRL = PMIC_LOLVLEN_bm;
     396:	81 e0       	ldi	r24, 0x01	; 1
     398:	e0 ea       	ldi	r30, 0xA0	; 160
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	82 83       	std	Z+2, r24	; 0x02
	sei();
     39e:	78 94       	sei
	
	while(1)
	{
		uint16_t ch0_value = ADCA.CH0.RES;	
     3a0:	c1 2c       	mov	r12, r1
     3a2:	68 94       	set
     3a4:	dd 24       	eor	r13, r13
     3a6:	d1 f8       	bld	r13, 1
		sprintf(str, "%d\r\n", ch0_value);
     3a8:	0f 2e       	mov	r0, r31
     3aa:	f0 e0       	ldi	r31, 0x00	; 0
     3ac:	ef 2e       	mov	r14, r31
     3ae:	f0 e2       	ldi	r31, 0x20	; 32
     3b0:	ff 2e       	mov	r15, r31
     3b2:	f0 2d       	mov	r31, r0
     3b4:	8e 01       	movw	r16, r28
     3b6:	0f 5f       	subi	r16, 0xFF	; 255
     3b8:	1f 4f       	sbci	r17, 0xFF	; 255
	PMIC.CTRL = PMIC_LOLVLEN_bm;
	sei();
	
	while(1)
	{
		uint16_t ch0_value = ADCA.CH0.RES;	
     3ba:	f6 01       	movw	r30, r12
     3bc:	84 a1       	ldd	r24, Z+36	; 0x24
     3be:	95 a1       	ldd	r25, Z+37	; 0x25
		sprintf(str, "%d\r\n", ch0_value);
     3c0:	9f 93       	push	r25
     3c2:	8f 93       	push	r24
     3c4:	ff 92       	push	r15
     3c6:	ef 92       	push	r14
     3c8:	1f 93       	push	r17
     3ca:	0f 93       	push	r16
     3cc:	47 d4       	rcall	.+2190   	; 0xc5c <sprintf>
		uart_puts(&uartD0, str);
     3ce:	b8 01       	movw	r22, r16
     3d0:	86 e0       	ldi	r24, 0x06	; 6
     3d2:	90 e2       	ldi	r25, 0x20	; 32
     3d4:	1c d0       	rcall	.+56     	; 0x40e <uart_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3d6:	87 ea       	ldi	r24, 0xA7	; 167
     3d8:	91 e6       	ldi	r25, 0x61	; 97
     3da:	01 97       	sbiw	r24, 0x01	; 1
     3dc:	f1 f7       	brne	.-4      	; 0x3da <main+0x72>
     3de:	00 c0       	rjmp	.+0      	; 0x3e0 <main+0x78>
     3e0:	00 00       	nop
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	0f 90       	pop	r0
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
     3ee:	e5 cf       	rjmp	.-54     	; 0x3ba <main+0x52>

000003f0 <uart_putc>:
 *  \param  data      byte to be written
 *
 *  \return void
 */
void uart_putc(USART_data_t *uart, uint8_t data)
{
     3f0:	1f 93       	push	r17
     3f2:	cf 93       	push	r28
     3f4:	df 93       	push	r29
     3f6:	ec 01       	movw	r28, r24
     3f8:	16 2f       	mov	r17, r22
  if ( USART_TXBuffer_FreeSpace(uart) ) {
     3fa:	8c d1       	rcall	.+792    	; 0x714 <USART_TXBuffer_FreeSpace>
     3fc:	88 23       	and	r24, r24
     3fe:	19 f0       	breq	.+6      	; 0x406 <uart_putc+0x16>
    USART_TXBuffer_PutByte(uart, data);
     400:	61 2f       	mov	r22, r17
     402:	ce 01       	movw	r24, r28
     404:	95 d1       	rcall	.+810    	; 0x730 <USART_TXBuffer_PutByte>
  }
}
     406:	df 91       	pop	r29
     408:	cf 91       	pop	r28
     40a:	1f 91       	pop	r17
     40c:	08 95       	ret

0000040e <uart_puts>:
 *  \param  s         pointer to string to be written
 *
 *  \return void
 */
void uart_puts(USART_data_t *uart, char *s)
{
     40e:	0f 93       	push	r16
     410:	1f 93       	push	r17
     412:	cf 93       	push	r28
     414:	df 93       	push	r29
     416:	8c 01       	movw	r16, r24
  char c;

  while ( (c = *s++) ) {
     418:	c6 2f       	mov	r28, r22
     41a:	d7 2f       	mov	r29, r23
     41c:	69 91       	ld	r22, Y+
     41e:	66 23       	and	r22, r22
     420:	29 f0       	breq	.+10     	; 0x42c <uart_puts+0x1e>
    uart_putc(uart, c);
     422:	c8 01       	movw	r24, r16
     424:	e5 df       	rcall	.-54     	; 0x3f0 <uart_putc>
 */
void uart_puts(USART_data_t *uart, char *s)
{
  char c;

  while ( (c = *s++) ) {
     426:	69 91       	ld	r22, Y+
     428:	61 11       	cpse	r22, r1
     42a:	fb cf       	rjmp	.-10     	; 0x422 <uart_puts+0x14>
    uart_putc(uart, c);
  }
}
     42c:	df 91       	pop	r29
     42e:	cf 91       	pop	r28
     430:	1f 91       	pop	r17
     432:	0f 91       	pop	r16
     434:	08 95       	ret

00000436 <set_usart_txrx_direction>:
 *  \return void
 */
void set_usart_txrx_direction(USART_t *usart)
{
  #ifdef USARTC0
   if ( (uint16_t) usart == (uint16_t) &USARTC0 ) {
     436:	80 3a       	cpi	r24, 0xA0	; 160
     438:	28 e0       	ldi	r18, 0x08	; 8
     43a:	92 07       	cpc	r25, r18
     43c:	39 f4       	brne	.+14     	; 0x44c <set_usart_txrx_direction+0x16>
     PORTC.DIRSET      = PIN3_bm;
     43e:	e0 e4       	ldi	r30, 0x40	; 64
     440:	f6 e0       	ldi	r31, 0x06	; 6
     442:	88 e0       	ldi	r24, 0x08	; 8
     444:	81 83       	std	Z+1, r24	; 0x01
     PORTC.DIRCLR      = PIN2_bm;
     446:	84 e0       	ldi	r24, 0x04	; 4
     448:	82 83       	std	Z+2, r24	; 0x02
     return;
     44a:	08 95       	ret
   }
  #endif
  #ifdef USARTC1
   if ( (uint16_t) usart == (uint16_t) &USARTC1 ) {
     44c:	80 3b       	cpi	r24, 0xB0	; 176
     44e:	28 e0       	ldi	r18, 0x08	; 8
     450:	92 07       	cpc	r25, r18
     452:	39 f4       	brne	.+14     	; 0x462 <set_usart_txrx_direction+0x2c>
     PORTC.DIRSET      = PIN7_bm;
     454:	e0 e4       	ldi	r30, 0x40	; 64
     456:	f6 e0       	ldi	r31, 0x06	; 6
     458:	80 e8       	ldi	r24, 0x80	; 128
     45a:	81 83       	std	Z+1, r24	; 0x01
     PORTC.DIRCLR      = PIN6_bm;
     45c:	80 e4       	ldi	r24, 0x40	; 64
     45e:	82 83       	std	Z+2, r24	; 0x02
     return;
     460:	08 95       	ret
   }
  #endif
  #ifdef USARTD0
   if ( (uint16_t) usart == (uint16_t) &USARTD0) {
     462:	80 3a       	cpi	r24, 0xA0	; 160
     464:	29 e0       	ldi	r18, 0x09	; 9
     466:	92 07       	cpc	r25, r18
     468:	39 f4       	brne	.+14     	; 0x478 <set_usart_txrx_direction+0x42>
     PORTD.DIRSET      = PIN3_bm;
     46a:	e0 e6       	ldi	r30, 0x60	; 96
     46c:	f6 e0       	ldi	r31, 0x06	; 6
     46e:	88 e0       	ldi	r24, 0x08	; 8
     470:	81 83       	std	Z+1, r24	; 0x01
     PORTD.DIRCLR      = PIN2_bm;
     472:	84 e0       	ldi	r24, 0x04	; 4
     474:	82 83       	std	Z+2, r24	; 0x02
     return;
     476:	08 95       	ret
   }
  #endif
  #ifdef USARTD1
   if ( (uint16_t) usart == (uint16_t) &USARTD1 ) {
     478:	80 3b       	cpi	r24, 0xB0	; 176
     47a:	29 e0       	ldi	r18, 0x09	; 9
     47c:	92 07       	cpc	r25, r18
     47e:	39 f4       	brne	.+14     	; 0x48e <set_usart_txrx_direction+0x58>
     PORTD.DIRSET      = PIN7_bm;
     480:	e0 e6       	ldi	r30, 0x60	; 96
     482:	f6 e0       	ldi	r31, 0x06	; 6
     484:	80 e8       	ldi	r24, 0x80	; 128
     486:	81 83       	std	Z+1, r24	; 0x01
     PORTD.DIRCLR      = PIN6_bm;
     488:	80 e4       	ldi	r24, 0x40	; 64
     48a:	82 83       	std	Z+2, r24	; 0x02
     return;
     48c:	08 95       	ret
   }
  #endif
  #ifdef USARTE0
   if ( (uint16_t) usart == (uint16_t) &USARTE0) {
     48e:	80 3a       	cpi	r24, 0xA0	; 160
     490:	9a 40       	sbci	r25, 0x0A	; 10
     492:	31 f4       	brne	.+12     	; 0x4a0 <set_usart_txrx_direction+0x6a>
     PORTE.DIRSET      = PIN3_bm;
     494:	e0 e8       	ldi	r30, 0x80	; 128
     496:	f6 e0       	ldi	r31, 0x06	; 6
     498:	88 e0       	ldi	r24, 0x08	; 8
     49a:	81 83       	std	Z+1, r24	; 0x01
     PORTE.DIRCLR      = PIN2_bm;
     49c:	84 e0       	ldi	r24, 0x04	; 4
     49e:	82 83       	std	Z+2, r24	; 0x02
     4a0:	08 95       	ret

000004a2 <calc_bsel>:
 *  N is a factor which is 16 with no clock doubling and 8 with clock doubling
 *
 *  \return the calculated BSEL
 */
uint16_t calc_bsel(uint32_t f_cpu, uint32_t baud, int8_t scale, uint8_t clk2x)
{
     4a2:	4f 92       	push	r4
     4a4:	5f 92       	push	r5
     4a6:	6f 92       	push	r6
     4a8:	7f 92       	push	r7
     4aa:	8f 92       	push	r8
     4ac:	9f 92       	push	r9
     4ae:	af 92       	push	r10
     4b0:	bf 92       	push	r11
     4b2:	cf 92       	push	r12
     4b4:	df 92       	push	r13
     4b6:	ef 92       	push	r14
     4b8:	ff 92       	push	r15
     4ba:	0f 93       	push	r16
     4bc:	1f 93       	push	r17
     4be:	49 01       	movw	r8, r18
     4c0:	5a 01       	movw	r10, r20
  uint8_t factor = 16;

  factor = factor >> (clk2x & 0x01);
     4c2:	4e 2d       	mov	r20, r14
     4c4:	41 70       	andi	r20, 0x01	; 1
     4c6:	20 e1       	ldi	r18, 0x10	; 16
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	79 01       	movw	r14, r18
     4cc:	02 c0       	rjmp	.+4      	; 0x4d2 <calc_bsel+0x30>
     4ce:	f5 94       	asr	r15
     4d0:	e7 94       	ror	r14
     4d2:	4a 95       	dec	r20
     4d4:	e2 f7       	brpl	.-8      	; 0x4ce <calc_bsel+0x2c>
  if ( scale < 0 ) {
     4d6:	00 23       	and	r16, r16
     4d8:	0c f0       	brlt	.+2      	; 0x4dc <calc_bsel+0x3a>
     4da:	3a c0       	rjmp	.+116    	; 0x550 <calc_bsel+0xae>
    return round(  (((double)(f_cpu)/(factor*(double)(baud))) - 1) * (1<<-(scale))  );
     4dc:	85 d2       	rcall	.+1290   	; 0x9e8 <__floatunsisf>
     4de:	2b 01       	movw	r4, r22
     4e0:	3c 01       	movw	r6, r24
     4e2:	b7 01       	movw	r22, r14
     4e4:	77 27       	eor	r23, r23
     4e6:	88 27       	eor	r24, r24
     4e8:	77 fd       	sbrc	r23, 7
     4ea:	80 95       	com	r24
     4ec:	98 2f       	mov	r25, r24
     4ee:	7e d2       	rcall	.+1276   	; 0x9ec <__floatsisf>
     4f0:	6b 01       	movw	r12, r22
     4f2:	7c 01       	movw	r14, r24
     4f4:	c5 01       	movw	r24, r10
     4f6:	b4 01       	movw	r22, r8
     4f8:	77 d2       	rcall	.+1262   	; 0x9e8 <__floatunsisf>
     4fa:	9b 01       	movw	r18, r22
     4fc:	ac 01       	movw	r20, r24
     4fe:	c7 01       	movw	r24, r14
     500:	b6 01       	movw	r22, r12
     502:	00 d3       	rcall	.+1536   	; 0xb04 <__mulsf3>
     504:	9b 01       	movw	r18, r22
     506:	ac 01       	movw	r20, r24
     508:	c3 01       	movw	r24, r6
     50a:	b2 01       	movw	r22, r4
     50c:	d9 d1       	rcall	.+946    	; 0x8c0 <__divsf3>
     50e:	20 e0       	ldi	r18, 0x00	; 0
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	40 e8       	ldi	r20, 0x80	; 128
     514:	5f e3       	ldi	r21, 0x3F	; 63
     516:	6f d1       	rcall	.+734    	; 0x7f6 <__subsf3>
     518:	6b 01       	movw	r12, r22
     51a:	7c 01       	movw	r14, r24
     51c:	11 27       	eor	r17, r17
     51e:	01 95       	neg	r16
     520:	0c f4       	brge	.+2      	; 0x524 <calc_bsel+0x82>
     522:	10 95       	com	r17
     524:	61 e0       	ldi	r22, 0x01	; 1
     526:	70 e0       	ldi	r23, 0x00	; 0
     528:	02 c0       	rjmp	.+4      	; 0x52e <calc_bsel+0x8c>
     52a:	66 0f       	add	r22, r22
     52c:	77 1f       	adc	r23, r23
     52e:	0a 95       	dec	r16
     530:	e2 f7       	brpl	.-8      	; 0x52a <calc_bsel+0x88>
     532:	88 27       	eor	r24, r24
     534:	77 fd       	sbrc	r23, 7
     536:	80 95       	com	r24
     538:	98 2f       	mov	r25, r24
     53a:	58 d2       	rcall	.+1200   	; 0x9ec <__floatsisf>
     53c:	9b 01       	movw	r18, r22
     53e:	ac 01       	movw	r20, r24
     540:	c7 01       	movw	r24, r14
     542:	b6 01       	movw	r22, r12
     544:	df d2       	rcall	.+1470   	; 0xb04 <__mulsf3>
     546:	41 d3       	rcall	.+1666   	; 0xbca <round>
     548:	23 d2       	rcall	.+1094   	; 0x990 <__fixunssfsi>
     54a:	86 2f       	mov	r24, r22
     54c:	97 2f       	mov	r25, r23
     54e:	35 c0       	rjmp	.+106    	; 0x5ba <calc_bsel+0x118>
  } else {
    return round(  ((double)(f_cpu)/(factor*(double)(baud))/(1<<(scale))) - 1);
     550:	4b d2       	rcall	.+1174   	; 0x9e8 <__floatunsisf>
     552:	2b 01       	movw	r4, r22
     554:	3c 01       	movw	r6, r24
     556:	b7 01       	movw	r22, r14
     558:	77 27       	eor	r23, r23
     55a:	88 27       	eor	r24, r24
     55c:	77 fd       	sbrc	r23, 7
     55e:	80 95       	com	r24
     560:	98 2f       	mov	r25, r24
     562:	44 d2       	rcall	.+1160   	; 0x9ec <__floatsisf>
     564:	6b 01       	movw	r12, r22
     566:	7c 01       	movw	r14, r24
     568:	c5 01       	movw	r24, r10
     56a:	b4 01       	movw	r22, r8
     56c:	3d d2       	rcall	.+1146   	; 0x9e8 <__floatunsisf>
     56e:	9b 01       	movw	r18, r22
     570:	ac 01       	movw	r20, r24
     572:	c7 01       	movw	r24, r14
     574:	b6 01       	movw	r22, r12
     576:	c6 d2       	rcall	.+1420   	; 0xb04 <__mulsf3>
     578:	9b 01       	movw	r18, r22
     57a:	ac 01       	movw	r20, r24
     57c:	c3 01       	movw	r24, r6
     57e:	b2 01       	movw	r22, r4
     580:	9f d1       	rcall	.+830    	; 0x8c0 <__divsf3>
     582:	4b 01       	movw	r8, r22
     584:	5c 01       	movw	r10, r24
     586:	61 e0       	ldi	r22, 0x01	; 1
     588:	70 e0       	ldi	r23, 0x00	; 0
     58a:	02 c0       	rjmp	.+4      	; 0x590 <calc_bsel+0xee>
     58c:	66 0f       	add	r22, r22
     58e:	77 1f       	adc	r23, r23
     590:	0a 95       	dec	r16
     592:	e2 f7       	brpl	.-8      	; 0x58c <calc_bsel+0xea>
     594:	88 27       	eor	r24, r24
     596:	77 fd       	sbrc	r23, 7
     598:	80 95       	com	r24
     59a:	98 2f       	mov	r25, r24
     59c:	27 d2       	rcall	.+1102   	; 0x9ec <__floatsisf>
     59e:	9b 01       	movw	r18, r22
     5a0:	ac 01       	movw	r20, r24
     5a2:	c5 01       	movw	r24, r10
     5a4:	b4 01       	movw	r22, r8
     5a6:	8c d1       	rcall	.+792    	; 0x8c0 <__divsf3>
     5a8:	20 e0       	ldi	r18, 0x00	; 0
     5aa:	30 e0       	ldi	r19, 0x00	; 0
     5ac:	40 e8       	ldi	r20, 0x80	; 128
     5ae:	5f e3       	ldi	r21, 0x3F	; 63
     5b0:	22 d1       	rcall	.+580    	; 0x7f6 <__subsf3>
     5b2:	0b d3       	rcall	.+1558   	; 0xbca <round>
     5b4:	ed d1       	rcall	.+986    	; 0x990 <__fixunssfsi>
     5b6:	86 2f       	mov	r24, r22
     5b8:	97 2f       	mov	r25, r23
  }
}
     5ba:	1f 91       	pop	r17
     5bc:	0f 91       	pop	r16
     5be:	ff 90       	pop	r15
     5c0:	ef 90       	pop	r14
     5c2:	df 90       	pop	r13
     5c4:	cf 90       	pop	r12
     5c6:	bf 90       	pop	r11
     5c8:	af 90       	pop	r10
     5ca:	9f 90       	pop	r9
     5cc:	8f 90       	pop	r8
     5ce:	7f 90       	pop	r7
     5d0:	6f 90       	pop	r6
     5d2:	5f 90       	pop	r5
     5d4:	4f 90       	pop	r4
     5d6:	08 95       	ret

000005d8 <calc_bscale>:
 *  and a boolean for clock doubling.
 *
 *  \return the scale factor BSCALE
 */
int8_t calc_bscale(uint32_t f_cpu, uint32_t baud, uint8_t clk2x)
{
     5d8:	4f 92       	push	r4
     5da:	5f 92       	push	r5
     5dc:	6f 92       	push	r6
     5de:	7f 92       	push	r7
     5e0:	8f 92       	push	r8
     5e2:	9f 92       	push	r9
     5e4:	af 92       	push	r10
     5e6:	bf 92       	push	r11
     5e8:	ef 92       	push	r14
     5ea:	0f 93       	push	r16
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	2b 01       	movw	r4, r22
     5f2:	3c 01       	movw	r6, r24
     5f4:	49 01       	movw	r8, r18
     5f6:	5a 01       	movw	r10, r20
     5f8:	d0 2f       	mov	r29, r16
  int8_t   bscale;
  uint16_t bsel;

  for (bscale = -7; bscale<8; bscale++) {
     5fa:	c9 ef       	ldi	r28, 0xF9	; 249
    if ( (bsel = calc_bsel(f_cpu, baud, bscale, clk2x)) < 4096 ) return bscale;
     5fc:	ed 2e       	mov	r14, r29
     5fe:	0c 2f       	mov	r16, r28
     600:	a5 01       	movw	r20, r10
     602:	94 01       	movw	r18, r8
     604:	c3 01       	movw	r24, r6
     606:	b2 01       	movw	r22, r4
     608:	4c df       	rcall	.-360    	; 0x4a2 <calc_bsel>
     60a:	81 15       	cp	r24, r1
     60c:	90 41       	sbci	r25, 0x10	; 16
     60e:	18 f0       	brcs	.+6      	; 0x616 <calc_bscale+0x3e>
int8_t calc_bscale(uint32_t f_cpu, uint32_t baud, uint8_t clk2x)
{
  int8_t   bscale;
  uint16_t bsel;

  for (bscale = -7; bscale<8; bscale++) {
     610:	cf 5f       	subi	r28, 0xFF	; 255
     612:	c8 30       	cpi	r28, 0x08	; 8
     614:	99 f7       	brne	.-26     	; 0x5fc <calc_bscale+0x24>
    if ( (bsel = calc_bsel(f_cpu, baud, bscale, clk2x)) < 4096 ) return bscale;
  }

  return bscale;
}
     616:	8c 2f       	mov	r24, r28
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	0f 91       	pop	r16
     61e:	ef 90       	pop	r14
     620:	bf 90       	pop	r11
     622:	af 90       	pop	r10
     624:	9f 90       	pop	r9
     626:	8f 90       	pop	r8
     628:	7f 90       	pop	r7
     62a:	6f 90       	pop	r6
     62c:	5f 90       	pop	r5
     62e:	4f 90       	pop	r4
     630:	08 95       	ret

00000632 <init_uart>:
 *  are both set to a low level.
 *
 *  \return void
 */
void init_uart(USART_data_t *uart, USART_t *usart, uint32_t f_cpu, uint32_t baud, uint8_t clk2x)
{
     632:	2f 92       	push	r2
     634:	3f 92       	push	r3
     636:	4f 92       	push	r4
     638:	5f 92       	push	r5
     63a:	6f 92       	push	r6
     63c:	7f 92       	push	r7
     63e:	8f 92       	push	r8
     640:	9f 92       	push	r9
     642:	af 92       	push	r10
     644:	bf 92       	push	r11
     646:	cf 92       	push	r12
     648:	ef 92       	push	r14
     64a:	ff 92       	push	r15
     64c:	0f 93       	push	r16
     64e:	1f 93       	push	r17
     650:	cf 93       	push	r28
     652:	df 93       	push	r29
     654:	ec 01       	movw	r28, r24
     656:	3b 01       	movw	r6, r22
     658:	49 01       	movw	r8, r18
     65a:	5a 01       	movw	r10, r20
     65c:	17 01       	movw	r2, r14
     65e:	28 01       	movw	r4, r16
     660:	ec 2c       	mov	r14, r12
  uint16_t bsel;
  int8_t bscale;

  bscale = calc_bscale(f_cpu, baud, clk2x);
     662:	0c 2d       	mov	r16, r12
     664:	a2 01       	movw	r20, r4
     666:	91 01       	movw	r18, r2
     668:	c5 01       	movw	r24, r10
     66a:	b4 01       	movw	r22, r8
     66c:	b5 df       	rcall	.-150    	; 0x5d8 <calc_bscale>
     66e:	18 2f       	mov	r17, r24
  bsel   = calc_bsel(f_cpu, baud, bscale, clk2x);
     670:	08 2f       	mov	r16, r24
     672:	a2 01       	movw	r20, r4
     674:	91 01       	movw	r18, r2
     676:	c5 01       	movw	r24, r10
     678:	b4 01       	movw	r22, r8
     67a:	13 df       	rcall	.-474    	; 0x4a2 <calc_bsel>
     67c:	b8 2e       	mov	r11, r24
     67e:	e9 2e       	mov	r14, r25

  USART_InterruptDriver_Initialize(uart, usart, USART_DREINTLVL_LO_gc);
     680:	41 e0       	ldi	r20, 0x01	; 1
     682:	b3 01       	movw	r22, r6
     684:	ce 01       	movw	r24, r28
     686:	32 d0       	rcall	.+100    	; 0x6ec <USART_InterruptDriver_Initialize>
  USART_Format_Set(uart->usart, USART_CHSIZE_8BIT_gc, USART_PMODE_DISABLED_gc, !USART_SBMODE_bm);
     688:	e8 81       	ld	r30, Y
     68a:	f9 81       	ldd	r31, Y+1	; 0x01
     68c:	83 e0       	ldi	r24, 0x03	; 3
     68e:	85 83       	std	Z+5, r24	; 0x05
  USART_Rx_Enable(uart->usart);
     690:	e8 81       	ld	r30, Y
     692:	f9 81       	ldd	r31, Y+1	; 0x01
     694:	84 81       	ldd	r24, Z+4	; 0x04
     696:	80 61       	ori	r24, 0x10	; 16
     698:	84 83       	std	Z+4, r24	; 0x04
  USART_Tx_Enable(uart->usart);
     69a:	e8 81       	ld	r30, Y
     69c:	f9 81       	ldd	r31, Y+1	; 0x01
     69e:	84 81       	ldd	r24, Z+4	; 0x04
     6a0:	88 60       	ori	r24, 0x08	; 8
     6a2:	84 83       	std	Z+4, r24	; 0x04
  USART_RxdInterruptLevel_Set(uart->usart, USART_RXCINTLVL_LO_gc);
     6a4:	e8 81       	ld	r30, Y
     6a6:	f9 81       	ldd	r31, Y+1	; 0x01
     6a8:	83 81       	ldd	r24, Z+3	; 0x03
     6aa:	8f 7c       	andi	r24, 0xCF	; 207
     6ac:	80 61       	ori	r24, 0x10	; 16
     6ae:	83 83       	std	Z+3, r24	; 0x03
  USART_Baudrate_Set(uart->usart, bsel, bscale);
     6b0:	e8 81       	ld	r30, Y
     6b2:	f9 81       	ldd	r31, Y+1	; 0x01
     6b4:	b6 82       	std	Z+6, r11	; 0x06
     6b6:	e8 81       	ld	r30, Y
     6b8:	f9 81       	ldd	r31, Y+1	; 0x01
     6ba:	12 95       	swap	r17
     6bc:	10 7f       	andi	r17, 0xF0	; 240
     6be:	e1 2a       	or	r14, r17
     6c0:	e7 82       	std	Z+7, r14	; 0x07

  set_usart_txrx_direction(uart->usart);
     6c2:	88 81       	ld	r24, Y
     6c4:	99 81       	ldd	r25, Y+1	; 0x01
     6c6:	b7 de       	rcall	.-658    	; 0x436 <set_usart_txrx_direction>
}
     6c8:	df 91       	pop	r29
     6ca:	cf 91       	pop	r28
     6cc:	1f 91       	pop	r17
     6ce:	0f 91       	pop	r16
     6d0:	ff 90       	pop	r15
     6d2:	ef 90       	pop	r14
     6d4:	cf 90       	pop	r12
     6d6:	bf 90       	pop	r11
     6d8:	af 90       	pop	r10
     6da:	9f 90       	pop	r9
     6dc:	8f 90       	pop	r8
     6de:	7f 90       	pop	r7
     6e0:	6f 90       	pop	r6
     6e2:	5f 90       	pop	r5
     6e4:	4f 90       	pop	r4
     6e6:	3f 90       	pop	r3
     6e8:	2f 90       	pop	r2
     6ea:	08 95       	ret

000006ec <USART_InterruptDriver_Initialize>:

	/* Advance buffer tail. */
	bufPtr->RX_Tail = (bufPtr->RX_Tail + 1) & USART_RX_BUFFER_MASK;

	return ans;
}
     6ec:	fc 01       	movw	r30, r24
     6ee:	60 83       	st	Z, r22
     6f0:	71 83       	std	Z+1, r23	; 0x01
     6f2:	42 83       	std	Z+2, r20	; 0x02
     6f4:	ec 5f       	subi	r30, 0xFC	; 252
     6f6:	fd 4f       	sbci	r31, 0xFD	; 253
     6f8:	10 82       	st	Z, r1
     6fa:	fc 01       	movw	r30, r24
     6fc:	ed 5f       	subi	r30, 0xFD	; 253
     6fe:	fd 4f       	sbci	r31, 0xFD	; 253
     700:	10 82       	st	Z, r1
     702:	fc 01       	movw	r30, r24
     704:	ea 5f       	subi	r30, 0xFA	; 250
     706:	fd 4f       	sbci	r31, 0xFD	; 253
     708:	10 82       	st	Z, r1
     70a:	fc 01       	movw	r30, r24
     70c:	eb 5f       	subi	r30, 0xFB	; 251
     70e:	fd 4f       	sbci	r31, 0xFD	; 253
     710:	10 82       	st	Z, r1
     712:	08 95       	ret

00000714 <USART_TXBuffer_FreeSpace>:
     714:	fc 01       	movw	r30, r24
     716:	eb 5f       	subi	r30, 0xFB	; 251
     718:	fd 4f       	sbci	r31, 0xFD	; 253
     71a:	20 81       	ld	r18, Z
     71c:	fc 01       	movw	r30, r24
     71e:	ea 5f       	subi	r30, 0xFA	; 250
     720:	fd 4f       	sbci	r31, 0xFD	; 253
     722:	90 81       	ld	r25, Z
     724:	2f 5f       	subi	r18, 0xFF	; 255
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	29 13       	cpse	r18, r25
     72a:	01 c0       	rjmp	.+2      	; 0x72e <USART_TXBuffer_FreeSpace+0x1a>
     72c:	80 e0       	ldi	r24, 0x00	; 0
     72e:	08 95       	ret

00000730 <USART_TXBuffer_PutByte>:
     730:	1f 93       	push	r17
     732:	cf 93       	push	r28
     734:	df 93       	push	r29
     736:	ec 01       	movw	r28, r24
     738:	16 2f       	mov	r17, r22
     73a:	ec df       	rcall	.-40     	; 0x714 <USART_TXBuffer_FreeSpace>
     73c:	88 23       	and	r24, r24
     73e:	99 f0       	breq	.+38     	; 0x766 <USART_TXBuffer_PutByte+0x36>
     740:	fe 01       	movw	r30, r28
     742:	eb 5f       	subi	r30, 0xFB	; 251
     744:	fd 4f       	sbci	r31, 0xFD	; 253
     746:	90 81       	ld	r25, Z
     748:	de 01       	movw	r26, r28
     74a:	a9 0f       	add	r26, r25
     74c:	b1 1d       	adc	r27, r1
     74e:	ad 5f       	subi	r26, 0xFD	; 253
     750:	be 4f       	sbci	r27, 0xFE	; 254
     752:	1c 93       	st	X, r17
     754:	9f 5f       	subi	r25, 0xFF	; 255
     756:	90 83       	st	Z, r25
     758:	e8 81       	ld	r30, Y
     75a:	f9 81       	ldd	r31, Y+1	; 0x01
     75c:	93 81       	ldd	r25, Z+3	; 0x03
     75e:	9c 7f       	andi	r25, 0xFC	; 252
     760:	2a 81       	ldd	r18, Y+2	; 0x02
     762:	92 2b       	or	r25, r18
     764:	93 83       	std	Z+3, r25	; 0x03
     766:	df 91       	pop	r29
     768:	cf 91       	pop	r28
     76a:	1f 91       	pop	r17
     76c:	08 95       	ret

0000076e <USART_RXComplete>:
	USART_Buffer_t * bufPtr;
	bool ans;

	bufPtr = &usart_data->buffer;
	/* Advance buffer head. */
	uint8_t tempRX_Head = (bufPtr->RX_Head + 1) & USART_RX_BUFFER_MASK;
     76e:	fc 01       	movw	r30, r24
     770:	ed 5f       	subi	r30, 0xFD	; 253
     772:	fd 4f       	sbci	r31, 0xFD	; 253
     774:	20 81       	ld	r18, Z
     776:	2f 5f       	subi	r18, 0xFF	; 255

	/* Check for overflow. */
	uint8_t tempRX_Tail = bufPtr->RX_Tail;
     778:	fc 01       	movw	r30, r24
     77a:	ec 5f       	subi	r30, 0xFC	; 252
     77c:	fd 4f       	sbci	r31, 0xFD	; 253
     77e:	30 81       	ld	r19, Z
	uint8_t data = usart_data->usart->DATA;
     780:	dc 01       	movw	r26, r24
     782:	ed 91       	ld	r30, X+
     784:	fc 91       	ld	r31, X
     786:	11 97       	sbiw	r26, 0x01	; 1
     788:	40 81       	ld	r20, Z

	if (tempRX_Head == tempRX_Tail) {
     78a:	23 17       	cp	r18, r19
     78c:	59 f0       	breq	.+22     	; 0x7a4 <USART_RXComplete+0x36>
	  	ans = false;
	}else{
		ans = true;
		usart_data->buffer.RX[usart_data->buffer.RX_Head] = data;
     78e:	fc 01       	movw	r30, r24
     790:	ed 5f       	subi	r30, 0xFD	; 253
     792:	fd 4f       	sbci	r31, 0xFD	; 253
     794:	30 81       	ld	r19, Z
     796:	a3 0f       	add	r26, r19
     798:	b1 1d       	adc	r27, r1
     79a:	13 96       	adiw	r26, 0x03	; 3
     79c:	4c 93       	st	X, r20
		usart_data->buffer.RX_Head = tempRX_Head;
     79e:	20 83       	st	Z, r18
	uint8_t data = usart_data->usart->DATA;

	if (tempRX_Head == tempRX_Tail) {
	  	ans = false;
	}else{
		ans = true;
     7a0:	81 e0       	ldi	r24, 0x01	; 1
     7a2:	08 95       	ret
	/* Check for overflow. */
	uint8_t tempRX_Tail = bufPtr->RX_Tail;
	uint8_t data = usart_data->usart->DATA;

	if (tempRX_Head == tempRX_Tail) {
	  	ans = false;
     7a4:	80 e0       	ldi	r24, 0x00	; 0
		ans = true;
		usart_data->buffer.RX[usart_data->buffer.RX_Head] = data;
		usart_data->buffer.RX_Head = tempRX_Head;
	}
	return ans;
}
     7a6:	08 95       	ret

000007a8 <USART_DataRegEmpty>:
 *  is empty. Argument is pointer to USART (USART_data_t).
 *
 *  \param usart_data      The USART_data_t struct instance.
 */
void USART_DataRegEmpty(USART_data_t * usart_data)
{
     7a8:	cf 93       	push	r28
     7aa:	df 93       	push	r29
	USART_Buffer_t * bufPtr;
	bufPtr = &usart_data->buffer;

	/* Check if all data is transmitted. */
	uint8_t tempTX_Tail = usart_data->buffer.TX_Tail;
     7ac:	fc 01       	movw	r30, r24
     7ae:	ea 5f       	subi	r30, 0xFA	; 250
     7b0:	fd 4f       	sbci	r31, 0xFD	; 253
     7b2:	20 81       	ld	r18, Z
	if (bufPtr->TX_Head == tempTX_Tail){
     7b4:	fc 01       	movw	r30, r24
     7b6:	eb 5f       	subi	r30, 0xFB	; 251
     7b8:	fd 4f       	sbci	r31, 0xFD	; 253
     7ba:	30 81       	ld	r19, Z
     7bc:	32 13       	cpse	r19, r18
     7be:	07 c0       	rjmp	.+14     	; 0x7ce <USART_DataRegEmpty+0x26>
	    /* Disable DRE interrupts. */
		uint8_t tempCTRLA = usart_data->usart->CTRLA;
     7c0:	dc 01       	movw	r26, r24
     7c2:	ed 91       	ld	r30, X+
     7c4:	fc 91       	ld	r31, X
     7c6:	83 81       	ldd	r24, Z+3	; 0x03
		tempCTRLA = (tempCTRLA & ~USART_DREINTLVL_gm) | USART_DREINTLVL_OFF_gc;
     7c8:	8c 7f       	andi	r24, 0xFC	; 252
		usart_data->usart->CTRLA = tempCTRLA;
     7ca:	83 83       	std	Z+3, r24	; 0x03
     7cc:	11 c0       	rjmp	.+34     	; 0x7f0 <USART_DataRegEmpty+0x48>

	}else{
		/* Start transmitting. */
		uint8_t data = bufPtr->TX[usart_data->buffer.TX_Tail];
     7ce:	fc 01       	movw	r30, r24
     7d0:	ea 5f       	subi	r30, 0xFA	; 250
     7d2:	fd 4f       	sbci	r31, 0xFD	; 253
     7d4:	20 81       	ld	r18, Z
     7d6:	dc 01       	movw	r26, r24
     7d8:	a2 0f       	add	r26, r18
     7da:	b1 1d       	adc	r27, r1
     7dc:	ad 5f       	subi	r26, 0xFD	; 253
     7de:	be 4f       	sbci	r27, 0xFE	; 254
     7e0:	2c 91       	ld	r18, X
		usart_data->usart->DATA = data;
     7e2:	ec 01       	movw	r28, r24
     7e4:	a8 81       	ld	r26, Y
     7e6:	b9 81       	ldd	r27, Y+1	; 0x01
     7e8:	2c 93       	st	X, r18

		/* Advance buffer tail. */
		bufPtr->TX_Tail = (bufPtr->TX_Tail + 1) & USART_TX_BUFFER_MASK;
     7ea:	80 81       	ld	r24, Z
     7ec:	8f 5f       	subi	r24, 0xFF	; 255
     7ee:	80 83       	st	Z, r24
	}
}
     7f0:	df 91       	pop	r29
     7f2:	cf 91       	pop	r28
     7f4:	08 95       	ret

000007f6 <__subsf3>:
     7f6:	50 58       	subi	r21, 0x80	; 128

000007f8 <__addsf3>:
     7f8:	bb 27       	eor	r27, r27
     7fa:	aa 27       	eor	r26, r26
     7fc:	0e d0       	rcall	.+28     	; 0x81a <__addsf3x>
     7fe:	48 c1       	rjmp	.+656    	; 0xa90 <__fp_round>
     800:	39 d1       	rcall	.+626    	; 0xa74 <__fp_pscA>
     802:	30 f0       	brcs	.+12     	; 0x810 <__addsf3+0x18>
     804:	3e d1       	rcall	.+636    	; 0xa82 <__fp_pscB>
     806:	20 f0       	brcs	.+8      	; 0x810 <__addsf3+0x18>
     808:	31 f4       	brne	.+12     	; 0x816 <__addsf3+0x1e>
     80a:	9f 3f       	cpi	r25, 0xFF	; 255
     80c:	11 f4       	brne	.+4      	; 0x812 <__addsf3+0x1a>
     80e:	1e f4       	brtc	.+6      	; 0x816 <__addsf3+0x1e>
     810:	2e c1       	rjmp	.+604    	; 0xa6e <__fp_nan>
     812:	0e f4       	brtc	.+2      	; 0x816 <__addsf3+0x1e>
     814:	e0 95       	com	r30
     816:	e7 fb       	bst	r30, 7
     818:	24 c1       	rjmp	.+584    	; 0xa62 <__fp_inf>

0000081a <__addsf3x>:
     81a:	e9 2f       	mov	r30, r25
     81c:	4a d1       	rcall	.+660    	; 0xab2 <__fp_split3>
     81e:	80 f3       	brcs	.-32     	; 0x800 <__addsf3+0x8>
     820:	ba 17       	cp	r27, r26
     822:	62 07       	cpc	r22, r18
     824:	73 07       	cpc	r23, r19
     826:	84 07       	cpc	r24, r20
     828:	95 07       	cpc	r25, r21
     82a:	18 f0       	brcs	.+6      	; 0x832 <__addsf3x+0x18>
     82c:	71 f4       	brne	.+28     	; 0x84a <__addsf3x+0x30>
     82e:	9e f5       	brtc	.+102    	; 0x896 <__addsf3x+0x7c>
     830:	62 c1       	rjmp	.+708    	; 0xaf6 <__fp_zero>
     832:	0e f4       	brtc	.+2      	; 0x836 <__addsf3x+0x1c>
     834:	e0 95       	com	r30
     836:	0b 2e       	mov	r0, r27
     838:	ba 2f       	mov	r27, r26
     83a:	a0 2d       	mov	r26, r0
     83c:	0b 01       	movw	r0, r22
     83e:	b9 01       	movw	r22, r18
     840:	90 01       	movw	r18, r0
     842:	0c 01       	movw	r0, r24
     844:	ca 01       	movw	r24, r20
     846:	a0 01       	movw	r20, r0
     848:	11 24       	eor	r1, r1
     84a:	ff 27       	eor	r31, r31
     84c:	59 1b       	sub	r21, r25
     84e:	99 f0       	breq	.+38     	; 0x876 <__addsf3x+0x5c>
     850:	59 3f       	cpi	r21, 0xF9	; 249
     852:	50 f4       	brcc	.+20     	; 0x868 <__addsf3x+0x4e>
     854:	50 3e       	cpi	r21, 0xE0	; 224
     856:	68 f1       	brcs	.+90     	; 0x8b2 <__addsf3x+0x98>
     858:	1a 16       	cp	r1, r26
     85a:	f0 40       	sbci	r31, 0x00	; 0
     85c:	a2 2f       	mov	r26, r18
     85e:	23 2f       	mov	r18, r19
     860:	34 2f       	mov	r19, r20
     862:	44 27       	eor	r20, r20
     864:	58 5f       	subi	r21, 0xF8	; 248
     866:	f3 cf       	rjmp	.-26     	; 0x84e <__addsf3x+0x34>
     868:	46 95       	lsr	r20
     86a:	37 95       	ror	r19
     86c:	27 95       	ror	r18
     86e:	a7 95       	ror	r26
     870:	f0 40       	sbci	r31, 0x00	; 0
     872:	53 95       	inc	r21
     874:	c9 f7       	brne	.-14     	; 0x868 <__addsf3x+0x4e>
     876:	7e f4       	brtc	.+30     	; 0x896 <__addsf3x+0x7c>
     878:	1f 16       	cp	r1, r31
     87a:	ba 0b       	sbc	r27, r26
     87c:	62 0b       	sbc	r22, r18
     87e:	73 0b       	sbc	r23, r19
     880:	84 0b       	sbc	r24, r20
     882:	ba f0       	brmi	.+46     	; 0x8b2 <__addsf3x+0x98>
     884:	91 50       	subi	r25, 0x01	; 1
     886:	a1 f0       	breq	.+40     	; 0x8b0 <__addsf3x+0x96>
     888:	ff 0f       	add	r31, r31
     88a:	bb 1f       	adc	r27, r27
     88c:	66 1f       	adc	r22, r22
     88e:	77 1f       	adc	r23, r23
     890:	88 1f       	adc	r24, r24
     892:	c2 f7       	brpl	.-16     	; 0x884 <__addsf3x+0x6a>
     894:	0e c0       	rjmp	.+28     	; 0x8b2 <__addsf3x+0x98>
     896:	ba 0f       	add	r27, r26
     898:	62 1f       	adc	r22, r18
     89a:	73 1f       	adc	r23, r19
     89c:	84 1f       	adc	r24, r20
     89e:	48 f4       	brcc	.+18     	; 0x8b2 <__addsf3x+0x98>
     8a0:	87 95       	ror	r24
     8a2:	77 95       	ror	r23
     8a4:	67 95       	ror	r22
     8a6:	b7 95       	ror	r27
     8a8:	f7 95       	ror	r31
     8aa:	9e 3f       	cpi	r25, 0xFE	; 254
     8ac:	08 f0       	brcs	.+2      	; 0x8b0 <__addsf3x+0x96>
     8ae:	b3 cf       	rjmp	.-154    	; 0x816 <__addsf3+0x1e>
     8b0:	93 95       	inc	r25
     8b2:	88 0f       	add	r24, r24
     8b4:	08 f0       	brcs	.+2      	; 0x8b8 <__addsf3x+0x9e>
     8b6:	99 27       	eor	r25, r25
     8b8:	ee 0f       	add	r30, r30
     8ba:	97 95       	ror	r25
     8bc:	87 95       	ror	r24
     8be:	08 95       	ret

000008c0 <__divsf3>:
     8c0:	0c d0       	rcall	.+24     	; 0x8da <__divsf3x>
     8c2:	e6 c0       	rjmp	.+460    	; 0xa90 <__fp_round>
     8c4:	de d0       	rcall	.+444    	; 0xa82 <__fp_pscB>
     8c6:	40 f0       	brcs	.+16     	; 0x8d8 <__divsf3+0x18>
     8c8:	d5 d0       	rcall	.+426    	; 0xa74 <__fp_pscA>
     8ca:	30 f0       	brcs	.+12     	; 0x8d8 <__divsf3+0x18>
     8cc:	21 f4       	brne	.+8      	; 0x8d6 <__divsf3+0x16>
     8ce:	5f 3f       	cpi	r21, 0xFF	; 255
     8d0:	19 f0       	breq	.+6      	; 0x8d8 <__divsf3+0x18>
     8d2:	c7 c0       	rjmp	.+398    	; 0xa62 <__fp_inf>
     8d4:	51 11       	cpse	r21, r1
     8d6:	10 c1       	rjmp	.+544    	; 0xaf8 <__fp_szero>
     8d8:	ca c0       	rjmp	.+404    	; 0xa6e <__fp_nan>

000008da <__divsf3x>:
     8da:	eb d0       	rcall	.+470    	; 0xab2 <__fp_split3>
     8dc:	98 f3       	brcs	.-26     	; 0x8c4 <__divsf3+0x4>

000008de <__divsf3_pse>:
     8de:	99 23       	and	r25, r25
     8e0:	c9 f3       	breq	.-14     	; 0x8d4 <__divsf3+0x14>
     8e2:	55 23       	and	r21, r21
     8e4:	b1 f3       	breq	.-20     	; 0x8d2 <__divsf3+0x12>
     8e6:	95 1b       	sub	r25, r21
     8e8:	55 0b       	sbc	r21, r21
     8ea:	bb 27       	eor	r27, r27
     8ec:	aa 27       	eor	r26, r26
     8ee:	62 17       	cp	r22, r18
     8f0:	73 07       	cpc	r23, r19
     8f2:	84 07       	cpc	r24, r20
     8f4:	38 f0       	brcs	.+14     	; 0x904 <__divsf3_pse+0x26>
     8f6:	9f 5f       	subi	r25, 0xFF	; 255
     8f8:	5f 4f       	sbci	r21, 0xFF	; 255
     8fa:	22 0f       	add	r18, r18
     8fc:	33 1f       	adc	r19, r19
     8fe:	44 1f       	adc	r20, r20
     900:	aa 1f       	adc	r26, r26
     902:	a9 f3       	breq	.-22     	; 0x8ee <__divsf3_pse+0x10>
     904:	33 d0       	rcall	.+102    	; 0x96c <__divsf3_pse+0x8e>
     906:	0e 2e       	mov	r0, r30
     908:	3a f0       	brmi	.+14     	; 0x918 <__divsf3_pse+0x3a>
     90a:	e0 e8       	ldi	r30, 0x80	; 128
     90c:	30 d0       	rcall	.+96     	; 0x96e <__divsf3_pse+0x90>
     90e:	91 50       	subi	r25, 0x01	; 1
     910:	50 40       	sbci	r21, 0x00	; 0
     912:	e6 95       	lsr	r30
     914:	00 1c       	adc	r0, r0
     916:	ca f7       	brpl	.-14     	; 0x90a <__divsf3_pse+0x2c>
     918:	29 d0       	rcall	.+82     	; 0x96c <__divsf3_pse+0x8e>
     91a:	fe 2f       	mov	r31, r30
     91c:	27 d0       	rcall	.+78     	; 0x96c <__divsf3_pse+0x8e>
     91e:	66 0f       	add	r22, r22
     920:	77 1f       	adc	r23, r23
     922:	88 1f       	adc	r24, r24
     924:	bb 1f       	adc	r27, r27
     926:	26 17       	cp	r18, r22
     928:	37 07       	cpc	r19, r23
     92a:	48 07       	cpc	r20, r24
     92c:	ab 07       	cpc	r26, r27
     92e:	b0 e8       	ldi	r27, 0x80	; 128
     930:	09 f0       	breq	.+2      	; 0x934 <__divsf3_pse+0x56>
     932:	bb 0b       	sbc	r27, r27
     934:	80 2d       	mov	r24, r0
     936:	bf 01       	movw	r22, r30
     938:	ff 27       	eor	r31, r31
     93a:	93 58       	subi	r25, 0x83	; 131
     93c:	5f 4f       	sbci	r21, 0xFF	; 255
     93e:	2a f0       	brmi	.+10     	; 0x94a <__divsf3_pse+0x6c>
     940:	9e 3f       	cpi	r25, 0xFE	; 254
     942:	51 05       	cpc	r21, r1
     944:	68 f0       	brcs	.+26     	; 0x960 <__divsf3_pse+0x82>
     946:	8d c0       	rjmp	.+282    	; 0xa62 <__fp_inf>
     948:	d7 c0       	rjmp	.+430    	; 0xaf8 <__fp_szero>
     94a:	5f 3f       	cpi	r21, 0xFF	; 255
     94c:	ec f3       	brlt	.-6      	; 0x948 <__divsf3_pse+0x6a>
     94e:	98 3e       	cpi	r25, 0xE8	; 232
     950:	dc f3       	brlt	.-10     	; 0x948 <__divsf3_pse+0x6a>
     952:	86 95       	lsr	r24
     954:	77 95       	ror	r23
     956:	67 95       	ror	r22
     958:	b7 95       	ror	r27
     95a:	f7 95       	ror	r31
     95c:	9f 5f       	subi	r25, 0xFF	; 255
     95e:	c9 f7       	brne	.-14     	; 0x952 <__divsf3_pse+0x74>
     960:	88 0f       	add	r24, r24
     962:	91 1d       	adc	r25, r1
     964:	96 95       	lsr	r25
     966:	87 95       	ror	r24
     968:	97 f9       	bld	r25, 7
     96a:	08 95       	ret
     96c:	e1 e0       	ldi	r30, 0x01	; 1
     96e:	66 0f       	add	r22, r22
     970:	77 1f       	adc	r23, r23
     972:	88 1f       	adc	r24, r24
     974:	bb 1f       	adc	r27, r27
     976:	62 17       	cp	r22, r18
     978:	73 07       	cpc	r23, r19
     97a:	84 07       	cpc	r24, r20
     97c:	ba 07       	cpc	r27, r26
     97e:	20 f0       	brcs	.+8      	; 0x988 <__divsf3_pse+0xaa>
     980:	62 1b       	sub	r22, r18
     982:	73 0b       	sbc	r23, r19
     984:	84 0b       	sbc	r24, r20
     986:	ba 0b       	sbc	r27, r26
     988:	ee 1f       	adc	r30, r30
     98a:	88 f7       	brcc	.-30     	; 0x96e <__divsf3_pse+0x90>
     98c:	e0 95       	com	r30
     98e:	08 95       	ret

00000990 <__fixunssfsi>:
     990:	98 d0       	rcall	.+304    	; 0xac2 <__fp_splitA>
     992:	88 f0       	brcs	.+34     	; 0x9b6 <__fixunssfsi+0x26>
     994:	9f 57       	subi	r25, 0x7F	; 127
     996:	90 f0       	brcs	.+36     	; 0x9bc <__fixunssfsi+0x2c>
     998:	b9 2f       	mov	r27, r25
     99a:	99 27       	eor	r25, r25
     99c:	b7 51       	subi	r27, 0x17	; 23
     99e:	a0 f0       	brcs	.+40     	; 0x9c8 <__fixunssfsi+0x38>
     9a0:	d1 f0       	breq	.+52     	; 0x9d6 <__fixunssfsi+0x46>
     9a2:	66 0f       	add	r22, r22
     9a4:	77 1f       	adc	r23, r23
     9a6:	88 1f       	adc	r24, r24
     9a8:	99 1f       	adc	r25, r25
     9aa:	1a f0       	brmi	.+6      	; 0x9b2 <__fixunssfsi+0x22>
     9ac:	ba 95       	dec	r27
     9ae:	c9 f7       	brne	.-14     	; 0x9a2 <__fixunssfsi+0x12>
     9b0:	12 c0       	rjmp	.+36     	; 0x9d6 <__fixunssfsi+0x46>
     9b2:	b1 30       	cpi	r27, 0x01	; 1
     9b4:	81 f0       	breq	.+32     	; 0x9d6 <__fixunssfsi+0x46>
     9b6:	9f d0       	rcall	.+318    	; 0xaf6 <__fp_zero>
     9b8:	b1 e0       	ldi	r27, 0x01	; 1
     9ba:	08 95       	ret
     9bc:	9c c0       	rjmp	.+312    	; 0xaf6 <__fp_zero>
     9be:	67 2f       	mov	r22, r23
     9c0:	78 2f       	mov	r23, r24
     9c2:	88 27       	eor	r24, r24
     9c4:	b8 5f       	subi	r27, 0xF8	; 248
     9c6:	39 f0       	breq	.+14     	; 0x9d6 <__fixunssfsi+0x46>
     9c8:	b9 3f       	cpi	r27, 0xF9	; 249
     9ca:	cc f3       	brlt	.-14     	; 0x9be <__fixunssfsi+0x2e>
     9cc:	86 95       	lsr	r24
     9ce:	77 95       	ror	r23
     9d0:	67 95       	ror	r22
     9d2:	b3 95       	inc	r27
     9d4:	d9 f7       	brne	.-10     	; 0x9cc <__fixunssfsi+0x3c>
     9d6:	3e f4       	brtc	.+14     	; 0x9e6 <__fixunssfsi+0x56>
     9d8:	90 95       	com	r25
     9da:	80 95       	com	r24
     9dc:	70 95       	com	r23
     9de:	61 95       	neg	r22
     9e0:	7f 4f       	sbci	r23, 0xFF	; 255
     9e2:	8f 4f       	sbci	r24, 0xFF	; 255
     9e4:	9f 4f       	sbci	r25, 0xFF	; 255
     9e6:	08 95       	ret

000009e8 <__floatunsisf>:
     9e8:	e8 94       	clt
     9ea:	09 c0       	rjmp	.+18     	; 0x9fe <__floatsisf+0x12>

000009ec <__floatsisf>:
     9ec:	97 fb       	bst	r25, 7
     9ee:	3e f4       	brtc	.+14     	; 0x9fe <__floatsisf+0x12>
     9f0:	90 95       	com	r25
     9f2:	80 95       	com	r24
     9f4:	70 95       	com	r23
     9f6:	61 95       	neg	r22
     9f8:	7f 4f       	sbci	r23, 0xFF	; 255
     9fa:	8f 4f       	sbci	r24, 0xFF	; 255
     9fc:	9f 4f       	sbci	r25, 0xFF	; 255
     9fe:	99 23       	and	r25, r25
     a00:	a9 f0       	breq	.+42     	; 0xa2c <__floatsisf+0x40>
     a02:	f9 2f       	mov	r31, r25
     a04:	96 e9       	ldi	r25, 0x96	; 150
     a06:	bb 27       	eor	r27, r27
     a08:	93 95       	inc	r25
     a0a:	f6 95       	lsr	r31
     a0c:	87 95       	ror	r24
     a0e:	77 95       	ror	r23
     a10:	67 95       	ror	r22
     a12:	b7 95       	ror	r27
     a14:	f1 11       	cpse	r31, r1
     a16:	f8 cf       	rjmp	.-16     	; 0xa08 <__floatsisf+0x1c>
     a18:	fa f4       	brpl	.+62     	; 0xa58 <__floatsisf+0x6c>
     a1a:	bb 0f       	add	r27, r27
     a1c:	11 f4       	brne	.+4      	; 0xa22 <__floatsisf+0x36>
     a1e:	60 ff       	sbrs	r22, 0
     a20:	1b c0       	rjmp	.+54     	; 0xa58 <__floatsisf+0x6c>
     a22:	6f 5f       	subi	r22, 0xFF	; 255
     a24:	7f 4f       	sbci	r23, 0xFF	; 255
     a26:	8f 4f       	sbci	r24, 0xFF	; 255
     a28:	9f 4f       	sbci	r25, 0xFF	; 255
     a2a:	16 c0       	rjmp	.+44     	; 0xa58 <__floatsisf+0x6c>
     a2c:	88 23       	and	r24, r24
     a2e:	11 f0       	breq	.+4      	; 0xa34 <__floatsisf+0x48>
     a30:	96 e9       	ldi	r25, 0x96	; 150
     a32:	11 c0       	rjmp	.+34     	; 0xa56 <__floatsisf+0x6a>
     a34:	77 23       	and	r23, r23
     a36:	21 f0       	breq	.+8      	; 0xa40 <__floatsisf+0x54>
     a38:	9e e8       	ldi	r25, 0x8E	; 142
     a3a:	87 2f       	mov	r24, r23
     a3c:	76 2f       	mov	r23, r22
     a3e:	05 c0       	rjmp	.+10     	; 0xa4a <__floatsisf+0x5e>
     a40:	66 23       	and	r22, r22
     a42:	71 f0       	breq	.+28     	; 0xa60 <__floatsisf+0x74>
     a44:	96 e8       	ldi	r25, 0x86	; 134
     a46:	86 2f       	mov	r24, r22
     a48:	70 e0       	ldi	r23, 0x00	; 0
     a4a:	60 e0       	ldi	r22, 0x00	; 0
     a4c:	2a f0       	brmi	.+10     	; 0xa58 <__floatsisf+0x6c>
     a4e:	9a 95       	dec	r25
     a50:	66 0f       	add	r22, r22
     a52:	77 1f       	adc	r23, r23
     a54:	88 1f       	adc	r24, r24
     a56:	da f7       	brpl	.-10     	; 0xa4e <__floatsisf+0x62>
     a58:	88 0f       	add	r24, r24
     a5a:	96 95       	lsr	r25
     a5c:	87 95       	ror	r24
     a5e:	97 f9       	bld	r25, 7
     a60:	08 95       	ret

00000a62 <__fp_inf>:
     a62:	97 f9       	bld	r25, 7
     a64:	9f 67       	ori	r25, 0x7F	; 127
     a66:	80 e8       	ldi	r24, 0x80	; 128
     a68:	70 e0       	ldi	r23, 0x00	; 0
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	08 95       	ret

00000a6e <__fp_nan>:
     a6e:	9f ef       	ldi	r25, 0xFF	; 255
     a70:	80 ec       	ldi	r24, 0xC0	; 192
     a72:	08 95       	ret

00000a74 <__fp_pscA>:
     a74:	00 24       	eor	r0, r0
     a76:	0a 94       	dec	r0
     a78:	16 16       	cp	r1, r22
     a7a:	17 06       	cpc	r1, r23
     a7c:	18 06       	cpc	r1, r24
     a7e:	09 06       	cpc	r0, r25
     a80:	08 95       	ret

00000a82 <__fp_pscB>:
     a82:	00 24       	eor	r0, r0
     a84:	0a 94       	dec	r0
     a86:	12 16       	cp	r1, r18
     a88:	13 06       	cpc	r1, r19
     a8a:	14 06       	cpc	r1, r20
     a8c:	05 06       	cpc	r0, r21
     a8e:	08 95       	ret

00000a90 <__fp_round>:
     a90:	09 2e       	mov	r0, r25
     a92:	03 94       	inc	r0
     a94:	00 0c       	add	r0, r0
     a96:	11 f4       	brne	.+4      	; 0xa9c <__fp_round+0xc>
     a98:	88 23       	and	r24, r24
     a9a:	52 f0       	brmi	.+20     	; 0xab0 <__fp_round+0x20>
     a9c:	bb 0f       	add	r27, r27
     a9e:	40 f4       	brcc	.+16     	; 0xab0 <__fp_round+0x20>
     aa0:	bf 2b       	or	r27, r31
     aa2:	11 f4       	brne	.+4      	; 0xaa8 <__fp_round+0x18>
     aa4:	60 ff       	sbrs	r22, 0
     aa6:	04 c0       	rjmp	.+8      	; 0xab0 <__fp_round+0x20>
     aa8:	6f 5f       	subi	r22, 0xFF	; 255
     aaa:	7f 4f       	sbci	r23, 0xFF	; 255
     aac:	8f 4f       	sbci	r24, 0xFF	; 255
     aae:	9f 4f       	sbci	r25, 0xFF	; 255
     ab0:	08 95       	ret

00000ab2 <__fp_split3>:
     ab2:	57 fd       	sbrc	r21, 7
     ab4:	90 58       	subi	r25, 0x80	; 128
     ab6:	44 0f       	add	r20, r20
     ab8:	55 1f       	adc	r21, r21
     aba:	59 f0       	breq	.+22     	; 0xad2 <__fp_splitA+0x10>
     abc:	5f 3f       	cpi	r21, 0xFF	; 255
     abe:	71 f0       	breq	.+28     	; 0xadc <__fp_splitA+0x1a>
     ac0:	47 95       	ror	r20

00000ac2 <__fp_splitA>:
     ac2:	88 0f       	add	r24, r24
     ac4:	97 fb       	bst	r25, 7
     ac6:	99 1f       	adc	r25, r25
     ac8:	61 f0       	breq	.+24     	; 0xae2 <__fp_splitA+0x20>
     aca:	9f 3f       	cpi	r25, 0xFF	; 255
     acc:	79 f0       	breq	.+30     	; 0xaec <__fp_splitA+0x2a>
     ace:	87 95       	ror	r24
     ad0:	08 95       	ret
     ad2:	12 16       	cp	r1, r18
     ad4:	13 06       	cpc	r1, r19
     ad6:	14 06       	cpc	r1, r20
     ad8:	55 1f       	adc	r21, r21
     ada:	f2 cf       	rjmp	.-28     	; 0xac0 <__fp_split3+0xe>
     adc:	46 95       	lsr	r20
     ade:	f1 df       	rcall	.-30     	; 0xac2 <__fp_splitA>
     ae0:	08 c0       	rjmp	.+16     	; 0xaf2 <__fp_splitA+0x30>
     ae2:	16 16       	cp	r1, r22
     ae4:	17 06       	cpc	r1, r23
     ae6:	18 06       	cpc	r1, r24
     ae8:	99 1f       	adc	r25, r25
     aea:	f1 cf       	rjmp	.-30     	; 0xace <__fp_splitA+0xc>
     aec:	86 95       	lsr	r24
     aee:	71 05       	cpc	r23, r1
     af0:	61 05       	cpc	r22, r1
     af2:	08 94       	sec
     af4:	08 95       	ret

00000af6 <__fp_zero>:
     af6:	e8 94       	clt

00000af8 <__fp_szero>:
     af8:	bb 27       	eor	r27, r27
     afa:	66 27       	eor	r22, r22
     afc:	77 27       	eor	r23, r23
     afe:	cb 01       	movw	r24, r22
     b00:	97 f9       	bld	r25, 7
     b02:	08 95       	ret

00000b04 <__mulsf3>:
     b04:	0b d0       	rcall	.+22     	; 0xb1c <__mulsf3x>
     b06:	c4 cf       	rjmp	.-120    	; 0xa90 <__fp_round>
     b08:	b5 df       	rcall	.-150    	; 0xa74 <__fp_pscA>
     b0a:	28 f0       	brcs	.+10     	; 0xb16 <__mulsf3+0x12>
     b0c:	ba df       	rcall	.-140    	; 0xa82 <__fp_pscB>
     b0e:	18 f0       	brcs	.+6      	; 0xb16 <__mulsf3+0x12>
     b10:	95 23       	and	r25, r21
     b12:	09 f0       	breq	.+2      	; 0xb16 <__mulsf3+0x12>
     b14:	a6 cf       	rjmp	.-180    	; 0xa62 <__fp_inf>
     b16:	ab cf       	rjmp	.-170    	; 0xa6e <__fp_nan>
     b18:	11 24       	eor	r1, r1
     b1a:	ee cf       	rjmp	.-36     	; 0xaf8 <__fp_szero>

00000b1c <__mulsf3x>:
     b1c:	ca df       	rcall	.-108    	; 0xab2 <__fp_split3>
     b1e:	a0 f3       	brcs	.-24     	; 0xb08 <__mulsf3+0x4>

00000b20 <__mulsf3_pse>:
     b20:	95 9f       	mul	r25, r21
     b22:	d1 f3       	breq	.-12     	; 0xb18 <__mulsf3+0x14>
     b24:	95 0f       	add	r25, r21
     b26:	50 e0       	ldi	r21, 0x00	; 0
     b28:	55 1f       	adc	r21, r21
     b2a:	62 9f       	mul	r22, r18
     b2c:	f0 01       	movw	r30, r0
     b2e:	72 9f       	mul	r23, r18
     b30:	bb 27       	eor	r27, r27
     b32:	f0 0d       	add	r31, r0
     b34:	b1 1d       	adc	r27, r1
     b36:	63 9f       	mul	r22, r19
     b38:	aa 27       	eor	r26, r26
     b3a:	f0 0d       	add	r31, r0
     b3c:	b1 1d       	adc	r27, r1
     b3e:	aa 1f       	adc	r26, r26
     b40:	64 9f       	mul	r22, r20
     b42:	66 27       	eor	r22, r22
     b44:	b0 0d       	add	r27, r0
     b46:	a1 1d       	adc	r26, r1
     b48:	66 1f       	adc	r22, r22
     b4a:	82 9f       	mul	r24, r18
     b4c:	22 27       	eor	r18, r18
     b4e:	b0 0d       	add	r27, r0
     b50:	a1 1d       	adc	r26, r1
     b52:	62 1f       	adc	r22, r18
     b54:	73 9f       	mul	r23, r19
     b56:	b0 0d       	add	r27, r0
     b58:	a1 1d       	adc	r26, r1
     b5a:	62 1f       	adc	r22, r18
     b5c:	83 9f       	mul	r24, r19
     b5e:	a0 0d       	add	r26, r0
     b60:	61 1d       	adc	r22, r1
     b62:	22 1f       	adc	r18, r18
     b64:	74 9f       	mul	r23, r20
     b66:	33 27       	eor	r19, r19
     b68:	a0 0d       	add	r26, r0
     b6a:	61 1d       	adc	r22, r1
     b6c:	23 1f       	adc	r18, r19
     b6e:	84 9f       	mul	r24, r20
     b70:	60 0d       	add	r22, r0
     b72:	21 1d       	adc	r18, r1
     b74:	82 2f       	mov	r24, r18
     b76:	76 2f       	mov	r23, r22
     b78:	6a 2f       	mov	r22, r26
     b7a:	11 24       	eor	r1, r1
     b7c:	9f 57       	subi	r25, 0x7F	; 127
     b7e:	50 40       	sbci	r21, 0x00	; 0
     b80:	8a f0       	brmi	.+34     	; 0xba4 <__mulsf3_pse+0x84>
     b82:	e1 f0       	breq	.+56     	; 0xbbc <__mulsf3_pse+0x9c>
     b84:	88 23       	and	r24, r24
     b86:	4a f0       	brmi	.+18     	; 0xb9a <__mulsf3_pse+0x7a>
     b88:	ee 0f       	add	r30, r30
     b8a:	ff 1f       	adc	r31, r31
     b8c:	bb 1f       	adc	r27, r27
     b8e:	66 1f       	adc	r22, r22
     b90:	77 1f       	adc	r23, r23
     b92:	88 1f       	adc	r24, r24
     b94:	91 50       	subi	r25, 0x01	; 1
     b96:	50 40       	sbci	r21, 0x00	; 0
     b98:	a9 f7       	brne	.-22     	; 0xb84 <__mulsf3_pse+0x64>
     b9a:	9e 3f       	cpi	r25, 0xFE	; 254
     b9c:	51 05       	cpc	r21, r1
     b9e:	70 f0       	brcs	.+28     	; 0xbbc <__mulsf3_pse+0x9c>
     ba0:	60 cf       	rjmp	.-320    	; 0xa62 <__fp_inf>
     ba2:	aa cf       	rjmp	.-172    	; 0xaf8 <__fp_szero>
     ba4:	5f 3f       	cpi	r21, 0xFF	; 255
     ba6:	ec f3       	brlt	.-6      	; 0xba2 <__mulsf3_pse+0x82>
     ba8:	98 3e       	cpi	r25, 0xE8	; 232
     baa:	dc f3       	brlt	.-10     	; 0xba2 <__mulsf3_pse+0x82>
     bac:	86 95       	lsr	r24
     bae:	77 95       	ror	r23
     bb0:	67 95       	ror	r22
     bb2:	b7 95       	ror	r27
     bb4:	f7 95       	ror	r31
     bb6:	e7 95       	ror	r30
     bb8:	9f 5f       	subi	r25, 0xFF	; 255
     bba:	c1 f7       	brne	.-16     	; 0xbac <__mulsf3_pse+0x8c>
     bbc:	fe 2b       	or	r31, r30
     bbe:	88 0f       	add	r24, r24
     bc0:	91 1d       	adc	r25, r1
     bc2:	96 95       	lsr	r25
     bc4:	87 95       	ror	r24
     bc6:	97 f9       	bld	r25, 7
     bc8:	08 95       	ret

00000bca <round>:
     bca:	7b df       	rcall	.-266    	; 0xac2 <__fp_splitA>
     bcc:	e0 f0       	brcs	.+56     	; 0xc06 <round+0x3c>
     bce:	9e 37       	cpi	r25, 0x7E	; 126
     bd0:	d8 f0       	brcs	.+54     	; 0xc08 <round+0x3e>
     bd2:	96 39       	cpi	r25, 0x96	; 150
     bd4:	b8 f4       	brcc	.+46     	; 0xc04 <round+0x3a>
     bd6:	9e 38       	cpi	r25, 0x8E	; 142
     bd8:	48 f4       	brcc	.+18     	; 0xbec <round+0x22>
     bda:	67 2f       	mov	r22, r23
     bdc:	78 2f       	mov	r23, r24
     bde:	88 27       	eor	r24, r24
     be0:	98 5f       	subi	r25, 0xF8	; 248
     be2:	f9 cf       	rjmp	.-14     	; 0xbd6 <round+0xc>
     be4:	86 95       	lsr	r24
     be6:	77 95       	ror	r23
     be8:	67 95       	ror	r22
     bea:	93 95       	inc	r25
     bec:	95 39       	cpi	r25, 0x95	; 149
     bee:	d0 f3       	brcs	.-12     	; 0xbe4 <round+0x1a>
     bf0:	b6 2f       	mov	r27, r22
     bf2:	b1 70       	andi	r27, 0x01	; 1
     bf4:	6b 0f       	add	r22, r27
     bf6:	71 1d       	adc	r23, r1
     bf8:	81 1d       	adc	r24, r1
     bfa:	20 f4       	brcc	.+8      	; 0xc04 <round+0x3a>
     bfc:	87 95       	ror	r24
     bfe:	77 95       	ror	r23
     c00:	67 95       	ror	r22
     c02:	93 95       	inc	r25
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <__fp_mintl>
     c06:	1c c0       	rjmp	.+56     	; 0xc40 <__fp_mpack>
     c08:	77 cf       	rjmp	.-274    	; 0xaf8 <__fp_szero>

00000c0a <__fp_mintl>:
     c0a:	88 23       	and	r24, r24
     c0c:	71 f4       	brne	.+28     	; 0xc2a <__fp_mintl+0x20>
     c0e:	77 23       	and	r23, r23
     c10:	21 f0       	breq	.+8      	; 0xc1a <__fp_mintl+0x10>
     c12:	98 50       	subi	r25, 0x08	; 8
     c14:	87 2b       	or	r24, r23
     c16:	76 2f       	mov	r23, r22
     c18:	07 c0       	rjmp	.+14     	; 0xc28 <__fp_mintl+0x1e>
     c1a:	66 23       	and	r22, r22
     c1c:	11 f4       	brne	.+4      	; 0xc22 <__fp_mintl+0x18>
     c1e:	99 27       	eor	r25, r25
     c20:	0d c0       	rjmp	.+26     	; 0xc3c <__fp_mintl+0x32>
     c22:	90 51       	subi	r25, 0x10	; 16
     c24:	86 2b       	or	r24, r22
     c26:	70 e0       	ldi	r23, 0x00	; 0
     c28:	60 e0       	ldi	r22, 0x00	; 0
     c2a:	2a f0       	brmi	.+10     	; 0xc36 <__fp_mintl+0x2c>
     c2c:	9a 95       	dec	r25
     c2e:	66 0f       	add	r22, r22
     c30:	77 1f       	adc	r23, r23
     c32:	88 1f       	adc	r24, r24
     c34:	da f7       	brpl	.-10     	; 0xc2c <__fp_mintl+0x22>
     c36:	88 0f       	add	r24, r24
     c38:	96 95       	lsr	r25
     c3a:	87 95       	ror	r24
     c3c:	97 f9       	bld	r25, 7
     c3e:	08 95       	ret

00000c40 <__fp_mpack>:
     c40:	9f 3f       	cpi	r25, 0xFF	; 255
     c42:	31 f0       	breq	.+12     	; 0xc50 <__fp_mpack_finite+0xc>

00000c44 <__fp_mpack_finite>:
     c44:	91 50       	subi	r25, 0x01	; 1
     c46:	20 f4       	brcc	.+8      	; 0xc50 <__fp_mpack_finite+0xc>
     c48:	87 95       	ror	r24
     c4a:	77 95       	ror	r23
     c4c:	67 95       	ror	r22
     c4e:	b7 95       	ror	r27
     c50:	88 0f       	add	r24, r24
     c52:	91 1d       	adc	r25, r1
     c54:	96 95       	lsr	r25
     c56:	87 95       	ror	r24
     c58:	97 f9       	bld	r25, 7
     c5a:	08 95       	ret

00000c5c <sprintf>:
     c5c:	0f 93       	push	r16
     c5e:	1f 93       	push	r17
     c60:	cf 93       	push	r28
     c62:	df 93       	push	r29
     c64:	cd b7       	in	r28, 0x3d	; 61
     c66:	de b7       	in	r29, 0x3e	; 62
     c68:	2e 97       	sbiw	r28, 0x0e	; 14
     c6a:	cd bf       	out	0x3d, r28	; 61
     c6c:	de bf       	out	0x3e, r29	; 62
     c6e:	0e 89       	ldd	r16, Y+22	; 0x16
     c70:	1f 89       	ldd	r17, Y+23	; 0x17
     c72:	86 e0       	ldi	r24, 0x06	; 6
     c74:	8c 83       	std	Y+4, r24	; 0x04
     c76:	09 83       	std	Y+1, r16	; 0x01
     c78:	1a 83       	std	Y+2, r17	; 0x02
     c7a:	8f ef       	ldi	r24, 0xFF	; 255
     c7c:	9f e7       	ldi	r25, 0x7F	; 127
     c7e:	8d 83       	std	Y+5, r24	; 0x05
     c80:	9e 83       	std	Y+6, r25	; 0x06
     c82:	ce 01       	movw	r24, r28
     c84:	4a 96       	adiw	r24, 0x1a	; 26
     c86:	ac 01       	movw	r20, r24
     c88:	68 8d       	ldd	r22, Y+24	; 0x18
     c8a:	79 8d       	ldd	r23, Y+25	; 0x19
     c8c:	ce 01       	movw	r24, r28
     c8e:	01 96       	adiw	r24, 0x01	; 1
     c90:	0d d0       	rcall	.+26     	; 0xcac <vfprintf>
     c92:	ef 81       	ldd	r30, Y+7	; 0x07
     c94:	f8 85       	ldd	r31, Y+8	; 0x08
     c96:	e0 0f       	add	r30, r16
     c98:	f1 1f       	adc	r31, r17
     c9a:	10 82       	st	Z, r1
     c9c:	2e 96       	adiw	r28, 0x0e	; 14
     c9e:	cd bf       	out	0x3d, r28	; 61
     ca0:	de bf       	out	0x3e, r29	; 62
     ca2:	df 91       	pop	r29
     ca4:	cf 91       	pop	r28
     ca6:	1f 91       	pop	r17
     ca8:	0f 91       	pop	r16
     caa:	08 95       	ret

00000cac <vfprintf>:
     cac:	2f 92       	push	r2
     cae:	3f 92       	push	r3
     cb0:	4f 92       	push	r4
     cb2:	5f 92       	push	r5
     cb4:	6f 92       	push	r6
     cb6:	7f 92       	push	r7
     cb8:	8f 92       	push	r8
     cba:	9f 92       	push	r9
     cbc:	af 92       	push	r10
     cbe:	bf 92       	push	r11
     cc0:	cf 92       	push	r12
     cc2:	df 92       	push	r13
     cc4:	ef 92       	push	r14
     cc6:	ff 92       	push	r15
     cc8:	0f 93       	push	r16
     cca:	1f 93       	push	r17
     ccc:	cf 93       	push	r28
     cce:	df 93       	push	r29
     cd0:	cd b7       	in	r28, 0x3d	; 61
     cd2:	de b7       	in	r29, 0x3e	; 62
     cd4:	2c 97       	sbiw	r28, 0x0c	; 12
     cd6:	cd bf       	out	0x3d, r28	; 61
     cd8:	de bf       	out	0x3e, r29	; 62
     cda:	7c 01       	movw	r14, r24
     cdc:	6b 01       	movw	r12, r22
     cde:	8a 01       	movw	r16, r20
     ce0:	fc 01       	movw	r30, r24
     ce2:	16 82       	std	Z+6, r1	; 0x06
     ce4:	17 82       	std	Z+7, r1	; 0x07
     ce6:	83 81       	ldd	r24, Z+3	; 0x03
     ce8:	81 ff       	sbrs	r24, 1
     cea:	b9 c1       	rjmp	.+882    	; 0x105e <vfprintf+0x3b2>
     cec:	88 24       	eor	r8, r8
     cee:	83 94       	inc	r8
     cf0:	91 2c       	mov	r9, r1
     cf2:	8c 0e       	add	r8, r28
     cf4:	9d 1e       	adc	r9, r29
     cf6:	f7 01       	movw	r30, r14
     cf8:	93 81       	ldd	r25, Z+3	; 0x03
     cfa:	f6 01       	movw	r30, r12
     cfc:	93 fd       	sbrc	r25, 3
     cfe:	85 91       	lpm	r24, Z+
     d00:	93 ff       	sbrs	r25, 3
     d02:	81 91       	ld	r24, Z+
     d04:	6f 01       	movw	r12, r30
     d06:	88 23       	and	r24, r24
     d08:	09 f4       	brne	.+2      	; 0xd0c <vfprintf+0x60>
     d0a:	a5 c1       	rjmp	.+842    	; 0x1056 <vfprintf+0x3aa>
     d0c:	85 32       	cpi	r24, 0x25	; 37
     d0e:	39 f4       	brne	.+14     	; 0xd1e <vfprintf+0x72>
     d10:	93 fd       	sbrc	r25, 3
     d12:	85 91       	lpm	r24, Z+
     d14:	93 ff       	sbrs	r25, 3
     d16:	81 91       	ld	r24, Z+
     d18:	6f 01       	movw	r12, r30
     d1a:	85 32       	cpi	r24, 0x25	; 37
     d1c:	21 f4       	brne	.+8      	; 0xd26 <vfprintf+0x7a>
     d1e:	b7 01       	movw	r22, r14
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	cc d1       	rcall	.+920    	; 0x10bc <fputc>
     d24:	e8 cf       	rjmp	.-48     	; 0xcf6 <vfprintf+0x4a>
     d26:	51 2c       	mov	r5, r1
     d28:	31 2c       	mov	r3, r1
     d2a:	20 e0       	ldi	r18, 0x00	; 0
     d2c:	20 32       	cpi	r18, 0x20	; 32
     d2e:	a8 f4       	brcc	.+42     	; 0xd5a <vfprintf+0xae>
     d30:	8b 32       	cpi	r24, 0x2B	; 43
     d32:	61 f0       	breq	.+24     	; 0xd4c <vfprintf+0xa0>
     d34:	28 f4       	brcc	.+10     	; 0xd40 <vfprintf+0x94>
     d36:	80 32       	cpi	r24, 0x20	; 32
     d38:	51 f0       	breq	.+20     	; 0xd4e <vfprintf+0xa2>
     d3a:	83 32       	cpi	r24, 0x23	; 35
     d3c:	71 f4       	brne	.+28     	; 0xd5a <vfprintf+0xae>
     d3e:	0b c0       	rjmp	.+22     	; 0xd56 <vfprintf+0xaa>
     d40:	8d 32       	cpi	r24, 0x2D	; 45
     d42:	39 f0       	breq	.+14     	; 0xd52 <vfprintf+0xa6>
     d44:	80 33       	cpi	r24, 0x30	; 48
     d46:	49 f4       	brne	.+18     	; 0xd5a <vfprintf+0xae>
     d48:	21 60       	ori	r18, 0x01	; 1
     d4a:	28 c0       	rjmp	.+80     	; 0xd9c <vfprintf+0xf0>
     d4c:	22 60       	ori	r18, 0x02	; 2
     d4e:	24 60       	ori	r18, 0x04	; 4
     d50:	25 c0       	rjmp	.+74     	; 0xd9c <vfprintf+0xf0>
     d52:	28 60       	ori	r18, 0x08	; 8
     d54:	23 c0       	rjmp	.+70     	; 0xd9c <vfprintf+0xf0>
     d56:	20 61       	ori	r18, 0x10	; 16
     d58:	21 c0       	rjmp	.+66     	; 0xd9c <vfprintf+0xf0>
     d5a:	27 fd       	sbrc	r18, 7
     d5c:	27 c0       	rjmp	.+78     	; 0xdac <vfprintf+0x100>
     d5e:	38 2f       	mov	r19, r24
     d60:	30 53       	subi	r19, 0x30	; 48
     d62:	3a 30       	cpi	r19, 0x0A	; 10
     d64:	78 f4       	brcc	.+30     	; 0xd84 <vfprintf+0xd8>
     d66:	26 ff       	sbrs	r18, 6
     d68:	06 c0       	rjmp	.+12     	; 0xd76 <vfprintf+0xca>
     d6a:	fa e0       	ldi	r31, 0x0A	; 10
     d6c:	5f 9e       	mul	r5, r31
     d6e:	30 0d       	add	r19, r0
     d70:	11 24       	eor	r1, r1
     d72:	53 2e       	mov	r5, r19
     d74:	13 c0       	rjmp	.+38     	; 0xd9c <vfprintf+0xf0>
     d76:	8a e0       	ldi	r24, 0x0A	; 10
     d78:	38 9e       	mul	r3, r24
     d7a:	30 0d       	add	r19, r0
     d7c:	11 24       	eor	r1, r1
     d7e:	33 2e       	mov	r3, r19
     d80:	20 62       	ori	r18, 0x20	; 32
     d82:	0c c0       	rjmp	.+24     	; 0xd9c <vfprintf+0xf0>
     d84:	8e 32       	cpi	r24, 0x2E	; 46
     d86:	21 f4       	brne	.+8      	; 0xd90 <vfprintf+0xe4>
     d88:	26 fd       	sbrc	r18, 6
     d8a:	65 c1       	rjmp	.+714    	; 0x1056 <vfprintf+0x3aa>
     d8c:	20 64       	ori	r18, 0x40	; 64
     d8e:	06 c0       	rjmp	.+12     	; 0xd9c <vfprintf+0xf0>
     d90:	8c 36       	cpi	r24, 0x6C	; 108
     d92:	11 f4       	brne	.+4      	; 0xd98 <vfprintf+0xec>
     d94:	20 68       	ori	r18, 0x80	; 128
     d96:	02 c0       	rjmp	.+4      	; 0xd9c <vfprintf+0xf0>
     d98:	88 36       	cpi	r24, 0x68	; 104
     d9a:	41 f4       	brne	.+16     	; 0xdac <vfprintf+0x100>
     d9c:	f6 01       	movw	r30, r12
     d9e:	93 fd       	sbrc	r25, 3
     da0:	85 91       	lpm	r24, Z+
     da2:	93 ff       	sbrs	r25, 3
     da4:	81 91       	ld	r24, Z+
     da6:	6f 01       	movw	r12, r30
     da8:	81 11       	cpse	r24, r1
     daa:	c0 cf       	rjmp	.-128    	; 0xd2c <vfprintf+0x80>
     dac:	98 2f       	mov	r25, r24
     dae:	95 54       	subi	r25, 0x45	; 69
     db0:	93 30       	cpi	r25, 0x03	; 3
     db2:	18 f0       	brcs	.+6      	; 0xdba <vfprintf+0x10e>
     db4:	90 52       	subi	r25, 0x20	; 32
     db6:	93 30       	cpi	r25, 0x03	; 3
     db8:	28 f4       	brcc	.+10     	; 0xdc4 <vfprintf+0x118>
     dba:	0c 5f       	subi	r16, 0xFC	; 252
     dbc:	1f 4f       	sbci	r17, 0xFF	; 255
     dbe:	ff e3       	ldi	r31, 0x3F	; 63
     dc0:	f9 83       	std	Y+1, r31	; 0x01
     dc2:	0d c0       	rjmp	.+26     	; 0xdde <vfprintf+0x132>
     dc4:	83 36       	cpi	r24, 0x63	; 99
     dc6:	31 f0       	breq	.+12     	; 0xdd4 <vfprintf+0x128>
     dc8:	83 37       	cpi	r24, 0x73	; 115
     dca:	71 f0       	breq	.+28     	; 0xde8 <vfprintf+0x13c>
     dcc:	83 35       	cpi	r24, 0x53	; 83
     dce:	09 f0       	breq	.+2      	; 0xdd2 <vfprintf+0x126>
     dd0:	5a c0       	rjmp	.+180    	; 0xe86 <vfprintf+0x1da>
     dd2:	22 c0       	rjmp	.+68     	; 0xe18 <vfprintf+0x16c>
     dd4:	f8 01       	movw	r30, r16
     dd6:	80 81       	ld	r24, Z
     dd8:	89 83       	std	Y+1, r24	; 0x01
     dda:	0e 5f       	subi	r16, 0xFE	; 254
     ddc:	1f 4f       	sbci	r17, 0xFF	; 255
     dde:	44 24       	eor	r4, r4
     de0:	43 94       	inc	r4
     de2:	51 2c       	mov	r5, r1
     de4:	54 01       	movw	r10, r8
     de6:	14 c0       	rjmp	.+40     	; 0xe10 <vfprintf+0x164>
     de8:	38 01       	movw	r6, r16
     dea:	f2 e0       	ldi	r31, 0x02	; 2
     dec:	6f 0e       	add	r6, r31
     dee:	71 1c       	adc	r7, r1
     df0:	f8 01       	movw	r30, r16
     df2:	a0 80       	ld	r10, Z
     df4:	b1 80       	ldd	r11, Z+1	; 0x01
     df6:	26 ff       	sbrs	r18, 6
     df8:	03 c0       	rjmp	.+6      	; 0xe00 <vfprintf+0x154>
     dfa:	65 2d       	mov	r22, r5
     dfc:	70 e0       	ldi	r23, 0x00	; 0
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <vfprintf+0x158>
     e00:	6f ef       	ldi	r22, 0xFF	; 255
     e02:	7f ef       	ldi	r23, 0xFF	; 255
     e04:	c5 01       	movw	r24, r10
     e06:	2c 87       	std	Y+12, r18	; 0x0c
     e08:	4e d1       	rcall	.+668    	; 0x10a6 <strnlen>
     e0a:	2c 01       	movw	r4, r24
     e0c:	83 01       	movw	r16, r6
     e0e:	2c 85       	ldd	r18, Y+12	; 0x0c
     e10:	6f e7       	ldi	r22, 0x7F	; 127
     e12:	26 2e       	mov	r2, r22
     e14:	22 22       	and	r2, r18
     e16:	17 c0       	rjmp	.+46     	; 0xe46 <vfprintf+0x19a>
     e18:	38 01       	movw	r6, r16
     e1a:	f2 e0       	ldi	r31, 0x02	; 2
     e1c:	6f 0e       	add	r6, r31
     e1e:	71 1c       	adc	r7, r1
     e20:	f8 01       	movw	r30, r16
     e22:	a0 80       	ld	r10, Z
     e24:	b1 80       	ldd	r11, Z+1	; 0x01
     e26:	26 ff       	sbrs	r18, 6
     e28:	03 c0       	rjmp	.+6      	; 0xe30 <vfprintf+0x184>
     e2a:	65 2d       	mov	r22, r5
     e2c:	70 e0       	ldi	r23, 0x00	; 0
     e2e:	02 c0       	rjmp	.+4      	; 0xe34 <vfprintf+0x188>
     e30:	6f ef       	ldi	r22, 0xFF	; 255
     e32:	7f ef       	ldi	r23, 0xFF	; 255
     e34:	c5 01       	movw	r24, r10
     e36:	2c 87       	std	Y+12, r18	; 0x0c
     e38:	2b d1       	rcall	.+598    	; 0x1090 <strnlen_P>
     e3a:	2c 01       	movw	r4, r24
     e3c:	2c 85       	ldd	r18, Y+12	; 0x0c
     e3e:	50 e8       	ldi	r21, 0x80	; 128
     e40:	25 2e       	mov	r2, r21
     e42:	22 2a       	or	r2, r18
     e44:	83 01       	movw	r16, r6
     e46:	23 fc       	sbrc	r2, 3
     e48:	1a c0       	rjmp	.+52     	; 0xe7e <vfprintf+0x1d2>
     e4a:	05 c0       	rjmp	.+10     	; 0xe56 <vfprintf+0x1aa>
     e4c:	b7 01       	movw	r22, r14
     e4e:	80 e2       	ldi	r24, 0x20	; 32
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	34 d1       	rcall	.+616    	; 0x10bc <fputc>
     e54:	3a 94       	dec	r3
     e56:	83 2d       	mov	r24, r3
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	48 16       	cp	r4, r24
     e5c:	59 06       	cpc	r5, r25
     e5e:	b0 f3       	brcs	.-20     	; 0xe4c <vfprintf+0x1a0>
     e60:	0e c0       	rjmp	.+28     	; 0xe7e <vfprintf+0x1d2>
     e62:	f5 01       	movw	r30, r10
     e64:	27 fc       	sbrc	r2, 7
     e66:	85 91       	lpm	r24, Z+
     e68:	27 fe       	sbrs	r2, 7
     e6a:	81 91       	ld	r24, Z+
     e6c:	5f 01       	movw	r10, r30
     e6e:	b7 01       	movw	r22, r14
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	24 d1       	rcall	.+584    	; 0x10bc <fputc>
     e74:	31 10       	cpse	r3, r1
     e76:	3a 94       	dec	r3
     e78:	f1 e0       	ldi	r31, 0x01	; 1
     e7a:	4f 1a       	sub	r4, r31
     e7c:	51 08       	sbc	r5, r1
     e7e:	41 14       	cp	r4, r1
     e80:	51 04       	cpc	r5, r1
     e82:	79 f7       	brne	.-34     	; 0xe62 <vfprintf+0x1b6>
     e84:	e5 c0       	rjmp	.+458    	; 0x1050 <vfprintf+0x3a4>
     e86:	84 36       	cpi	r24, 0x64	; 100
     e88:	11 f0       	breq	.+4      	; 0xe8e <vfprintf+0x1e2>
     e8a:	89 36       	cpi	r24, 0x69	; 105
     e8c:	39 f5       	brne	.+78     	; 0xedc <vfprintf+0x230>
     e8e:	f8 01       	movw	r30, r16
     e90:	27 ff       	sbrs	r18, 7
     e92:	07 c0       	rjmp	.+14     	; 0xea2 <vfprintf+0x1f6>
     e94:	60 81       	ld	r22, Z
     e96:	71 81       	ldd	r23, Z+1	; 0x01
     e98:	82 81       	ldd	r24, Z+2	; 0x02
     e9a:	93 81       	ldd	r25, Z+3	; 0x03
     e9c:	0c 5f       	subi	r16, 0xFC	; 252
     e9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ea0:	08 c0       	rjmp	.+16     	; 0xeb2 <vfprintf+0x206>
     ea2:	60 81       	ld	r22, Z
     ea4:	71 81       	ldd	r23, Z+1	; 0x01
     ea6:	88 27       	eor	r24, r24
     ea8:	77 fd       	sbrc	r23, 7
     eaa:	80 95       	com	r24
     eac:	98 2f       	mov	r25, r24
     eae:	0e 5f       	subi	r16, 0xFE	; 254
     eb0:	1f 4f       	sbci	r17, 0xFF	; 255
     eb2:	4f e6       	ldi	r20, 0x6F	; 111
     eb4:	b4 2e       	mov	r11, r20
     eb6:	b2 22       	and	r11, r18
     eb8:	97 ff       	sbrs	r25, 7
     eba:	09 c0       	rjmp	.+18     	; 0xece <vfprintf+0x222>
     ebc:	90 95       	com	r25
     ebe:	80 95       	com	r24
     ec0:	70 95       	com	r23
     ec2:	61 95       	neg	r22
     ec4:	7f 4f       	sbci	r23, 0xFF	; 255
     ec6:	8f 4f       	sbci	r24, 0xFF	; 255
     ec8:	9f 4f       	sbci	r25, 0xFF	; 255
     eca:	f0 e8       	ldi	r31, 0x80	; 128
     ecc:	bf 2a       	or	r11, r31
     ece:	2a e0       	ldi	r18, 0x0A	; 10
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	a4 01       	movw	r20, r8
     ed4:	1f d1       	rcall	.+574    	; 0x1114 <__ultoa_invert>
     ed6:	a8 2e       	mov	r10, r24
     ed8:	a8 18       	sub	r10, r8
     eda:	42 c0       	rjmp	.+132    	; 0xf60 <vfprintf+0x2b4>
     edc:	85 37       	cpi	r24, 0x75	; 117
     ede:	31 f4       	brne	.+12     	; 0xeec <vfprintf+0x240>
     ee0:	3f ee       	ldi	r19, 0xEF	; 239
     ee2:	b3 2e       	mov	r11, r19
     ee4:	b2 22       	and	r11, r18
     ee6:	2a e0       	ldi	r18, 0x0A	; 10
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	24 c0       	rjmp	.+72     	; 0xf34 <vfprintf+0x288>
     eec:	99 ef       	ldi	r25, 0xF9	; 249
     eee:	b9 2e       	mov	r11, r25
     ef0:	b2 22       	and	r11, r18
     ef2:	8f 36       	cpi	r24, 0x6F	; 111
     ef4:	b9 f0       	breq	.+46     	; 0xf24 <vfprintf+0x278>
     ef6:	20 f4       	brcc	.+8      	; 0xf00 <vfprintf+0x254>
     ef8:	88 35       	cpi	r24, 0x58	; 88
     efa:	09 f0       	breq	.+2      	; 0xefe <vfprintf+0x252>
     efc:	ac c0       	rjmp	.+344    	; 0x1056 <vfprintf+0x3aa>
     efe:	0d c0       	rjmp	.+26     	; 0xf1a <vfprintf+0x26e>
     f00:	80 37       	cpi	r24, 0x70	; 112
     f02:	21 f0       	breq	.+8      	; 0xf0c <vfprintf+0x260>
     f04:	88 37       	cpi	r24, 0x78	; 120
     f06:	09 f0       	breq	.+2      	; 0xf0a <vfprintf+0x25e>
     f08:	a6 c0       	rjmp	.+332    	; 0x1056 <vfprintf+0x3aa>
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <vfprintf+0x264>
     f0c:	20 e1       	ldi	r18, 0x10	; 16
     f0e:	b2 2a       	or	r11, r18
     f10:	b4 fe       	sbrs	r11, 4
     f12:	0b c0       	rjmp	.+22     	; 0xf2a <vfprintf+0x27e>
     f14:	84 e0       	ldi	r24, 0x04	; 4
     f16:	b8 2a       	or	r11, r24
     f18:	08 c0       	rjmp	.+16     	; 0xf2a <vfprintf+0x27e>
     f1a:	24 ff       	sbrs	r18, 4
     f1c:	09 c0       	rjmp	.+18     	; 0xf30 <vfprintf+0x284>
     f1e:	e6 e0       	ldi	r30, 0x06	; 6
     f20:	be 2a       	or	r11, r30
     f22:	06 c0       	rjmp	.+12     	; 0xf30 <vfprintf+0x284>
     f24:	28 e0       	ldi	r18, 0x08	; 8
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	05 c0       	rjmp	.+10     	; 0xf34 <vfprintf+0x288>
     f2a:	20 e1       	ldi	r18, 0x10	; 16
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <vfprintf+0x288>
     f30:	20 e1       	ldi	r18, 0x10	; 16
     f32:	32 e0       	ldi	r19, 0x02	; 2
     f34:	f8 01       	movw	r30, r16
     f36:	b7 fe       	sbrs	r11, 7
     f38:	07 c0       	rjmp	.+14     	; 0xf48 <vfprintf+0x29c>
     f3a:	60 81       	ld	r22, Z
     f3c:	71 81       	ldd	r23, Z+1	; 0x01
     f3e:	82 81       	ldd	r24, Z+2	; 0x02
     f40:	93 81       	ldd	r25, Z+3	; 0x03
     f42:	0c 5f       	subi	r16, 0xFC	; 252
     f44:	1f 4f       	sbci	r17, 0xFF	; 255
     f46:	06 c0       	rjmp	.+12     	; 0xf54 <vfprintf+0x2a8>
     f48:	60 81       	ld	r22, Z
     f4a:	71 81       	ldd	r23, Z+1	; 0x01
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	0e 5f       	subi	r16, 0xFE	; 254
     f52:	1f 4f       	sbci	r17, 0xFF	; 255
     f54:	a4 01       	movw	r20, r8
     f56:	de d0       	rcall	.+444    	; 0x1114 <__ultoa_invert>
     f58:	a8 2e       	mov	r10, r24
     f5a:	a8 18       	sub	r10, r8
     f5c:	ff e7       	ldi	r31, 0x7F	; 127
     f5e:	bf 22       	and	r11, r31
     f60:	b6 fe       	sbrs	r11, 6
     f62:	0b c0       	rjmp	.+22     	; 0xf7a <vfprintf+0x2ce>
     f64:	2b 2d       	mov	r18, r11
     f66:	2e 7f       	andi	r18, 0xFE	; 254
     f68:	a5 14       	cp	r10, r5
     f6a:	50 f4       	brcc	.+20     	; 0xf80 <vfprintf+0x2d4>
     f6c:	b4 fe       	sbrs	r11, 4
     f6e:	0a c0       	rjmp	.+20     	; 0xf84 <vfprintf+0x2d8>
     f70:	b2 fc       	sbrc	r11, 2
     f72:	08 c0       	rjmp	.+16     	; 0xf84 <vfprintf+0x2d8>
     f74:	2b 2d       	mov	r18, r11
     f76:	2e 7e       	andi	r18, 0xEE	; 238
     f78:	05 c0       	rjmp	.+10     	; 0xf84 <vfprintf+0x2d8>
     f7a:	7a 2c       	mov	r7, r10
     f7c:	2b 2d       	mov	r18, r11
     f7e:	03 c0       	rjmp	.+6      	; 0xf86 <vfprintf+0x2da>
     f80:	7a 2c       	mov	r7, r10
     f82:	01 c0       	rjmp	.+2      	; 0xf86 <vfprintf+0x2da>
     f84:	75 2c       	mov	r7, r5
     f86:	24 ff       	sbrs	r18, 4
     f88:	0d c0       	rjmp	.+26     	; 0xfa4 <vfprintf+0x2f8>
     f8a:	fe 01       	movw	r30, r28
     f8c:	ea 0d       	add	r30, r10
     f8e:	f1 1d       	adc	r31, r1
     f90:	80 81       	ld	r24, Z
     f92:	80 33       	cpi	r24, 0x30	; 48
     f94:	11 f4       	brne	.+4      	; 0xf9a <vfprintf+0x2ee>
     f96:	29 7e       	andi	r18, 0xE9	; 233
     f98:	09 c0       	rjmp	.+18     	; 0xfac <vfprintf+0x300>
     f9a:	22 ff       	sbrs	r18, 2
     f9c:	06 c0       	rjmp	.+12     	; 0xfaa <vfprintf+0x2fe>
     f9e:	73 94       	inc	r7
     fa0:	73 94       	inc	r7
     fa2:	04 c0       	rjmp	.+8      	; 0xfac <vfprintf+0x300>
     fa4:	82 2f       	mov	r24, r18
     fa6:	86 78       	andi	r24, 0x86	; 134
     fa8:	09 f0       	breq	.+2      	; 0xfac <vfprintf+0x300>
     faa:	73 94       	inc	r7
     fac:	23 fd       	sbrc	r18, 3
     fae:	13 c0       	rjmp	.+38     	; 0xfd6 <vfprintf+0x32a>
     fb0:	20 ff       	sbrs	r18, 0
     fb2:	0e c0       	rjmp	.+28     	; 0xfd0 <vfprintf+0x324>
     fb4:	5a 2c       	mov	r5, r10
     fb6:	73 14       	cp	r7, r3
     fb8:	58 f4       	brcc	.+22     	; 0xfd0 <vfprintf+0x324>
     fba:	53 0c       	add	r5, r3
     fbc:	57 18       	sub	r5, r7
     fbe:	73 2c       	mov	r7, r3
     fc0:	07 c0       	rjmp	.+14     	; 0xfd0 <vfprintf+0x324>
     fc2:	b7 01       	movw	r22, r14
     fc4:	80 e2       	ldi	r24, 0x20	; 32
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	2c 87       	std	Y+12, r18	; 0x0c
     fca:	78 d0       	rcall	.+240    	; 0x10bc <fputc>
     fcc:	73 94       	inc	r7
     fce:	2c 85       	ldd	r18, Y+12	; 0x0c
     fd0:	73 14       	cp	r7, r3
     fd2:	b8 f3       	brcs	.-18     	; 0xfc2 <vfprintf+0x316>
     fd4:	04 c0       	rjmp	.+8      	; 0xfde <vfprintf+0x332>
     fd6:	73 14       	cp	r7, r3
     fd8:	10 f4       	brcc	.+4      	; 0xfde <vfprintf+0x332>
     fda:	37 18       	sub	r3, r7
     fdc:	01 c0       	rjmp	.+2      	; 0xfe0 <vfprintf+0x334>
     fde:	31 2c       	mov	r3, r1
     fe0:	24 ff       	sbrs	r18, 4
     fe2:	11 c0       	rjmp	.+34     	; 0x1006 <vfprintf+0x35a>
     fe4:	b7 01       	movw	r22, r14
     fe6:	80 e3       	ldi	r24, 0x30	; 48
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	2c 87       	std	Y+12, r18	; 0x0c
     fec:	67 d0       	rcall	.+206    	; 0x10bc <fputc>
     fee:	2c 85       	ldd	r18, Y+12	; 0x0c
     ff0:	22 ff       	sbrs	r18, 2
     ff2:	1c c0       	rjmp	.+56     	; 0x102c <vfprintf+0x380>
     ff4:	21 ff       	sbrs	r18, 1
     ff6:	03 c0       	rjmp	.+6      	; 0xffe <vfprintf+0x352>
     ff8:	88 e5       	ldi	r24, 0x58	; 88
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <vfprintf+0x356>
     ffe:	88 e7       	ldi	r24, 0x78	; 120
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	b7 01       	movw	r22, r14
    1004:	0c c0       	rjmp	.+24     	; 0x101e <vfprintf+0x372>
    1006:	82 2f       	mov	r24, r18
    1008:	86 78       	andi	r24, 0x86	; 134
    100a:	81 f0       	breq	.+32     	; 0x102c <vfprintf+0x380>
    100c:	21 fd       	sbrc	r18, 1
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <vfprintf+0x368>
    1010:	80 e2       	ldi	r24, 0x20	; 32
    1012:	01 c0       	rjmp	.+2      	; 0x1016 <vfprintf+0x36a>
    1014:	8b e2       	ldi	r24, 0x2B	; 43
    1016:	27 fd       	sbrc	r18, 7
    1018:	8d e2       	ldi	r24, 0x2D	; 45
    101a:	b7 01       	movw	r22, r14
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	4e d0       	rcall	.+156    	; 0x10bc <fputc>
    1020:	05 c0       	rjmp	.+10     	; 0x102c <vfprintf+0x380>
    1022:	b7 01       	movw	r22, r14
    1024:	80 e3       	ldi	r24, 0x30	; 48
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	49 d0       	rcall	.+146    	; 0x10bc <fputc>
    102a:	5a 94       	dec	r5
    102c:	a5 14       	cp	r10, r5
    102e:	c8 f3       	brcs	.-14     	; 0x1022 <vfprintf+0x376>
    1030:	aa 94       	dec	r10
    1032:	f4 01       	movw	r30, r8
    1034:	ea 0d       	add	r30, r10
    1036:	f1 1d       	adc	r31, r1
    1038:	b7 01       	movw	r22, r14
    103a:	80 81       	ld	r24, Z
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	3e d0       	rcall	.+124    	; 0x10bc <fputc>
    1040:	a1 10       	cpse	r10, r1
    1042:	f6 cf       	rjmp	.-20     	; 0x1030 <vfprintf+0x384>
    1044:	05 c0       	rjmp	.+10     	; 0x1050 <vfprintf+0x3a4>
    1046:	b7 01       	movw	r22, r14
    1048:	80 e2       	ldi	r24, 0x20	; 32
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	37 d0       	rcall	.+110    	; 0x10bc <fputc>
    104e:	3a 94       	dec	r3
    1050:	31 10       	cpse	r3, r1
    1052:	f9 cf       	rjmp	.-14     	; 0x1046 <vfprintf+0x39a>
    1054:	50 ce       	rjmp	.-864    	; 0xcf6 <vfprintf+0x4a>
    1056:	f7 01       	movw	r30, r14
    1058:	26 81       	ldd	r18, Z+6	; 0x06
    105a:	37 81       	ldd	r19, Z+7	; 0x07
    105c:	02 c0       	rjmp	.+4      	; 0x1062 <vfprintf+0x3b6>
    105e:	2f ef       	ldi	r18, 0xFF	; 255
    1060:	3f ef       	ldi	r19, 0xFF	; 255
    1062:	c9 01       	movw	r24, r18
    1064:	2c 96       	adiw	r28, 0x0c	; 12
    1066:	cd bf       	out	0x3d, r28	; 61
    1068:	de bf       	out	0x3e, r29	; 62
    106a:	df 91       	pop	r29
    106c:	cf 91       	pop	r28
    106e:	1f 91       	pop	r17
    1070:	0f 91       	pop	r16
    1072:	ff 90       	pop	r15
    1074:	ef 90       	pop	r14
    1076:	df 90       	pop	r13
    1078:	cf 90       	pop	r12
    107a:	bf 90       	pop	r11
    107c:	af 90       	pop	r10
    107e:	9f 90       	pop	r9
    1080:	8f 90       	pop	r8
    1082:	7f 90       	pop	r7
    1084:	6f 90       	pop	r6
    1086:	5f 90       	pop	r5
    1088:	4f 90       	pop	r4
    108a:	3f 90       	pop	r3
    108c:	2f 90       	pop	r2
    108e:	08 95       	ret

00001090 <strnlen_P>:
    1090:	fc 01       	movw	r30, r24
    1092:	05 90       	lpm	r0, Z+
    1094:	61 50       	subi	r22, 0x01	; 1
    1096:	70 40       	sbci	r23, 0x00	; 0
    1098:	01 10       	cpse	r0, r1
    109a:	d8 f7       	brcc	.-10     	; 0x1092 <strnlen_P+0x2>
    109c:	80 95       	com	r24
    109e:	90 95       	com	r25
    10a0:	8e 0f       	add	r24, r30
    10a2:	9f 1f       	adc	r25, r31
    10a4:	08 95       	ret

000010a6 <strnlen>:
    10a6:	fc 01       	movw	r30, r24
    10a8:	61 50       	subi	r22, 0x01	; 1
    10aa:	70 40       	sbci	r23, 0x00	; 0
    10ac:	01 90       	ld	r0, Z+
    10ae:	01 10       	cpse	r0, r1
    10b0:	d8 f7       	brcc	.-10     	; 0x10a8 <strnlen+0x2>
    10b2:	80 95       	com	r24
    10b4:	90 95       	com	r25
    10b6:	8e 0f       	add	r24, r30
    10b8:	9f 1f       	adc	r25, r31
    10ba:	08 95       	ret

000010bc <fputc>:
    10bc:	0f 93       	push	r16
    10be:	1f 93       	push	r17
    10c0:	cf 93       	push	r28
    10c2:	df 93       	push	r29
    10c4:	8c 01       	movw	r16, r24
    10c6:	eb 01       	movw	r28, r22
    10c8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ca:	81 fd       	sbrc	r24, 1
    10cc:	03 c0       	rjmp	.+6      	; 0x10d4 <fputc+0x18>
    10ce:	0f ef       	ldi	r16, 0xFF	; 255
    10d0:	1f ef       	ldi	r17, 0xFF	; 255
    10d2:	1a c0       	rjmp	.+52     	; 0x1108 <fputc+0x4c>
    10d4:	82 ff       	sbrs	r24, 2
    10d6:	0d c0       	rjmp	.+26     	; 0x10f2 <fputc+0x36>
    10d8:	2e 81       	ldd	r18, Y+6	; 0x06
    10da:	3f 81       	ldd	r19, Y+7	; 0x07
    10dc:	8c 81       	ldd	r24, Y+4	; 0x04
    10de:	9d 81       	ldd	r25, Y+5	; 0x05
    10e0:	28 17       	cp	r18, r24
    10e2:	39 07       	cpc	r19, r25
    10e4:	64 f4       	brge	.+24     	; 0x10fe <fputc+0x42>
    10e6:	e8 81       	ld	r30, Y
    10e8:	f9 81       	ldd	r31, Y+1	; 0x01
    10ea:	01 93       	st	Z+, r16
    10ec:	e8 83       	st	Y, r30
    10ee:	f9 83       	std	Y+1, r31	; 0x01
    10f0:	06 c0       	rjmp	.+12     	; 0x10fe <fputc+0x42>
    10f2:	e8 85       	ldd	r30, Y+8	; 0x08
    10f4:	f9 85       	ldd	r31, Y+9	; 0x09
    10f6:	80 2f       	mov	r24, r16
    10f8:	19 95       	eicall
    10fa:	89 2b       	or	r24, r25
    10fc:	41 f7       	brne	.-48     	; 0x10ce <fputc+0x12>
    10fe:	8e 81       	ldd	r24, Y+6	; 0x06
    1100:	9f 81       	ldd	r25, Y+7	; 0x07
    1102:	01 96       	adiw	r24, 0x01	; 1
    1104:	8e 83       	std	Y+6, r24	; 0x06
    1106:	9f 83       	std	Y+7, r25	; 0x07
    1108:	c8 01       	movw	r24, r16
    110a:	df 91       	pop	r29
    110c:	cf 91       	pop	r28
    110e:	1f 91       	pop	r17
    1110:	0f 91       	pop	r16
    1112:	08 95       	ret

00001114 <__ultoa_invert>:
    1114:	fa 01       	movw	r30, r20
    1116:	aa 27       	eor	r26, r26
    1118:	28 30       	cpi	r18, 0x08	; 8
    111a:	51 f1       	breq	.+84     	; 0x1170 <__ultoa_invert+0x5c>
    111c:	20 31       	cpi	r18, 0x10	; 16
    111e:	81 f1       	breq	.+96     	; 0x1180 <__ultoa_invert+0x6c>
    1120:	e8 94       	clt
    1122:	6f 93       	push	r22
    1124:	6e 7f       	andi	r22, 0xFE	; 254
    1126:	6e 5f       	subi	r22, 0xFE	; 254
    1128:	7f 4f       	sbci	r23, 0xFF	; 255
    112a:	8f 4f       	sbci	r24, 0xFF	; 255
    112c:	9f 4f       	sbci	r25, 0xFF	; 255
    112e:	af 4f       	sbci	r26, 0xFF	; 255
    1130:	b1 e0       	ldi	r27, 0x01	; 1
    1132:	3e d0       	rcall	.+124    	; 0x11b0 <__ultoa_invert+0x9c>
    1134:	b4 e0       	ldi	r27, 0x04	; 4
    1136:	3c d0       	rcall	.+120    	; 0x11b0 <__ultoa_invert+0x9c>
    1138:	67 0f       	add	r22, r23
    113a:	78 1f       	adc	r23, r24
    113c:	89 1f       	adc	r24, r25
    113e:	9a 1f       	adc	r25, r26
    1140:	a1 1d       	adc	r26, r1
    1142:	68 0f       	add	r22, r24
    1144:	79 1f       	adc	r23, r25
    1146:	8a 1f       	adc	r24, r26
    1148:	91 1d       	adc	r25, r1
    114a:	a1 1d       	adc	r26, r1
    114c:	6a 0f       	add	r22, r26
    114e:	71 1d       	adc	r23, r1
    1150:	81 1d       	adc	r24, r1
    1152:	91 1d       	adc	r25, r1
    1154:	a1 1d       	adc	r26, r1
    1156:	20 d0       	rcall	.+64     	; 0x1198 <__ultoa_invert+0x84>
    1158:	09 f4       	brne	.+2      	; 0x115c <__ultoa_invert+0x48>
    115a:	68 94       	set
    115c:	3f 91       	pop	r19
    115e:	2a e0       	ldi	r18, 0x0A	; 10
    1160:	26 9f       	mul	r18, r22
    1162:	11 24       	eor	r1, r1
    1164:	30 19       	sub	r19, r0
    1166:	30 5d       	subi	r19, 0xD0	; 208
    1168:	31 93       	st	Z+, r19
    116a:	de f6       	brtc	.-74     	; 0x1122 <__ultoa_invert+0xe>
    116c:	cf 01       	movw	r24, r30
    116e:	08 95       	ret
    1170:	46 2f       	mov	r20, r22
    1172:	47 70       	andi	r20, 0x07	; 7
    1174:	40 5d       	subi	r20, 0xD0	; 208
    1176:	41 93       	st	Z+, r20
    1178:	b3 e0       	ldi	r27, 0x03	; 3
    117a:	0f d0       	rcall	.+30     	; 0x119a <__ultoa_invert+0x86>
    117c:	c9 f7       	brne	.-14     	; 0x1170 <__ultoa_invert+0x5c>
    117e:	f6 cf       	rjmp	.-20     	; 0x116c <__ultoa_invert+0x58>
    1180:	46 2f       	mov	r20, r22
    1182:	4f 70       	andi	r20, 0x0F	; 15
    1184:	40 5d       	subi	r20, 0xD0	; 208
    1186:	4a 33       	cpi	r20, 0x3A	; 58
    1188:	18 f0       	brcs	.+6      	; 0x1190 <__ultoa_invert+0x7c>
    118a:	49 5d       	subi	r20, 0xD9	; 217
    118c:	31 fd       	sbrc	r19, 1
    118e:	40 52       	subi	r20, 0x20	; 32
    1190:	41 93       	st	Z+, r20
    1192:	02 d0       	rcall	.+4      	; 0x1198 <__ultoa_invert+0x84>
    1194:	a9 f7       	brne	.-22     	; 0x1180 <__ultoa_invert+0x6c>
    1196:	ea cf       	rjmp	.-44     	; 0x116c <__ultoa_invert+0x58>
    1198:	b4 e0       	ldi	r27, 0x04	; 4
    119a:	a6 95       	lsr	r26
    119c:	97 95       	ror	r25
    119e:	87 95       	ror	r24
    11a0:	77 95       	ror	r23
    11a2:	67 95       	ror	r22
    11a4:	ba 95       	dec	r27
    11a6:	c9 f7       	brne	.-14     	; 0x119a <__ultoa_invert+0x86>
    11a8:	00 97       	sbiw	r24, 0x00	; 0
    11aa:	61 05       	cpc	r22, r1
    11ac:	71 05       	cpc	r23, r1
    11ae:	08 95       	ret
    11b0:	9b 01       	movw	r18, r22
    11b2:	ac 01       	movw	r20, r24
    11b4:	0a 2e       	mov	r0, r26
    11b6:	06 94       	lsr	r0
    11b8:	57 95       	ror	r21
    11ba:	47 95       	ror	r20
    11bc:	37 95       	ror	r19
    11be:	27 95       	ror	r18
    11c0:	ba 95       	dec	r27
    11c2:	c9 f7       	brne	.-14     	; 0x11b6 <__ultoa_invert+0xa2>
    11c4:	62 0f       	add	r22, r18
    11c6:	73 1f       	adc	r23, r19
    11c8:	84 1f       	adc	r24, r20
    11ca:	95 1f       	adc	r25, r21
    11cc:	a0 1d       	adc	r26, r0
    11ce:	08 95       	ret

000011d0 <_exit>:
    11d0:	f8 94       	cli

000011d2 <__stop_program>:
    11d2:	ff cf       	rjmp	.-2      	; 0x11d2 <__stop_program>
