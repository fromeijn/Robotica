
Xmega_NXT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000019d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000052  00802000  000019d4  00001a68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000003a8  00802052  00802052  00001aba  2**0
                  ALLOC
  3 .stab         00002b08  00000000  00000000  00001abc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000a29  00000000  00000000  000045c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004fed  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000200  00000000  00000000  0000501c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003d9e  00000000  00000000  0000521c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000d18  00000000  00000000  00008fba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000168c  00000000  00000000  00009cd2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000850  00000000  00000000  0000b360  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000225a  00000000  00000000  0000bbb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000023cd  00000000  00000000  0000de0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000190  00000000  00000000  000101d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
       2:	00 00       	nop
       4:	20 c1       	rjmp	.+576    	; 0x246 <__bad_interrupt>
       6:	00 00       	nop
       8:	43 c2       	rjmp	.+1158   	; 0x490 <__vector_2>
       a:	00 00       	nop
       c:	1c c1       	rjmp	.+568    	; 0x246 <__bad_interrupt>
       e:	00 00       	nop
      10:	1a c1       	rjmp	.+564    	; 0x246 <__bad_interrupt>
      12:	00 00       	nop
      14:	18 c1       	rjmp	.+560    	; 0x246 <__bad_interrupt>
      16:	00 00       	nop
      18:	16 c1       	rjmp	.+556    	; 0x246 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	14 c1       	rjmp	.+552    	; 0x246 <__bad_interrupt>
      1e:	00 00       	nop
      20:	12 c1       	rjmp	.+548    	; 0x246 <__bad_interrupt>
      22:	00 00       	nop
      24:	10 c1       	rjmp	.+544    	; 0x246 <__bad_interrupt>
      26:	00 00       	nop
      28:	0e c1       	rjmp	.+540    	; 0x246 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c c1       	rjmp	.+536    	; 0x246 <__bad_interrupt>
      2e:	00 00       	nop
      30:	fb c1       	rjmp	.+1014   	; 0x428 <__vector_12>
      32:	00 00       	nop
      34:	08 c1       	rjmp	.+528    	; 0x246 <__bad_interrupt>
      36:	00 00       	nop
      38:	06 c1       	rjmp	.+524    	; 0x246 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	04 c1       	rjmp	.+520    	; 0x246 <__bad_interrupt>
      3e:	00 00       	nop
      40:	02 c1       	rjmp	.+516    	; 0x246 <__bad_interrupt>
      42:	00 00       	nop
      44:	00 c1       	rjmp	.+512    	; 0x246 <__bad_interrupt>
      46:	00 00       	nop
      48:	fe c0       	rjmp	.+508    	; 0x246 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	fc c0       	rjmp	.+504    	; 0x246 <__bad_interrupt>
      4e:	00 00       	nop
      50:	33 c2       	rjmp	.+1126   	; 0x4b8 <__vector_20>
      52:	00 00       	nop
      54:	f8 c0       	rjmp	.+496    	; 0x246 <__bad_interrupt>
      56:	00 00       	nop
      58:	f6 c0       	rjmp	.+492    	; 0x246 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f4 c0       	rjmp	.+488    	; 0x246 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f2 c0       	rjmp	.+484    	; 0x246 <__bad_interrupt>
      62:	00 00       	nop
      64:	f0 c0       	rjmp	.+480    	; 0x246 <__bad_interrupt>
      66:	00 00       	nop
      68:	ee c0       	rjmp	.+476    	; 0x246 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ec c0       	rjmp	.+472    	; 0x246 <__bad_interrupt>
      6e:	00 00       	nop
      70:	0b c1       	rjmp	.+534    	; 0x288 <__vector_28>
      72:	00 00       	nop
      74:	3d c1       	rjmp	.+634    	; 0x2f0 <__vector_29>
      76:	00 00       	nop
      78:	e6 c0       	rjmp	.+460    	; 0x246 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e4 c0       	rjmp	.+456    	; 0x246 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e2 c0       	rjmp	.+452    	; 0x246 <__bad_interrupt>
      82:	00 00       	nop
      84:	e0 c0       	rjmp	.+448    	; 0x246 <__bad_interrupt>
      86:	00 00       	nop
      88:	de c0       	rjmp	.+444    	; 0x246 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	dc c0       	rjmp	.+440    	; 0x246 <__bad_interrupt>
      8e:	00 00       	nop
      90:	da c0       	rjmp	.+436    	; 0x246 <__bad_interrupt>
      92:	00 00       	nop
      94:	d8 c0       	rjmp	.+432    	; 0x246 <__bad_interrupt>
      96:	00 00       	nop
      98:	d6 c0       	rjmp	.+428    	; 0x246 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d4 c0       	rjmp	.+424    	; 0x246 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d2 c0       	rjmp	.+420    	; 0x246 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d0 c0       	rjmp	.+416    	; 0x246 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	ce c0       	rjmp	.+412    	; 0x246 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	cc c0       	rjmp	.+408    	; 0x246 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	ca c0       	rjmp	.+404    	; 0x246 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c8 c0       	rjmp	.+400    	; 0x246 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c6 c0       	rjmp	.+396    	; 0x246 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	f3 c2       	rjmp	.+1510   	; 0x6a4 <__vector_47>
      be:	00 00       	nop
      c0:	c2 c0       	rjmp	.+388    	; 0x246 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c0 c0       	rjmp	.+384    	; 0x246 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	be c0       	rjmp	.+380    	; 0x246 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	bc c0       	rjmp	.+376    	; 0x246 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	ba c0       	rjmp	.+372    	; 0x246 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	b8 c0       	rjmp	.+368    	; 0x246 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	b6 c0       	rjmp	.+364    	; 0x246 <__bad_interrupt>
      da:	00 00       	nop
      dc:	b4 c0       	rjmp	.+360    	; 0x246 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b2 c0       	rjmp	.+356    	; 0x246 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	b0 c0       	rjmp	.+352    	; 0x246 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	ae c0       	rjmp	.+348    	; 0x246 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	ac c0       	rjmp	.+344    	; 0x246 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	aa c0       	rjmp	.+340    	; 0x246 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	a8 c0       	rjmp	.+336    	; 0x246 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	a6 c0       	rjmp	.+332    	; 0x246 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	a4 c0       	rjmp	.+328    	; 0x246 <__bad_interrupt>
      fe:	00 00       	nop
     100:	a2 c0       	rjmp	.+324    	; 0x246 <__bad_interrupt>
     102:	00 00       	nop
     104:	a0 c0       	rjmp	.+320    	; 0x246 <__bad_interrupt>
     106:	00 00       	nop
     108:	9e c0       	rjmp	.+316    	; 0x246 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	9c c0       	rjmp	.+312    	; 0x246 <__bad_interrupt>
     10e:	00 00       	nop
     110:	9a c0       	rjmp	.+308    	; 0x246 <__bad_interrupt>
     112:	00 00       	nop
     114:	98 c0       	rjmp	.+304    	; 0x246 <__bad_interrupt>
     116:	00 00       	nop
     118:	96 c0       	rjmp	.+300    	; 0x246 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	94 c0       	rjmp	.+296    	; 0x246 <__bad_interrupt>
     11e:	00 00       	nop
     120:	92 c0       	rjmp	.+292    	; 0x246 <__bad_interrupt>
     122:	00 00       	nop
     124:	90 c0       	rjmp	.+288    	; 0x246 <__bad_interrupt>
     126:	00 00       	nop
     128:	8e c0       	rjmp	.+284    	; 0x246 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	8c c0       	rjmp	.+280    	; 0x246 <__bad_interrupt>
     12e:	00 00       	nop
     130:	8a c0       	rjmp	.+276    	; 0x246 <__bad_interrupt>
     132:	00 00       	nop
     134:	88 c0       	rjmp	.+272    	; 0x246 <__bad_interrupt>
     136:	00 00       	nop
     138:	86 c0       	rjmp	.+268    	; 0x246 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	33 c2       	rjmp	.+1126   	; 0x5a4 <__vector_79>
     13e:	00 00       	nop
     140:	82 c0       	rjmp	.+260    	; 0x246 <__bad_interrupt>
     142:	00 00       	nop
     144:	80 c0       	rjmp	.+256    	; 0x246 <__bad_interrupt>
     146:	00 00       	nop
     148:	7e c0       	rjmp	.+252    	; 0x246 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	7c c0       	rjmp	.+248    	; 0x246 <__bad_interrupt>
     14e:	00 00       	nop
     150:	7a c0       	rjmp	.+244    	; 0x246 <__bad_interrupt>
     152:	00 00       	nop
     154:	67 c2       	rjmp	.+1230   	; 0x624 <__vector_85>
     156:	00 00       	nop
     158:	76 c0       	rjmp	.+236    	; 0x246 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	74 c0       	rjmp	.+232    	; 0x246 <__bad_interrupt>
     15e:	00 00       	nop
     160:	fb c0       	rjmp	.+502    	; 0x358 <__vector_88>
     162:	00 00       	nop
     164:	2d c1       	rjmp	.+602    	; 0x3c0 <__vector_89>
     166:	00 00       	nop
     168:	6e c0       	rjmp	.+220    	; 0x246 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	6c c0       	rjmp	.+216    	; 0x246 <__bad_interrupt>
     16e:	00 00       	nop
     170:	6a c0       	rjmp	.+212    	; 0x246 <__bad_interrupt>
     172:	00 00       	nop
     174:	68 c0       	rjmp	.+208    	; 0x246 <__bad_interrupt>
     176:	00 00       	nop
     178:	66 c0       	rjmp	.+204    	; 0x246 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	64 c0       	rjmp	.+200    	; 0x246 <__bad_interrupt>
     17e:	00 00       	nop
     180:	62 c0       	rjmp	.+196    	; 0x246 <__bad_interrupt>
     182:	00 00       	nop
     184:	60 c0       	rjmp	.+192    	; 0x246 <__bad_interrupt>
     186:	00 00       	nop
     188:	5e c0       	rjmp	.+188    	; 0x246 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	5c c0       	rjmp	.+184    	; 0x246 <__bad_interrupt>
     18e:	00 00       	nop
     190:	5a c0       	rjmp	.+180    	; 0x246 <__bad_interrupt>
     192:	00 00       	nop
     194:	58 c0       	rjmp	.+176    	; 0x246 <__bad_interrupt>
     196:	00 00       	nop
     198:	56 c0       	rjmp	.+172    	; 0x246 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	54 c0       	rjmp	.+168    	; 0x246 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	52 c0       	rjmp	.+164    	; 0x246 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	50 c0       	rjmp	.+160    	; 0x246 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	4e c0       	rjmp	.+156    	; 0x246 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	4c c0       	rjmp	.+152    	; 0x246 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	4a c0       	rjmp	.+148    	; 0x246 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	48 c0       	rjmp	.+144    	; 0x246 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	46 c0       	rjmp	.+140    	; 0x246 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	44 c0       	rjmp	.+136    	; 0x246 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	42 c0       	rjmp	.+132    	; 0x246 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	40 c0       	rjmp	.+128    	; 0x246 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	3e c0       	rjmp	.+124    	; 0x246 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	3c c0       	rjmp	.+120    	; 0x246 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	3a c0       	rjmp	.+116    	; 0x246 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	38 c0       	rjmp	.+112    	; 0x246 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	36 c0       	rjmp	.+108    	; 0x246 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	34 c0       	rjmp	.+104    	; 0x246 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	32 c0       	rjmp	.+100    	; 0x246 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	30 c0       	rjmp	.+96     	; 0x246 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	2e c0       	rjmp	.+92     	; 0x246 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	2c c0       	rjmp	.+88     	; 0x246 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	2a c0       	rjmp	.+84     	; 0x246 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	28 c0       	rjmp	.+80     	; 0x246 <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	26 c0       	rjmp	.+76     	; 0x246 <__bad_interrupt>
	...

000001fc <__ctors_end>:
     1fc:	11 24       	eor	r1, r1
     1fe:	1f be       	out	0x3f, r1	; 63
     200:	cf ef       	ldi	r28, 0xFF	; 255
     202:	df e3       	ldi	r29, 0x3F	; 63
     204:	de bf       	out	0x3e, r29	; 62
     206:	cd bf       	out	0x3d, r28	; 61
     208:	00 e0       	ldi	r16, 0x00	; 0
     20a:	0c bf       	out	0x3c, r16	; 60
     20c:	18 be       	out	0x38, r1	; 56
     20e:	19 be       	out	0x39, r1	; 57
     210:	1a be       	out	0x3a, r1	; 58
     212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
     214:	10 e2       	ldi	r17, 0x20	; 32
     216:	a0 e0       	ldi	r26, 0x00	; 0
     218:	b0 e2       	ldi	r27, 0x20	; 32
     21a:	e4 ed       	ldi	r30, 0xD4	; 212
     21c:	f9 e1       	ldi	r31, 0x19	; 25
     21e:	00 e0       	ldi	r16, 0x00	; 0
     220:	0b bf       	out	0x3b, r16	; 59
     222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
     224:	07 90       	elpm	r0, Z+
     226:	0d 92       	st	X+, r0
     228:	a2 35       	cpi	r26, 0x52	; 82
     22a:	b1 07       	cpc	r27, r17
     22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
     22e:	1b be       	out	0x3b, r1	; 59

00000230 <__do_clear_bss>:
     230:	23 e2       	ldi	r18, 0x23	; 35
     232:	a2 e5       	ldi	r26, 0x52	; 82
     234:	b0 e2       	ldi	r27, 0x20	; 32
     236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
     238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
     23a:	aa 3f       	cpi	r26, 0xFA	; 250
     23c:	b2 07       	cpc	r27, r18
     23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
     240:	f7 d2       	rcall	.+1518   	; 0x830 <main>
     242:	0c 94 e8 0c 	jmp	0x19d0	; 0x19d0 <_exit>

00000246 <__bad_interrupt>:
     246:	dc ce       	rjmp	.-584    	; 0x0 <__vectors>

00000248 <TWIC_SlaveProcessData>:
	}
}

void TWIC_SlaveProcessData(void)
{
	uint8_t askbyte = twiSlave.receivedData[0];
     248:	e0 91 ee 21 	lds	r30, 0x21EE
	for(uint8_t i = 0; i < NUM_BYTES; i++)
	{
		if (transmitArray[i+askbyte] >= ' ')
     24c:	f0 e0       	ldi	r31, 0x00	; 0
		PORTC.OUTCLR = PIN3_bm;
		switchy = 1;
	}
}

void TWIC_SlaveProcessData(void)
     24e:	ee 5a       	subi	r30, 0xAE	; 174
     250:	ff 4d       	sbci	r31, 0xDF	; 223
     252:	80 e0       	ldi	r24, 0x00	; 0
     254:	90 e0       	ldi	r25, 0x00	; 0
	{
		if (transmitArray[i+askbyte] >= ' ')
		{
			twiSlave.sendData[i] = transmitArray[i+askbyte];
			}else{
			twiSlave.sendData[i] = '_';
     256:	3f e5       	ldi	r19, 0x5F	; 95
void TWIC_SlaveProcessData(void)
{
	uint8_t askbyte = twiSlave.receivedData[0];
	for(uint8_t i = 0; i < NUM_BYTES; i++)
	{
		if (transmitArray[i+askbyte] >= ' ')
     258:	21 91       	ld	r18, Z+
     25a:	20 32       	cpi	r18, 0x20	; 32
     25c:	28 f0       	brcs	.+10     	; 0x268 <TWIC_SlaveProcessData+0x20>
		{
			twiSlave.sendData[i] = transmitArray[i+askbyte];
     25e:	dc 01       	movw	r26, r24
     260:	a2 5d       	subi	r26, 0xD2	; 210
     262:	bd 4d       	sbci	r27, 0xDD	; 221
     264:	2c 93       	st	X, r18
     266:	04 c0       	rjmp	.+8      	; 0x270 <TWIC_SlaveProcessData+0x28>
			}else{
			twiSlave.sendData[i] = '_';
     268:	dc 01       	movw	r26, r24
     26a:	a2 5d       	subi	r26, 0xD2	; 210
     26c:	bd 4d       	sbci	r27, 0xDD	; 221
     26e:	3c 93       	st	X, r19
     270:	01 96       	adiw	r24, 0x01	; 1
}

void TWIC_SlaveProcessData(void)
{
	uint8_t askbyte = twiSlave.receivedData[0];
	for(uint8_t i = 0; i < NUM_BYTES; i++)
     272:	80 31       	cpi	r24, 0x10	; 16
     274:	91 05       	cpc	r25, r1
     276:	81 f7       	brne	.-32     	; 0x258 <TWIC_SlaveProcessData+0x10>
			twiSlave.sendData[i] = transmitArray[i+askbyte];
			}else{
			twiSlave.sendData[i] = '_';
		}
	}
	if(twiSlave.receivedData[0] == 0x01) transmitArray[5] = '_';
     278:	80 91 ee 21 	lds	r24, 0x21EE
     27c:	81 30       	cpi	r24, 0x01	; 1
     27e:	19 f4       	brne	.+6      	; 0x286 <TWIC_SlaveProcessData+0x3e>
     280:	8f e5       	ldi	r24, 0x5F	; 95
     282:	80 93 57 20 	sts	0x2057, r24
     286:	08 95       	ret

00000288 <__vector_28>:
/*!
 *  \brief Interrupt Service Routine for receiving with UARTC1.
 *         This ISR is only defined if the macro ENABLE_UART_C1 is defined.
 */
ISR(USARTC1_RXC_vect)
{
     288:	1f 92       	push	r1
     28a:	0f 92       	push	r0
     28c:	0f b6       	in	r0, 0x3f	; 63
     28e:	0f 92       	push	r0
     290:	11 24       	eor	r1, r1
     292:	08 b6       	in	r0, 0x38	; 56
     294:	0f 92       	push	r0
     296:	18 be       	out	0x38, r1	; 56
     298:	09 b6       	in	r0, 0x39	; 57
     29a:	0f 92       	push	r0
     29c:	19 be       	out	0x39, r1	; 57
     29e:	0b b6       	in	r0, 0x3b	; 59
     2a0:	0f 92       	push	r0
     2a2:	1b be       	out	0x3b, r1	; 59
     2a4:	2f 93       	push	r18
     2a6:	3f 93       	push	r19
     2a8:	4f 93       	push	r20
     2aa:	5f 93       	push	r21
     2ac:	6f 93       	push	r22
     2ae:	7f 93       	push	r23
     2b0:	8f 93       	push	r24
     2b2:	9f 93       	push	r25
     2b4:	af 93       	push	r26
     2b6:	bf 93       	push	r27
     2b8:	ef 93       	push	r30
     2ba:	ff 93       	push	r31
  USART_RXComplete(&uartC1);
     2bc:	83 e7       	ldi	r24, 0x73	; 115
     2be:	92 e2       	ldi	r25, 0x22	; 34
     2c0:	48 d6       	rcall	.+3216   	; 0xf52 <USART_RXComplete>
}
     2c2:	ff 91       	pop	r31
     2c4:	ef 91       	pop	r30
     2c6:	bf 91       	pop	r27
     2c8:	af 91       	pop	r26
     2ca:	9f 91       	pop	r25
     2cc:	8f 91       	pop	r24
     2ce:	7f 91       	pop	r23
     2d0:	6f 91       	pop	r22
     2d2:	5f 91       	pop	r21
     2d4:	4f 91       	pop	r20
     2d6:	3f 91       	pop	r19
     2d8:	2f 91       	pop	r18
     2da:	0f 90       	pop	r0
     2dc:	0b be       	out	0x3b, r0	; 59
     2de:	0f 90       	pop	r0
     2e0:	09 be       	out	0x39, r0	; 57
     2e2:	0f 90       	pop	r0
     2e4:	08 be       	out	0x38, r0	; 56
     2e6:	0f 90       	pop	r0
     2e8:	0f be       	out	0x3f, r0	; 63
     2ea:	0f 90       	pop	r0
     2ec:	1f 90       	pop	r1
     2ee:	18 95       	reti

000002f0 <__vector_29>:
/*!
 *  \brief Interrupt Service Routine for transmitting with UARTC1.
 *         This ISR is only defined if the macro ENABLE_UART_C1 is defined.
 */
ISR(USARTC1_DRE_vect)
{
     2f0:	1f 92       	push	r1
     2f2:	0f 92       	push	r0
     2f4:	0f b6       	in	r0, 0x3f	; 63
     2f6:	0f 92       	push	r0
     2f8:	11 24       	eor	r1, r1
     2fa:	08 b6       	in	r0, 0x38	; 56
     2fc:	0f 92       	push	r0
     2fe:	18 be       	out	0x38, r1	; 56
     300:	09 b6       	in	r0, 0x39	; 57
     302:	0f 92       	push	r0
     304:	19 be       	out	0x39, r1	; 57
     306:	0b b6       	in	r0, 0x3b	; 59
     308:	0f 92       	push	r0
     30a:	1b be       	out	0x3b, r1	; 59
     30c:	2f 93       	push	r18
     30e:	3f 93       	push	r19
     310:	4f 93       	push	r20
     312:	5f 93       	push	r21
     314:	6f 93       	push	r22
     316:	7f 93       	push	r23
     318:	8f 93       	push	r24
     31a:	9f 93       	push	r25
     31c:	af 93       	push	r26
     31e:	bf 93       	push	r27
     320:	ef 93       	push	r30
     322:	ff 93       	push	r31
  USART_DataRegEmpty(&uartC1);
     324:	83 e7       	ldi	r24, 0x73	; 115
     326:	92 e2       	ldi	r25, 0x22	; 34
     328:	32 d6       	rcall	.+3172   	; 0xf8e <USART_DataRegEmpty>
}
     32a:	ff 91       	pop	r31
     32c:	ef 91       	pop	r30
     32e:	bf 91       	pop	r27
     330:	af 91       	pop	r26
     332:	9f 91       	pop	r25
     334:	8f 91       	pop	r24
     336:	7f 91       	pop	r23
     338:	6f 91       	pop	r22
     33a:	5f 91       	pop	r21
     33c:	4f 91       	pop	r20
     33e:	3f 91       	pop	r19
     340:	2f 91       	pop	r18
     342:	0f 90       	pop	r0
     344:	0b be       	out	0x3b, r0	; 59
     346:	0f 90       	pop	r0
     348:	09 be       	out	0x39, r0	; 57
     34a:	0f 90       	pop	r0
     34c:	08 be       	out	0x38, r0	; 56
     34e:	0f 90       	pop	r0
     350:	0f be       	out	0x3f, r0	; 63
     352:	0f 90       	pop	r0
     354:	1f 90       	pop	r1
     356:	18 95       	reti

00000358 <__vector_88>:
/*!
 *  \brief Interrupt Service Routine for receiving with UARTD0.
 *         This ISR is only defined if the macro ENABLE_UART_D0 is defined.
 */
ISR(USARTD0_RXC_vect)
{
     358:	1f 92       	push	r1
     35a:	0f 92       	push	r0
     35c:	0f b6       	in	r0, 0x3f	; 63
     35e:	0f 92       	push	r0
     360:	11 24       	eor	r1, r1
     362:	08 b6       	in	r0, 0x38	; 56
     364:	0f 92       	push	r0
     366:	18 be       	out	0x38, r1	; 56
     368:	09 b6       	in	r0, 0x39	; 57
     36a:	0f 92       	push	r0
     36c:	19 be       	out	0x39, r1	; 57
     36e:	0b b6       	in	r0, 0x3b	; 59
     370:	0f 92       	push	r0
     372:	1b be       	out	0x3b, r1	; 59
     374:	2f 93       	push	r18
     376:	3f 93       	push	r19
     378:	4f 93       	push	r20
     37a:	5f 93       	push	r21
     37c:	6f 93       	push	r22
     37e:	7f 93       	push	r23
     380:	8f 93       	push	r24
     382:	9f 93       	push	r25
     384:	af 93       	push	r26
     386:	bf 93       	push	r27
     388:	ef 93       	push	r30
     38a:	ff 93       	push	r31
  USART_RXComplete(&uartD0);
     38c:	82 e5       	ldi	r24, 0x52	; 82
     38e:	91 e2       	ldi	r25, 0x21	; 33
     390:	e0 d5       	rcall	.+3008   	; 0xf52 <USART_RXComplete>
}
     392:	ff 91       	pop	r31
     394:	ef 91       	pop	r30
     396:	bf 91       	pop	r27
     398:	af 91       	pop	r26
     39a:	9f 91       	pop	r25
     39c:	8f 91       	pop	r24
     39e:	7f 91       	pop	r23
     3a0:	6f 91       	pop	r22
     3a2:	5f 91       	pop	r21
     3a4:	4f 91       	pop	r20
     3a6:	3f 91       	pop	r19
     3a8:	2f 91       	pop	r18
     3aa:	0f 90       	pop	r0
     3ac:	0b be       	out	0x3b, r0	; 59
     3ae:	0f 90       	pop	r0
     3b0:	09 be       	out	0x39, r0	; 57
     3b2:	0f 90       	pop	r0
     3b4:	08 be       	out	0x38, r0	; 56
     3b6:	0f 90       	pop	r0
     3b8:	0f be       	out	0x3f, r0	; 63
     3ba:	0f 90       	pop	r0
     3bc:	1f 90       	pop	r1
     3be:	18 95       	reti

000003c0 <__vector_89>:
/*!
 *  \brief Interrupt Service Routine for transmitting with UARTD0.
 *         This ISR is only defined if the macro ENABLE_UART_D0 is defined.
 */
ISR(USARTD0_DRE_vect)
{
     3c0:	1f 92       	push	r1
     3c2:	0f 92       	push	r0
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	0f 92       	push	r0
     3c8:	11 24       	eor	r1, r1
     3ca:	08 b6       	in	r0, 0x38	; 56
     3cc:	0f 92       	push	r0
     3ce:	18 be       	out	0x38, r1	; 56
     3d0:	09 b6       	in	r0, 0x39	; 57
     3d2:	0f 92       	push	r0
     3d4:	19 be       	out	0x39, r1	; 57
     3d6:	0b b6       	in	r0, 0x3b	; 59
     3d8:	0f 92       	push	r0
     3da:	1b be       	out	0x3b, r1	; 59
     3dc:	2f 93       	push	r18
     3de:	3f 93       	push	r19
     3e0:	4f 93       	push	r20
     3e2:	5f 93       	push	r21
     3e4:	6f 93       	push	r22
     3e6:	7f 93       	push	r23
     3e8:	8f 93       	push	r24
     3ea:	9f 93       	push	r25
     3ec:	af 93       	push	r26
     3ee:	bf 93       	push	r27
     3f0:	ef 93       	push	r30
     3f2:	ff 93       	push	r31
  USART_DataRegEmpty(&uartD0);
     3f4:	82 e5       	ldi	r24, 0x52	; 82
     3f6:	91 e2       	ldi	r25, 0x21	; 33
     3f8:	ca d5       	rcall	.+2964   	; 0xf8e <USART_DataRegEmpty>
}
     3fa:	ff 91       	pop	r31
     3fc:	ef 91       	pop	r30
     3fe:	bf 91       	pop	r27
     400:	af 91       	pop	r26
     402:	9f 91       	pop	r25
     404:	8f 91       	pop	r24
     406:	7f 91       	pop	r23
     408:	6f 91       	pop	r22
     40a:	5f 91       	pop	r21
     40c:	4f 91       	pop	r20
     40e:	3f 91       	pop	r19
     410:	2f 91       	pop	r18
     412:	0f 90       	pop	r0
     414:	0b be       	out	0x3b, r0	; 59
     416:	0f 90       	pop	r0
     418:	09 be       	out	0x39, r0	; 57
     41a:	0f 90       	pop	r0
     41c:	08 be       	out	0x38, r0	; 56
     41e:	0f 90       	pop	r0
     420:	0f be       	out	0x3f, r0	; 63
     422:	0f 90       	pop	r0
     424:	1f 90       	pop	r1
     426:	18 95       	reti

00000428 <__vector_12>:
		_delay_ms(1000);
	}
}

ISR(TWIC_TWIS_vect)
{
     428:	1f 92       	push	r1
     42a:	0f 92       	push	r0
     42c:	0f b6       	in	r0, 0x3f	; 63
     42e:	0f 92       	push	r0
     430:	11 24       	eor	r1, r1
     432:	08 b6       	in	r0, 0x38	; 56
     434:	0f 92       	push	r0
     436:	18 be       	out	0x38, r1	; 56
     438:	09 b6       	in	r0, 0x39	; 57
     43a:	0f 92       	push	r0
     43c:	19 be       	out	0x39, r1	; 57
     43e:	0b b6       	in	r0, 0x3b	; 59
     440:	0f 92       	push	r0
     442:	1b be       	out	0x3b, r1	; 59
     444:	2f 93       	push	r18
     446:	3f 93       	push	r19
     448:	4f 93       	push	r20
     44a:	5f 93       	push	r21
     44c:	6f 93       	push	r22
     44e:	7f 93       	push	r23
     450:	8f 93       	push	r24
     452:	9f 93       	push	r25
     454:	af 93       	push	r26
     456:	bf 93       	push	r27
     458:	ef 93       	push	r30
     45a:	ff 93       	push	r31
	TWI_SlaveInterruptHandler(&twiSlave);
     45c:	8a ee       	ldi	r24, 0xEA	; 234
     45e:	91 e2       	ldi	r25, 0x21	; 33
     460:	61 d3       	rcall	.+1730   	; 0xb24 <TWI_SlaveInterruptHandler>
}
     462:	ff 91       	pop	r31
     464:	ef 91       	pop	r30
     466:	bf 91       	pop	r27
     468:	af 91       	pop	r26
     46a:	9f 91       	pop	r25
     46c:	8f 91       	pop	r24
     46e:	7f 91       	pop	r23
     470:	6f 91       	pop	r22
     472:	5f 91       	pop	r21
     474:	4f 91       	pop	r20
     476:	3f 91       	pop	r19
     478:	2f 91       	pop	r18
     47a:	0f 90       	pop	r0
     47c:	0b be       	out	0x3b, r0	; 59
     47e:	0f 90       	pop	r0
     480:	09 be       	out	0x39, r0	; 57
     482:	0f 90       	pop	r0
     484:	08 be       	out	0x38, r0	; 56
     486:	0f 90       	pop	r0
     488:	0f be       	out	0x3f, r0	; 63
     48a:	0f 90       	pop	r0
     48c:	1f 90       	pop	r1
     48e:	18 95       	reti

00000490 <__vector_2>:

ISR(PORTC_INT0_vect)//start uart delay
{
     490:	1f 92       	push	r1
     492:	0f 92       	push	r0
     494:	0f b6       	in	r0, 0x3f	; 63
     496:	0f 92       	push	r0
     498:	11 24       	eor	r1, r1
     49a:	08 b6       	in	r0, 0x38	; 56
     49c:	0f 92       	push	r0
     49e:	18 be       	out	0x38, r1	; 56
     4a0:	8f 93       	push	r24
	TCC1.CTRLA     = TC_CLKSEL_DIV1024_gc;
     4a2:	87 e0       	ldi	r24, 0x07	; 7
     4a4:	80 93 40 08 	sts	0x0840, r24
}
     4a8:	8f 91       	pop	r24
     4aa:	0f 90       	pop	r0
     4ac:	08 be       	out	0x38, r0	; 56
     4ae:	0f 90       	pop	r0
     4b0:	0f be       	out	0x3f, r0	; 63
     4b2:	0f 90       	pop	r0
     4b4:	1f 90       	pop	r1
     4b6:	18 95       	reti

000004b8 <__vector_20>:

ISR(TCC1_OVF_vect)//uart delay
{
     4b8:	1f 92       	push	r1
     4ba:	0f 92       	push	r0
     4bc:	0f b6       	in	r0, 0x3f	; 63
     4be:	0f 92       	push	r0
     4c0:	11 24       	eor	r1, r1
     4c2:	08 b6       	in	r0, 0x38	; 56
     4c4:	0f 92       	push	r0
     4c6:	18 be       	out	0x38, r1	; 56
     4c8:	09 b6       	in	r0, 0x39	; 57
     4ca:	0f 92       	push	r0
     4cc:	19 be       	out	0x39, r1	; 57
     4ce:	0a b6       	in	r0, 0x3a	; 58
     4d0:	0f 92       	push	r0
     4d2:	1a be       	out	0x3a, r1	; 58
     4d4:	0b b6       	in	r0, 0x3b	; 59
     4d6:	0f 92       	push	r0
     4d8:	1b be       	out	0x3b, r1	; 59
     4da:	df 92       	push	r13
     4dc:	ef 92       	push	r14
     4de:	ff 92       	push	r15
     4e0:	0f 93       	push	r16
     4e2:	1f 93       	push	r17
     4e4:	2f 93       	push	r18
     4e6:	3f 93       	push	r19
     4e8:	4f 93       	push	r20
     4ea:	5f 93       	push	r21
     4ec:	6f 93       	push	r22
     4ee:	7f 93       	push	r23
     4f0:	8f 93       	push	r24
     4f2:	9f 93       	push	r25
     4f4:	af 93       	push	r26
     4f6:	bf 93       	push	r27
     4f8:	cf 93       	push	r28
     4fa:	df 93       	push	r29
     4fc:	ef 93       	push	r30
     4fe:	ff 93       	push	r31
	TCC1.CTRLA     = TC_CLKSEL_OFF_gc;
     500:	10 92 40 08 	sts	0x0840, r1
     504:	09 ed       	ldi	r16, 0xD9	; 217
     506:	11 e2       	ldi	r17, 0x21	; 33
ISR(PORTC_INT0_vect)//start uart delay
{
	TCC1.CTRLA     = TC_CLKSEL_DIV1024_gc;
}

ISR(TCC1_OVF_vect)//uart delay
     508:	0f 2e       	mov	r0, r31
     50a:	f9 ee       	ldi	r31, 0xE9	; 233
     50c:	ef 2e       	mov	r14, r31
     50e:	f1 e2       	ldi	r31, 0x21	; 33
     510:	ff 2e       	mov	r15, r31
     512:	f0 2d       	mov	r31, r0
     514:	e8 01       	movw	r28, r16
	{
		if (USART_RXBufferData_Available(&uartC1))
		{
			receiveArray[i] = USART_RXBuffer_GetByte(&uartC1);
		}else{
			receiveArray[i] = '_';
     516:	0f 2e       	mov	r0, r31
     518:	ff e5       	ldi	r31, 0x5F	; 95
     51a:	df 2e       	mov	r13, r31
     51c:	f0 2d       	mov	r31, r0
{
	TCC1.CTRLA     = TC_CLKSEL_OFF_gc;
	int i = 0;
	while (i < NUM_BYTES)
	{
		if (USART_RXBufferData_Available(&uartC1))
     51e:	83 e7       	ldi	r24, 0x73	; 115
     520:	92 e2       	ldi	r25, 0x22	; 34
     522:	fc d4       	rcall	.+2552   	; 0xf1c <USART_RXBufferData_Available>
     524:	88 23       	and	r24, r24
     526:	29 f0       	breq	.+10     	; 0x532 <__vector_20+0x7a>
		{
			receiveArray[i] = USART_RXBuffer_GetByte(&uartC1);
     528:	83 e7       	ldi	r24, 0x73	; 115
     52a:	92 e2       	ldi	r25, 0x22	; 34
     52c:	04 d5       	rcall	.+2568   	; 0xf36 <USART_RXBuffer_GetByte>
     52e:	88 83       	st	Y, r24
     530:	01 c0       	rjmp	.+2      	; 0x534 <__vector_20+0x7c>
		}else{
			receiveArray[i] = '_';
     532:	d8 82       	st	Y, r13
     534:	21 96       	adiw	r28, 0x01	; 1

ISR(TCC1_OVF_vect)//uart delay
{
	TCC1.CTRLA     = TC_CLKSEL_OFF_gc;
	int i = 0;
	while (i < NUM_BYTES)
     536:	ce 15       	cp	r28, r14
     538:	df 05       	cpc	r29, r15
     53a:	89 f7       	brne	.-30     	; 0x51e <__vector_20+0x66>
		}
		i++;
	}
	
	i = 0;
	uart_puts(&uartD0, "ID: ");
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	70 e2       	ldi	r23, 0x20	; 32
     540:	82 e5       	ldi	r24, 0x52	; 82
     542:	91 e2       	ldi	r25, 0x21	; 33
     544:	39 d3       	rcall	.+1650   	; 0xbb8 <uart_puts>
     546:	c1 e6       	ldi	r28, 0x61	; 97
     548:	d0 e2       	ldi	r29, 0x20	; 32
	while (i < NUM_BYTES)
	{
		transmitArray[i+0x0F] = receiveArray[i];
     54a:	f8 01       	movw	r30, r16
     54c:	61 91       	ld	r22, Z+
     54e:	8f 01       	movw	r16, r30
     550:	69 93       	st	Y+, r22
		uart_putc(&uartD0, receiveArray[i]);
     552:	82 e5       	ldi	r24, 0x52	; 82
     554:	91 e2       	ldi	r25, 0x21	; 33
     556:	21 d3       	rcall	.+1602   	; 0xb9a <uart_putc>
		i++;
	}
	
	i = 0;
	uart_puts(&uartD0, "ID: ");
	while (i < NUM_BYTES)
     558:	e0 16       	cp	r14, r16
     55a:	f1 06       	cpc	r15, r17
     55c:	b1 f7       	brne	.-20     	; 0x54a <__vector_20+0x92>
	{
		transmitArray[i+0x0F] = receiveArray[i];
		uart_putc(&uartD0, receiveArray[i]);
		i++;
	}
	transmitArray[5] = 'B'; //beep -> NXT
     55e:	82 e4       	ldi	r24, 0x42	; 66
     560:	80 93 57 20 	sts	0x2057, r24
}
     564:	ff 91       	pop	r31
     566:	ef 91       	pop	r30
     568:	df 91       	pop	r29
     56a:	cf 91       	pop	r28
     56c:	bf 91       	pop	r27
     56e:	af 91       	pop	r26
     570:	9f 91       	pop	r25
     572:	8f 91       	pop	r24
     574:	7f 91       	pop	r23
     576:	6f 91       	pop	r22
     578:	5f 91       	pop	r21
     57a:	4f 91       	pop	r20
     57c:	3f 91       	pop	r19
     57e:	2f 91       	pop	r18
     580:	1f 91       	pop	r17
     582:	0f 91       	pop	r16
     584:	ff 90       	pop	r15
     586:	ef 90       	pop	r14
     588:	df 90       	pop	r13
     58a:	0f 90       	pop	r0
     58c:	0b be       	out	0x3b, r0	; 59
     58e:	0f 90       	pop	r0
     590:	0a be       	out	0x3a, r0	; 58
     592:	0f 90       	pop	r0
     594:	09 be       	out	0x39, r0	; 57
     596:	0f 90       	pop	r0
     598:	08 be       	out	0x38, r0	; 56
     59a:	0f 90       	pop	r0
     59c:	0f be       	out	0x3f, r0	; 63
     59e:	0f 90       	pop	r0
     5a0:	1f 90       	pop	r1
     5a2:	18 95       	reti

000005a4 <__vector_79>:

ISR(TCD0_CCA_vect) //sonar A
{
     5a4:	1f 92       	push	r1
     5a6:	0f 92       	push	r0
     5a8:	0f b6       	in	r0, 0x3f	; 63
     5aa:	0f 92       	push	r0
     5ac:	11 24       	eor	r1, r1
     5ae:	08 b6       	in	r0, 0x38	; 56
     5b0:	0f 92       	push	r0
     5b2:	18 be       	out	0x38, r1	; 56
     5b4:	09 b6       	in	r0, 0x39	; 57
     5b6:	0f 92       	push	r0
     5b8:	19 be       	out	0x39, r1	; 57
     5ba:	0b b6       	in	r0, 0x3b	; 59
     5bc:	0f 92       	push	r0
     5be:	1b be       	out	0x3b, r1	; 59
     5c0:	2f 93       	push	r18
     5c2:	3f 93       	push	r19
     5c4:	6f 93       	push	r22
     5c6:	7f 93       	push	r23
     5c8:	8f 93       	push	r24
     5ca:	9f 93       	push	r25
     5cc:	af 93       	push	r26
     5ce:	bf 93       	push	r27
     5d0:	ef 93       	push	r30
     5d2:	ff 93       	push	r31
	uint16_t time = TCD0.CCA;
     5d4:	e0 e0       	ldi	r30, 0x00	; 0
     5d6:	f9 e0       	ldi	r31, 0x09	; 9
     5d8:	20 a5       	ldd	r18, Z+40	; 0x28
     5da:	31 a5       	ldd	r19, Z+41	; 0x29
	uint8_t cm = time/116;
     5dc:	af e9       	ldi	r26, 0x9F	; 159
     5de:	b6 e4       	ldi	r27, 0x46	; 70
     5e0:	31 d7       	rcall	.+3682   	; 0x1444 <__umulhisi3>
     5e2:	96 95       	lsr	r25
     5e4:	87 95       	ror	r24
     5e6:	92 95       	swap	r25
     5e8:	82 95       	swap	r24
     5ea:	8f 70       	andi	r24, 0x0F	; 15
     5ec:	89 27       	eor	r24, r25
     5ee:	9f 70       	andi	r25, 0x0F	; 15
     5f0:	89 27       	eor	r24, r25
     5f2:	80 93 72 20 	sts	0x2072, r24
	transmitArray[0x20] = cm;
	TCD0.CTRLFSET = TC_CMD_RESTART_gc;
     5f6:	88 e0       	ldi	r24, 0x08	; 8
     5f8:	81 87       	std	Z+9, r24	; 0x09
}
     5fa:	ff 91       	pop	r31
     5fc:	ef 91       	pop	r30
     5fe:	bf 91       	pop	r27
     600:	af 91       	pop	r26
     602:	9f 91       	pop	r25
     604:	8f 91       	pop	r24
     606:	7f 91       	pop	r23
     608:	6f 91       	pop	r22
     60a:	3f 91       	pop	r19
     60c:	2f 91       	pop	r18
     60e:	0f 90       	pop	r0
     610:	0b be       	out	0x3b, r0	; 59
     612:	0f 90       	pop	r0
     614:	09 be       	out	0x39, r0	; 57
     616:	0f 90       	pop	r0
     618:	08 be       	out	0x38, r0	; 56
     61a:	0f 90       	pop	r0
     61c:	0f be       	out	0x3f, r0	; 63
     61e:	0f 90       	pop	r0
     620:	1f 90       	pop	r1
     622:	18 95       	reti

00000624 <__vector_85>:

ISR(TCD1_CCA_vect) //Sonar B
{
     624:	1f 92       	push	r1
     626:	0f 92       	push	r0
     628:	0f b6       	in	r0, 0x3f	; 63
     62a:	0f 92       	push	r0
     62c:	11 24       	eor	r1, r1
     62e:	08 b6       	in	r0, 0x38	; 56
     630:	0f 92       	push	r0
     632:	18 be       	out	0x38, r1	; 56
     634:	09 b6       	in	r0, 0x39	; 57
     636:	0f 92       	push	r0
     638:	19 be       	out	0x39, r1	; 57
     63a:	0b b6       	in	r0, 0x3b	; 59
     63c:	0f 92       	push	r0
     63e:	1b be       	out	0x3b, r1	; 59
     640:	2f 93       	push	r18
     642:	3f 93       	push	r19
     644:	6f 93       	push	r22
     646:	7f 93       	push	r23
     648:	8f 93       	push	r24
     64a:	9f 93       	push	r25
     64c:	af 93       	push	r26
     64e:	bf 93       	push	r27
     650:	ef 93       	push	r30
     652:	ff 93       	push	r31
	uint16_t time = TCD1.CCA;
     654:	e0 e4       	ldi	r30, 0x40	; 64
     656:	f9 e0       	ldi	r31, 0x09	; 9
     658:	20 a5       	ldd	r18, Z+40	; 0x28
     65a:	31 a5       	ldd	r19, Z+41	; 0x29
	uint8_t cm = time/116;
     65c:	af e9       	ldi	r26, 0x9F	; 159
     65e:	b6 e4       	ldi	r27, 0x46	; 70
     660:	f1 d6       	rcall	.+3554   	; 0x1444 <__umulhisi3>
     662:	96 95       	lsr	r25
     664:	87 95       	ror	r24
     666:	92 95       	swap	r25
     668:	82 95       	swap	r24
     66a:	8f 70       	andi	r24, 0x0F	; 15
     66c:	89 27       	eor	r24, r25
     66e:	9f 70       	andi	r25, 0x0F	; 15
     670:	89 27       	eor	r24, r25
     672:	80 93 82 20 	sts	0x2082, r24
	transmitArray[0x30] = cm;
	TCD1.CTRLFSET = TC_CMD_RESTART_gc;
     676:	88 e0       	ldi	r24, 0x08	; 8
     678:	81 87       	std	Z+9, r24	; 0x09
}
     67a:	ff 91       	pop	r31
     67c:	ef 91       	pop	r30
     67e:	bf 91       	pop	r27
     680:	af 91       	pop	r26
     682:	9f 91       	pop	r25
     684:	8f 91       	pop	r24
     686:	7f 91       	pop	r23
     688:	6f 91       	pop	r22
     68a:	3f 91       	pop	r19
     68c:	2f 91       	pop	r18
     68e:	0f 90       	pop	r0
     690:	0b be       	out	0x3b, r0	; 59
     692:	0f 90       	pop	r0
     694:	09 be       	out	0x39, r0	; 57
     696:	0f 90       	pop	r0
     698:	08 be       	out	0x38, r0	; 56
     69a:	0f 90       	pop	r0
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	0f 90       	pop	r0
     6a0:	1f 90       	pop	r1
     6a2:	18 95       	reti

000006a4 <__vector_47>:

ISR(TCE0_OVF_vect) //trigger sonar, cascading
{
     6a4:	1f 92       	push	r1
     6a6:	0f 92       	push	r0
     6a8:	0f b6       	in	r0, 0x3f	; 63
     6aa:	0f 92       	push	r0
     6ac:	11 24       	eor	r1, r1
     6ae:	08 b6       	in	r0, 0x38	; 56
     6b0:	0f 92       	push	r0
     6b2:	18 be       	out	0x38, r1	; 56
     6b4:	0b b6       	in	r0, 0x3b	; 59
     6b6:	0f 92       	push	r0
     6b8:	1b be       	out	0x3b, r1	; 59
     6ba:	8f 93       	push	r24
     6bc:	9f 93       	push	r25
     6be:	ef 93       	push	r30
     6c0:	ff 93       	push	r31
	if (switchy)
     6c2:	80 91 e9 21 	lds	r24, 0x21E9
     6c6:	88 23       	and	r24, r24
     6c8:	61 f0       	breq	.+24     	; 0x6e2 <__vector_47+0x3e>
	{
		PORTC.OUTSET = PIN2_bm;
     6ca:	e0 e4       	ldi	r30, 0x40	; 64
     6cc:	f6 e0       	ldi	r31, 0x06	; 6
     6ce:	84 e0       	ldi	r24, 0x04	; 4
     6d0:	85 83       	std	Z+5, r24	; 0x05
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6d2:	96 e0       	ldi	r25, 0x06	; 6
     6d4:	9a 95       	dec	r25
     6d6:	f1 f7       	brne	.-4      	; 0x6d4 <__vector_47+0x30>
     6d8:	00 c0       	rjmp	.+0      	; 0x6da <__vector_47+0x36>
		_delay_us(10);
		PORTC.OUTCLR = PIN2_bm;
     6da:	86 83       	std	Z+6, r24	; 0x06
		switchy = 0;
     6dc:	10 92 e9 21 	sts	0x21E9, r1
     6e0:	0c c0       	rjmp	.+24     	; 0x6fa <__vector_47+0x56>
	} 
	else
	{
		PORTC.OUTSET = PIN3_bm;
     6e2:	e0 e4       	ldi	r30, 0x40	; 64
     6e4:	f6 e0       	ldi	r31, 0x06	; 6
     6e6:	88 e0       	ldi	r24, 0x08	; 8
     6e8:	85 83       	std	Z+5, r24	; 0x05
     6ea:	96 e0       	ldi	r25, 0x06	; 6
     6ec:	9a 95       	dec	r25
     6ee:	f1 f7       	brne	.-4      	; 0x6ec <__vector_47+0x48>
     6f0:	00 c0       	rjmp	.+0      	; 0x6f2 <__vector_47+0x4e>
		_delay_us(10);
		PORTC.OUTCLR = PIN3_bm;
     6f2:	86 83       	std	Z+6, r24	; 0x06
		switchy = 1;
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	80 93 e9 21 	sts	0x21E9, r24
	}
}
     6fa:	ff 91       	pop	r31
     6fc:	ef 91       	pop	r30
     6fe:	9f 91       	pop	r25
     700:	8f 91       	pop	r24
     702:	0f 90       	pop	r0
     704:	0b be       	out	0x3b, r0	; 59
     706:	0f 90       	pop	r0
     708:	08 be       	out	0x38, r0	; 56
     70a:	0f 90       	pop	r0
     70c:	0f be       	out	0x3f, r0	; 63
     70e:	0f 90       	pop	r0
     710:	1f 90       	pop	r1
     712:	18 95       	reti

00000714 <init_all>:
	}
	if(twiSlave.receivedData[0] == 0x01) transmitArray[5] = '_';
}

void init_all(void)
{
     714:	cf 92       	push	r12
     716:	ef 92       	push	r14
     718:	ff 92       	push	r15
     71a:	0f 93       	push	r16
     71c:	1f 93       	push	r17
     71e:	cf 93       	push	r28
     720:	df 93       	push	r29
	// set port direction //
	PORTE.DIRSET = PIN0_bm; //debug led
     722:	21 e0       	ldi	r18, 0x01	; 1
     724:	e0 e8       	ldi	r30, 0x80	; 128
     726:	f6 e0       	ldi	r31, 0x06	; 6
     728:	21 83       	std	Z+1, r18	; 0x01
	PORTC.DIRSET = PIN2_bm|PIN3_bm; //sonar trigger
     72a:	e0 e4       	ldi	r30, 0x40	; 64
     72c:	f6 e0       	ldi	r31, 0x06	; 6
     72e:	8c e0       	ldi	r24, 0x0C	; 12
     730:	81 83       	std	Z+1, r24	; 0x01

	// set timers //
	//delay for uart read need other solution
	PORTC.INT0MASK = PIN6_bm;
     732:	80 e4       	ldi	r24, 0x40	; 64
     734:	82 87       	std	Z+10, r24	; 0x0a
	PORTC.PIN6CTRL = PORT_ISC_RISING_gc;
     736:	26 8b       	std	Z+22, r18	; 0x16
	PORTC.INTCTRL  = PORT_INT0LVL_LO_gc;
     738:	21 87       	std	Z+9, r18	; 0x09
	TCC1.CTRLB     = TC_WGMODE_NORMAL_gc;
     73a:	a0 e4       	ldi	r26, 0x40	; 64
     73c:	b8 e0       	ldi	r27, 0x08	; 8
     73e:	11 96       	adiw	r26, 0x01	; 1
     740:	1c 92       	st	X, r1
     742:	11 97       	sbiw	r26, 0x01	; 1
	TCC1.CTRLA     = TC_CLKSEL_OFF_gc;
     744:	1c 92       	st	X, r1
	TCC1.INTCTRLA  = TC_OVFINTLVL_LO_gc;
     746:	16 96       	adiw	r26, 0x06	; 6
     748:	2c 93       	st	X, r18
     74a:	16 97       	sbiw	r26, 0x06	; 6
	TCC1.PER       = 400;
     74c:	80 e9       	ldi	r24, 0x90	; 144
     74e:	91 e0       	ldi	r25, 0x01	; 1
     750:	96 96       	adiw	r26, 0x26	; 38
     752:	8d 93       	st	X+, r24
     754:	9c 93       	st	X, r25
     756:	97 97       	sbiw	r26, 0x27	; 39
	//sonar request
	TCE0.CTRLB     = TC_WGMODE_NORMAL_gc;
     758:	a0 e0       	ldi	r26, 0x00	; 0
     75a:	ba e0       	ldi	r27, 0x0A	; 10
     75c:	11 96       	adiw	r26, 0x01	; 1
     75e:	1c 92       	st	X, r1
     760:	11 97       	sbiw	r26, 0x01	; 1
	TCE0.CTRLA     = TC_CLKSEL_DIV1024_gc;
     762:	87 e0       	ldi	r24, 0x07	; 7
     764:	8c 93       	st	X, r24
	TCE0.INTCTRLA  = TC_OVFINTLVL_LO_gc;
     766:	16 96       	adiw	r26, 0x06	; 6
     768:	2c 93       	st	X, r18
     76a:	16 97       	sbiw	r26, 0x06	; 6
	TCE0.PER       = 195;//~10Hz so 5Hz each
     76c:	83 ec       	ldi	r24, 0xC3	; 195
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	96 96       	adiw	r26, 0x26	; 38
     772:	8d 93       	st	X+, r24
     774:	9c 93       	st	X, r25
     776:	97 97       	sbiw	r26, 0x27	; 39
	//timer for sonar A
	PORTC.PIN4CTRL = PORT_ISC_BOTHEDGES_gc;
     778:	14 8a       	std	Z+20, r1	; 0x14
	EVSYS.CH0MUX = EVSYS_CHMUX_PORTC_PIN4_gc;
     77a:	c0 e8       	ldi	r28, 0x80	; 128
     77c:	d1 e0       	ldi	r29, 0x01	; 1
     77e:	84 e6       	ldi	r24, 0x64	; 100
     780:	88 83       	st	Y, r24
	TCD0.CTRLD = TC_EVACT_PW_gc | TC_EVSEL_CH0_gc;
     782:	a0 e0       	ldi	r26, 0x00	; 0
     784:	b9 e0       	ldi	r27, 0x09	; 9
     786:	88 ec       	ldi	r24, 0xC8	; 200
     788:	13 96       	adiw	r26, 0x03	; 3
     78a:	8c 93       	st	X, r24
     78c:	13 97       	sbiw	r26, 0x03	; 3
	TCD0.CTRLB = TC0_CCAEN_bm | TC_WGMODE_NORMAL_gc;
     78e:	30 e1       	ldi	r19, 0x10	; 16
     790:	11 96       	adiw	r26, 0x01	; 1
     792:	3c 93       	st	X, r19
     794:	11 97       	sbiw	r26, 0x01	; 1
	TCD0.CTRLA = TC_CLKSEL_DIV1_gc;
     796:	2c 93       	st	X, r18
	TCD0.INTCTRLB = TC_CCAINTLVL_LO_gc;
     798:	17 96       	adiw	r26, 0x07	; 7
     79a:	2c 93       	st	X, r18
     79c:	17 97       	sbiw	r26, 0x07	; 7
	TCD0.PER = 0xFFFF;
     79e:	8f ef       	ldi	r24, 0xFF	; 255
     7a0:	9f ef       	ldi	r25, 0xFF	; 255
     7a2:	96 96       	adiw	r26, 0x26	; 38
     7a4:	8d 93       	st	X+, r24
     7a6:	9c 93       	st	X, r25
     7a8:	97 97       	sbiw	r26, 0x27	; 39
	//timer for sonar B
	PORTC.PIN5CTRL = PORT_ISC_BOTHEDGES_gc;
     7aa:	15 8a       	std	Z+21, r1	; 0x15
	EVSYS.CH1MUX = EVSYS_CHMUX_PORTC_PIN5_gc;
     7ac:	45 e6       	ldi	r20, 0x65	; 101
     7ae:	49 83       	std	Y+1, r20	; 0x01
	TCD1.CTRLD = TC_EVACT_PW_gc | TC_EVSEL_CH1_gc;
     7b0:	e0 e4       	ldi	r30, 0x40	; 64
     7b2:	f9 e0       	ldi	r31, 0x09	; 9
     7b4:	49 ec       	ldi	r20, 0xC9	; 201
     7b6:	43 83       	std	Z+3, r20	; 0x03
	TCD1.CTRLB = TC1_CCAEN_bm | TC_WGMODE_NORMAL_gc;
     7b8:	31 83       	std	Z+1, r19	; 0x01
	TCD1.CTRLA = TC_CLKSEL_DIV1_gc;
     7ba:	20 83       	st	Z, r18
	TCD1.INTCTRLB = TC_CCAINTLVL_LO_gc;
     7bc:	27 83       	std	Z+7, r18	; 0x07
	TCD1.PER = 0xFFFF;
     7be:	86 a3       	std	Z+38, r24	; 0x26
     7c0:	97 a3       	std	Z+39, r25	; 0x27
	
	// set uart's //
	init_uart(&uartD0, &USARTD0, F_CPU, D0_BAUD, D0_CLK2X); //debug
     7c2:	c1 2c       	mov	r12, r1
     7c4:	e1 2c       	mov	r14, r1
     7c6:	12 ec       	ldi	r17, 0xC2	; 194
     7c8:	f1 2e       	mov	r15, r17
     7ca:	01 e0       	ldi	r16, 0x01	; 1
     7cc:	10 e0       	ldi	r17, 0x00	; 0
     7ce:	20 e8       	ldi	r18, 0x80	; 128
     7d0:	34 e8       	ldi	r19, 0x84	; 132
     7d2:	4e e1       	ldi	r20, 0x1E	; 30
     7d4:	50 e0       	ldi	r21, 0x00	; 0
     7d6:	60 ea       	ldi	r22, 0xA0	; 160
     7d8:	79 e0       	ldi	r23, 0x09	; 9
     7da:	82 e5       	ldi	r24, 0x52	; 82
     7dc:	91 e2       	ldi	r25, 0x21	; 33
     7de:	fe d2       	rcall	.+1532   	; 0xddc <init_uart>
	init_uart(&uartC1, &USARTC1, F_CPU, C1_BAUD, C1_CLK2X); //RFID reader
     7e0:	10 e8       	ldi	r17, 0x80	; 128
     7e2:	e1 2e       	mov	r14, r17
     7e4:	15 e2       	ldi	r17, 0x25	; 37
     7e6:	f1 2e       	mov	r15, r17
     7e8:	00 e0       	ldi	r16, 0x00	; 0
     7ea:	10 e0       	ldi	r17, 0x00	; 0
     7ec:	20 e8       	ldi	r18, 0x80	; 128
     7ee:	34 e8       	ldi	r19, 0x84	; 132
     7f0:	4e e1       	ldi	r20, 0x1E	; 30
     7f2:	50 e0       	ldi	r21, 0x00	; 0
     7f4:	60 eb       	ldi	r22, 0xB0	; 176
     7f6:	78 e0       	ldi	r23, 0x08	; 8
     7f8:	83 e7       	ldi	r24, 0x73	; 115
     7fa:	92 e2       	ldi	r25, 0x22	; 34
     7fc:	ef d2       	rcall	.+1502   	; 0xddc <init_uart>
	
	// set TWI as slave for NXT //
	TWI_SlaveInitializeDriver(&twiSlave, &TWIC, TWIC_SlaveProcessData);
     7fe:	44 e2       	ldi	r20, 0x24	; 36
     800:	51 e0       	ldi	r21, 0x01	; 1
     802:	60 e8       	ldi	r22, 0x80	; 128
     804:	74 e0       	ldi	r23, 0x04	; 4
     806:	8a ee       	ldi	r24, 0xEA	; 234
     808:	91 e2       	ldi	r25, 0x21	; 33
     80a:	99 d0       	rcall	.+306    	; 0x93e <TWI_SlaveInitializeDriver>
	TWI_SlaveInitializeModule(&twiSlave, SLAVE_ADDRESS, TWI_SLAVE_INTLVL_MED_gc);
     80c:	40 e8       	ldi	r20, 0x80	; 128
     80e:	61 e0       	ldi	r22, 0x01	; 1
     810:	8a ee       	ldi	r24, 0xEA	; 234
     812:	91 e2       	ldi	r25, 0x21	; 33
     814:	ad d0       	rcall	.+346    	; 0x970 <TWI_SlaveInitializeModule>
	
	// Turnon interrupts //
	PMIC.CTRL = PMIC_LOLVLEN_bm|PMIC_MEDLVLEN_bm;
     816:	83 e0       	ldi	r24, 0x03	; 3
     818:	e0 ea       	ldi	r30, 0xA0	; 160
     81a:	f0 e0       	ldi	r31, 0x00	; 0
     81c:	82 83       	std	Z+2, r24	; 0x02
	sei();
     81e:	78 94       	sei
     820:	df 91       	pop	r29
     822:	cf 91       	pop	r28
     824:	1f 91       	pop	r17
     826:	0f 91       	pop	r16
     828:	ff 90       	pop	r15
     82a:	ef 90       	pop	r14
     82c:	cf 90       	pop	r12
     82e:	08 95       	ret

00000830 <main>:
void TWIC_SlaveProcessData(void);
void init_all(void);

int main(void)
{
	init_all();
     830:	71 df       	rcall	.-286    	; 0x714 <init_all>
	
	sprintf(str, "UART Connected!!!\n\r");
     832:	84 e1       	ldi	r24, 0x14	; 20
     834:	e5 e0       	ldi	r30, 0x05	; 5
     836:	f0 e2       	ldi	r31, 0x20	; 32
     838:	aa ef       	ldi	r26, 0xFA	; 250
     83a:	b2 e2       	ldi	r27, 0x22	; 34
     83c:	01 90       	ld	r0, Z+
     83e:	0d 92       	st	X+, r0
     840:	8a 95       	dec	r24
     842:	e1 f7       	brne	.-8      	; 0x83c <main+0xc>
	uart_puts(&uartD0, str);
     844:	6a ef       	ldi	r22, 0xFA	; 250
     846:	72 e2       	ldi	r23, 0x22	; 34
     848:	82 e5       	ldi	r24, 0x52	; 82
     84a:	91 e2       	ldi	r25, 0x21	; 33
     84c:	b5 d1       	rcall	.+874    	; 0xbb8 <uart_puts>
	
	uint8_t x = 0;
     84e:	71 2c       	mov	r7, r1
	while(1)
	{
		transmitArray[0] = 'T';
     850:	0f 2e       	mov	r0, r31
     852:	f2 e5       	ldi	r31, 0x52	; 82
     854:	af 2e       	mov	r10, r31
     856:	f0 e2       	ldi	r31, 0x20	; 32
     858:	bf 2e       	mov	r11, r31
     85a:	f0 2d       	mov	r31, r0
		transmitArray[1] = 'W';
     85c:	0f 2e       	mov	r0, r31
     85e:	f3 e5       	ldi	r31, 0x53	; 83
     860:	cf 2e       	mov	r12, r31
     862:	f0 e2       	ldi	r31, 0x20	; 32
     864:	df 2e       	mov	r13, r31
     866:	f0 2d       	mov	r31, r0
     868:	0f 2e       	mov	r0, r31
     86a:	f7 e5       	ldi	r31, 0x57	; 87
     86c:	4f 2e       	mov	r4, r31
     86e:	f0 2d       	mov	r31, r0
		transmitArray[2] = 'I';
     870:	0f 2e       	mov	r0, r31
     872:	f9 e4       	ldi	r31, 0x49	; 73
     874:	5f 2e       	mov	r5, r31
     876:	f0 2d       	mov	r31, r0
		transmitArray[3] = ' ';
     878:	68 94       	set
     87a:	66 24       	eor	r6, r6
     87c:	65 f8       	bld	r6, 5
		transmitArray[4] = '0'+x;
     87e:	0f 2e       	mov	r0, r31
     880:	f6 e5       	ldi	r31, 0x56	; 86
     882:	8f 2e       	mov	r8, r31
     884:	f0 e2       	ldi	r31, 0x20	; 32
     886:	9f 2e       	mov	r9, r31
     888:	f0 2d       	mov	r31, r0
		sprintf(str, "still alive! %d\n\r", x);
     88a:	0f 2e       	mov	r0, r31
     88c:	f9 e1       	ldi	r31, 0x19	; 25
     88e:	ef 2e       	mov	r14, r31
     890:	f0 e2       	ldi	r31, 0x20	; 32
     892:	ff 2e       	mov	r15, r31
     894:	f0 2d       	mov	r31, r0
     896:	ca ef       	ldi	r28, 0xFA	; 250
     898:	d2 e2       	ldi	r29, 0x22	; 34
		uart_puts(&uartD0, str);
		sprintf(str, "Sonar A = %4d cm\n\r", transmitArray[0x20]);
     89a:	0b e2       	ldi	r16, 0x2B	; 43
     89c:	10 e2       	ldi	r17, 0x20	; 32
		uart_puts(&uartD0, str);
		sprintf(str, "Sonar B = %4d cm\n\r", transmitArray[0x30]);
     89e:	0f 2e       	mov	r0, r31
     8a0:	fe e3       	ldi	r31, 0x3E	; 62
     8a2:	2f 2e       	mov	r2, r31
     8a4:	f0 e2       	ldi	r31, 0x20	; 32
     8a6:	3f 2e       	mov	r3, r31
     8a8:	f0 2d       	mov	r31, r0
	uart_puts(&uartD0, str);
	
	uint8_t x = 0;
	while(1)
	{
		transmitArray[0] = 'T';
     8aa:	24 e5       	ldi	r18, 0x54	; 84
     8ac:	f5 01       	movw	r30, r10
     8ae:	20 83       	st	Z, r18
		transmitArray[1] = 'W';
     8b0:	f6 01       	movw	r30, r12
     8b2:	40 82       	st	Z, r4
		transmitArray[2] = 'I';
     8b4:	e4 e5       	ldi	r30, 0x54	; 84
     8b6:	f0 e2       	ldi	r31, 0x20	; 32
     8b8:	50 82       	st	Z, r5
		transmitArray[3] = ' ';
     8ba:	e5 e5       	ldi	r30, 0x55	; 85
     8bc:	f0 e2       	ldi	r31, 0x20	; 32
     8be:	60 82       	st	Z, r6
		transmitArray[4] = '0'+x;
     8c0:	87 2d       	mov	r24, r7
     8c2:	80 5d       	subi	r24, 0xD0	; 208
     8c4:	f4 01       	movw	r30, r8
     8c6:	80 83       	st	Z, r24
		sprintf(str, "still alive! %d\n\r", x);
     8c8:	1f 92       	push	r1
     8ca:	7f 92       	push	r7
     8cc:	ff 92       	push	r15
     8ce:	ef 92       	push	r14
     8d0:	df 93       	push	r29
     8d2:	cf 93       	push	r28
     8d4:	c3 d5       	rcall	.+2950   	; 0x145c <sprintf>
		uart_puts(&uartD0, str);
     8d6:	be 01       	movw	r22, r28
     8d8:	82 e5       	ldi	r24, 0x52	; 82
     8da:	91 e2       	ldi	r25, 0x21	; 33
     8dc:	6d d1       	rcall	.+730    	; 0xbb8 <uart_puts>
		sprintf(str, "Sonar A = %4d cm\n\r", transmitArray[0x20]);
     8de:	e2 e7       	ldi	r30, 0x72	; 114
     8e0:	f0 e2       	ldi	r31, 0x20	; 32
     8e2:	80 81       	ld	r24, Z
     8e4:	1f 92       	push	r1
     8e6:	8f 93       	push	r24
     8e8:	1f 93       	push	r17
     8ea:	0f 93       	push	r16
     8ec:	df 93       	push	r29
     8ee:	cf 93       	push	r28
     8f0:	b5 d5       	rcall	.+2922   	; 0x145c <sprintf>
		uart_puts(&uartD0, str);
     8f2:	be 01       	movw	r22, r28
     8f4:	82 e5       	ldi	r24, 0x52	; 82
     8f6:	91 e2       	ldi	r25, 0x21	; 33
     8f8:	5f d1       	rcall	.+702    	; 0xbb8 <uart_puts>
		sprintf(str, "Sonar B = %4d cm\n\r", transmitArray[0x30]);
     8fa:	e2 e8       	ldi	r30, 0x82	; 130
     8fc:	f0 e2       	ldi	r31, 0x20	; 32
     8fe:	80 81       	ld	r24, Z
     900:	1f 92       	push	r1
     902:	8f 93       	push	r24
     904:	3f 92       	push	r3
     906:	2f 92       	push	r2
     908:	df 93       	push	r29
     90a:	cf 93       	push	r28
     90c:	a7 d5       	rcall	.+2894   	; 0x145c <sprintf>
		uart_puts(&uartD0, str);
     90e:	be 01       	movw	r22, r28
     910:	82 e5       	ldi	r24, 0x52	; 82
     912:	91 e2       	ldi	r25, 0x21	; 33
     914:	51 d1       	rcall	.+674    	; 0xbb8 <uart_puts>
		x++;
     916:	73 94       	inc	r7
		if (x>=10)
     918:	8d b7       	in	r24, 0x3d	; 61
     91a:	9e b7       	in	r25, 0x3e	; 62
     91c:	42 96       	adiw	r24, 0x12	; 18
     91e:	8d bf       	out	0x3d, r24	; 61
     920:	9e bf       	out	0x3e, r25	; 62
     922:	99 e0       	ldi	r25, 0x09	; 9
     924:	97 15       	cp	r25, r7
     926:	08 f4       	brcc	.+2      	; 0x92a <main+0xfa>
		{
			x = 0;
     928:	71 2c       	mov	r7, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     92a:	ef e7       	ldi	r30, 0x7F	; 127
     92c:	fa e1       	ldi	r31, 0x1A	; 26
     92e:	26 e0       	ldi	r18, 0x06	; 6
     930:	e1 50       	subi	r30, 0x01	; 1
     932:	f0 40       	sbci	r31, 0x00	; 0
     934:	20 40       	sbci	r18, 0x00	; 0
     936:	e1 f7       	brne	.-8      	; 0x930 <main+0x100>
     938:	00 c0       	rjmp	.+0      	; 0x93a <main+0x10a>
     93a:	00 00       	nop
     93c:	b6 cf       	rjmp	.-148    	; 0x8aa <main+0x7a>

0000093e <TWI_SlaveInitializeDriver>:
     93e:	fc 01       	movw	r30, r24
     940:	60 83       	st	Z, r22
     942:	71 83       	std	Z+1, r23	; 0x01
     944:	42 83       	std	Z+2, r20	; 0x02
     946:	53 83       	std	Z+3, r21	; 0x03
     948:	ec 57       	subi	r30, 0x7C	; 124
     94a:	ff 4f       	sbci	r31, 0xFF	; 255
     94c:	10 82       	st	Z, r1
     94e:	fc 01       	movw	r30, r24
     950:	eb 57       	subi	r30, 0x7B	; 123
     952:	ff 4f       	sbci	r31, 0xFF	; 255
     954:	10 82       	st	Z, r1
     956:	fc 01       	movw	r30, r24
     958:	ea 57       	subi	r30, 0x7A	; 122
     95a:	ff 4f       	sbci	r31, 0xFF	; 255
     95c:	10 82       	st	Z, r1
     95e:	fc 01       	movw	r30, r24
     960:	e9 57       	subi	r30, 0x79	; 121
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	10 82       	st	Z, r1
     966:	fc 01       	movw	r30, r24
     968:	e8 57       	subi	r30, 0x78	; 120
     96a:	ff 4f       	sbci	r31, 0xFF	; 255
     96c:	10 82       	st	Z, r1
     96e:	08 95       	ret

00000970 <TWI_SlaveInitializeModule>:
     970:	dc 01       	movw	r26, r24
     972:	ed 91       	ld	r30, X+
     974:	fc 91       	ld	r31, X
     976:	11 97       	sbiw	r26, 0x01	; 1
     978:	48 63       	ori	r20, 0x38	; 56
     97a:	40 87       	std	Z+8, r20	; 0x08
     97c:	ed 91       	ld	r30, X+
     97e:	fc 91       	ld	r31, X
     980:	66 0f       	add	r22, r22
     982:	63 87       	std	Z+11, r22	; 0x0b
     984:	08 95       	ret

00000986 <TWI_SlaveTransactionFinished>:
     986:	fc 01       	movw	r30, r24
     988:	e9 57       	subi	r30, 0x79	; 121
     98a:	ff 4f       	sbci	r31, 0xFF	; 255
     98c:	60 83       	st	Z, r22
     98e:	fc 01       	movw	r30, r24
     990:	ea 57       	subi	r30, 0x7A	; 122
     992:	ff 4f       	sbci	r31, 0xFF	; 255
     994:	10 82       	st	Z, r1
     996:	08 95       	ret

00000998 <TWI_SlaveWriteHandler>:
     998:	cf 93       	push	r28
     99a:	df 93       	push	r29
     99c:	fc 01       	movw	r30, r24
     99e:	eb 57       	subi	r30, 0x7B	; 123
     9a0:	ff 4f       	sbci	r31, 0xFF	; 255
     9a2:	20 81       	ld	r18, Z
     9a4:	22 23       	and	r18, r18
     9a6:	59 f0       	breq	.+22     	; 0x9be <TWI_SlaveWriteHandler+0x26>
     9a8:	dc 01       	movw	r26, r24
     9aa:	ed 91       	ld	r30, X+
     9ac:	fc 91       	ld	r31, X
     9ae:	22 85       	ldd	r18, Z+10	; 0x0a
     9b0:	24 ff       	sbrs	r18, 4
     9b2:	05 c0       	rjmp	.+10     	; 0x9be <TWI_SlaveWriteHandler+0x26>
     9b4:	22 e0       	ldi	r18, 0x02	; 2
     9b6:	21 87       	std	Z+9, r18	; 0x09
     9b8:	61 e0       	ldi	r22, 0x01	; 1
     9ba:	e5 df       	rcall	.-54     	; 0x986 <TWI_SlaveTransactionFinished>
     9bc:	24 c0       	rjmp	.+72     	; 0xa06 <TWI_SlaveWriteHandler+0x6e>
     9be:	fc 01       	movw	r30, r24
     9c0:	eb 57       	subi	r30, 0x7B	; 123
     9c2:	ff 4f       	sbci	r31, 0xFF	; 255
     9c4:	20 81       	ld	r18, Z
     9c6:	20 34       	cpi	r18, 0x40	; 64
     9c8:	b8 f4       	brcc	.+46     	; 0x9f8 <TWI_SlaveWriteHandler+0x60>
     9ca:	fc 01       	movw	r30, r24
     9cc:	eb 57       	subi	r30, 0x7B	; 123
     9ce:	ff 4f       	sbci	r31, 0xFF	; 255
     9d0:	20 81       	ld	r18, Z
     9d2:	dc 01       	movw	r26, r24
     9d4:	a2 0f       	add	r26, r18
     9d6:	b1 1d       	adc	r27, r1
     9d8:	ac 5b       	subi	r26, 0xBC	; 188
     9da:	bf 4f       	sbci	r27, 0xFF	; 255
     9dc:	2c 91       	ld	r18, X
     9de:	ec 01       	movw	r28, r24
     9e0:	a8 81       	ld	r26, Y
     9e2:	b9 81       	ldd	r27, Y+1	; 0x01
     9e4:	1c 96       	adiw	r26, 0x0c	; 12
     9e6:	2c 93       	st	X, r18
     9e8:	20 81       	ld	r18, Z
     9ea:	2f 5f       	subi	r18, 0xFF	; 255
     9ec:	20 83       	st	Z, r18
     9ee:	e8 81       	ld	r30, Y
     9f0:	f9 81       	ldd	r31, Y+1	; 0x01
     9f2:	83 e0       	ldi	r24, 0x03	; 3
     9f4:	81 87       	std	Z+9, r24	; 0x09
     9f6:	07 c0       	rjmp	.+14     	; 0xa06 <TWI_SlaveWriteHandler+0x6e>
     9f8:	dc 01       	movw	r26, r24
     9fa:	ed 91       	ld	r30, X+
     9fc:	fc 91       	ld	r31, X
     9fe:	22 e0       	ldi	r18, 0x02	; 2
     a00:	21 87       	std	Z+9, r18	; 0x09
     a02:	62 e0       	ldi	r22, 0x02	; 2
     a04:	c0 df       	rcall	.-128    	; 0x986 <TWI_SlaveTransactionFinished>
     a06:	df 91       	pop	r29
     a08:	cf 91       	pop	r28
     a0a:	08 95       	ret

00000a0c <TWI_SlaveReadHandler>:
     a0c:	0f 93       	push	r16
     a0e:	1f 93       	push	r17
     a10:	cf 93       	push	r28
     a12:	df 93       	push	r29
     a14:	ec 01       	movw	r28, r24
     a16:	e8 81       	ld	r30, Y
     a18:	f9 81       	ldd	r31, Y+1	; 0x01
     a1a:	80 85       	ldd	r24, Z+8	; 0x08
     a1c:	84 60       	ori	r24, 0x04	; 4
     a1e:	80 87       	std	Z+8, r24	; 0x08
     a20:	fe 01       	movw	r30, r28
     a22:	ec 57       	subi	r30, 0x7C	; 124
     a24:	ff 4f       	sbci	r31, 0xFF	; 255
     a26:	80 81       	ld	r24, Z
     a28:	80 34       	cpi	r24, 0x40	; 64
     a2a:	48 f5       	brcc	.+82     	; 0xa7e <TWI_SlaveReadHandler+0x72>
     a2c:	e8 81       	ld	r30, Y
     a2e:	f9 81       	ldd	r31, Y+1	; 0x01
     a30:	84 85       	ldd	r24, Z+12	; 0x0c
     a32:	8e 01       	movw	r16, r28
     a34:	0c 57       	subi	r16, 0x7C	; 124
     a36:	1f 4f       	sbci	r17, 0xFF	; 255
     a38:	f8 01       	movw	r30, r16
     a3a:	90 81       	ld	r25, Z
     a3c:	fe 01       	movw	r30, r28
     a3e:	e9 0f       	add	r30, r25
     a40:	f1 1d       	adc	r31, r1
     a42:	84 83       	std	Z+4, r24	; 0x04
     a44:	ea 81       	ldd	r30, Y+2	; 0x02
     a46:	fb 81       	ldd	r31, Y+3	; 0x03
     a48:	19 95       	eicall
     a4a:	f8 01       	movw	r30, r16
     a4c:	80 81       	ld	r24, Z
     a4e:	8f 5f       	subi	r24, 0xFF	; 255
     a50:	80 83       	st	Z, r24
     a52:	fe 01       	movw	r30, r28
     a54:	e8 57       	subi	r30, 0x78	; 120
     a56:	ff 4f       	sbci	r31, 0xFF	; 255
     a58:	80 81       	ld	r24, Z
     a5a:	88 23       	and	r24, r24
     a5c:	59 f0       	breq	.+22     	; 0xa74 <TWI_SlaveReadHandler+0x68>
     a5e:	e8 81       	ld	r30, Y
     a60:	f9 81       	ldd	r31, Y+1	; 0x01
     a62:	82 e0       	ldi	r24, 0x02	; 2
     a64:	81 87       	std	Z+9, r24	; 0x09
     a66:	66 e0       	ldi	r22, 0x06	; 6
     a68:	ce 01       	movw	r24, r28
     a6a:	8d df       	rcall	.-230    	; 0x986 <TWI_SlaveTransactionFinished>
     a6c:	c8 57       	subi	r28, 0x78	; 120
     a6e:	df 4f       	sbci	r29, 0xFF	; 255
     a70:	18 82       	st	Y, r1
     a72:	0c c0       	rjmp	.+24     	; 0xa8c <TWI_SlaveReadHandler+0x80>
     a74:	e8 81       	ld	r30, Y
     a76:	f9 81       	ldd	r31, Y+1	; 0x01
     a78:	83 e0       	ldi	r24, 0x03	; 3
     a7a:	81 87       	std	Z+9, r24	; 0x09
     a7c:	07 c0       	rjmp	.+14     	; 0xa8c <TWI_SlaveReadHandler+0x80>
     a7e:	e8 81       	ld	r30, Y
     a80:	f9 81       	ldd	r31, Y+1	; 0x01
     a82:	86 e0       	ldi	r24, 0x06	; 6
     a84:	81 87       	std	Z+9, r24	; 0x09
     a86:	62 e0       	ldi	r22, 0x02	; 2
     a88:	ce 01       	movw	r24, r28
     a8a:	7d df       	rcall	.-262    	; 0x986 <TWI_SlaveTransactionFinished>
     a8c:	df 91       	pop	r29
     a8e:	cf 91       	pop	r28
     a90:	1f 91       	pop	r17
     a92:	0f 91       	pop	r16
     a94:	08 95       	ret

00000a96 <TWI_SlaveDataHandler>:
     a96:	dc 01       	movw	r26, r24
     a98:	ed 91       	ld	r30, X+
     a9a:	fc 91       	ld	r31, X
     a9c:	22 85       	ldd	r18, Z+10	; 0x0a
     a9e:	21 ff       	sbrs	r18, 1
     aa0:	01 c0       	rjmp	.+2      	; 0xaa4 <TWI_SlaveDataHandler+0xe>
     aa2:	7a cf       	rjmp	.-268    	; 0x998 <TWI_SlaveWriteHandler>
     aa4:	b3 cf       	rjmp	.-154    	; 0xa0c <TWI_SlaveReadHandler>

00000aa6 <TWI_SlaveStopHandler>:
     aa6:	dc 01       	movw	r26, r24
     aa8:	ed 91       	ld	r30, X+
     aaa:	fc 91       	ld	r31, X
     aac:	11 97       	sbiw	r26, 0x01	; 1
     aae:	20 85       	ldd	r18, Z+8	; 0x08
     ab0:	2b 7f       	andi	r18, 0xFB	; 251
     ab2:	20 87       	std	Z+8, r18	; 0x08
     ab4:	ed 91       	ld	r30, X+
     ab6:	fc 91       	ld	r31, X
     ab8:	22 85       	ldd	r18, Z+10	; 0x0a
     aba:	20 64       	ori	r18, 0x40	; 64
     abc:	22 87       	std	Z+10, r18	; 0x0a
     abe:	61 e0       	ldi	r22, 0x01	; 1
     ac0:	62 cf       	rjmp	.-316    	; 0x986 <TWI_SlaveTransactionFinished>

00000ac2 <TWI_SlaveAddressMatchHandler>:
     ac2:	cf 93       	push	r28
     ac4:	df 93       	push	r29
     ac6:	ec 01       	movw	r28, r24
     ac8:	fc 01       	movw	r30, r24
     aca:	e8 57       	subi	r30, 0x78	; 120
     acc:	ff 4f       	sbci	r31, 0xFF	; 255
     ace:	80 81       	ld	r24, Z
     ad0:	88 23       	and	r24, r24
     ad2:	59 f0       	breq	.+22     	; 0xaea <TWI_SlaveAddressMatchHandler+0x28>
     ad4:	e8 81       	ld	r30, Y
     ad6:	f9 81       	ldd	r31, Y+1	; 0x01
     ad8:	82 e0       	ldi	r24, 0x02	; 2
     ada:	81 87       	std	Z+9, r24	; 0x09
     adc:	66 e0       	ldi	r22, 0x06	; 6
     ade:	ce 01       	movw	r24, r28
     ae0:	52 df       	rcall	.-348    	; 0x986 <TWI_SlaveTransactionFinished>
     ae2:	c8 57       	subi	r28, 0x78	; 120
     ae4:	df 4f       	sbci	r29, 0xFF	; 255
     ae6:	18 82       	st	Y, r1
     ae8:	1a c0       	rjmp	.+52     	; 0xb1e <TWI_SlaveAddressMatchHandler+0x5c>
     aea:	fe 01       	movw	r30, r28
     aec:	ea 57       	subi	r30, 0x7A	; 122
     aee:	ff 4f       	sbci	r31, 0xFF	; 255
     af0:	81 e0       	ldi	r24, 0x01	; 1
     af2:	80 83       	st	Z, r24
     af4:	fe 01       	movw	r30, r28
     af6:	e9 57       	subi	r30, 0x79	; 121
     af8:	ff 4f       	sbci	r31, 0xFF	; 255
     afa:	10 82       	st	Z, r1
     afc:	e8 81       	ld	r30, Y
     afe:	f9 81       	ldd	r31, Y+1	; 0x01
     b00:	80 85       	ldd	r24, Z+8	; 0x08
     b02:	8b 7f       	andi	r24, 0xFB	; 251
     b04:	80 87       	std	Z+8, r24	; 0x08
     b06:	fe 01       	movw	r30, r28
     b08:	ec 57       	subi	r30, 0x7C	; 124
     b0a:	ff 4f       	sbci	r31, 0xFF	; 255
     b0c:	10 82       	st	Z, r1
     b0e:	fe 01       	movw	r30, r28
     b10:	eb 57       	subi	r30, 0x7B	; 123
     b12:	ff 4f       	sbci	r31, 0xFF	; 255
     b14:	10 82       	st	Z, r1
     b16:	e8 81       	ld	r30, Y
     b18:	f9 81       	ldd	r31, Y+1	; 0x01
     b1a:	83 e0       	ldi	r24, 0x03	; 3
     b1c:	81 87       	std	Z+9, r24	; 0x09
     b1e:	df 91       	pop	r29
     b20:	cf 91       	pop	r28
     b22:	08 95       	ret

00000b24 <TWI_SlaveInterruptHandler>:
     b24:	dc 01       	movw	r26, r24
     b26:	ed 91       	ld	r30, X+
     b28:	fc 91       	ld	r31, X
     b2a:	22 85       	ldd	r18, Z+10	; 0x0a
     b2c:	22 ff       	sbrs	r18, 2
     b2e:	12 c0       	rjmp	.+36     	; 0xb54 <TWI_SlaveInterruptHandler+0x30>
     b30:	fc 01       	movw	r30, r24
     b32:	ec 57       	subi	r30, 0x7C	; 124
     b34:	ff 4f       	sbci	r31, 0xFF	; 255
     b36:	10 82       	st	Z, r1
     b38:	fc 01       	movw	r30, r24
     b3a:	eb 57       	subi	r30, 0x7B	; 123
     b3c:	ff 4f       	sbci	r31, 0xFF	; 255
     b3e:	10 82       	st	Z, r1
     b40:	fc 01       	movw	r30, r24
     b42:	e9 57       	subi	r30, 0x79	; 121
     b44:	ff 4f       	sbci	r31, 0xFF	; 255
     b46:	24 e0       	ldi	r18, 0x04	; 4
     b48:	20 83       	st	Z, r18
     b4a:	fc 01       	movw	r30, r24
     b4c:	ea 57       	subi	r30, 0x7A	; 122
     b4e:	ff 4f       	sbci	r31, 0xFF	; 255
     b50:	10 82       	st	Z, r1
     b52:	08 95       	ret
     b54:	23 ff       	sbrs	r18, 3
     b56:	12 c0       	rjmp	.+36     	; 0xb7c <TWI_SlaveInterruptHandler+0x58>
     b58:	fc 01       	movw	r30, r24
     b5a:	ec 57       	subi	r30, 0x7C	; 124
     b5c:	ff 4f       	sbci	r31, 0xFF	; 255
     b5e:	10 82       	st	Z, r1
     b60:	fc 01       	movw	r30, r24
     b62:	eb 57       	subi	r30, 0x7B	; 123
     b64:	ff 4f       	sbci	r31, 0xFF	; 255
     b66:	10 82       	st	Z, r1
     b68:	fc 01       	movw	r30, r24
     b6a:	e9 57       	subi	r30, 0x79	; 121
     b6c:	ff 4f       	sbci	r31, 0xFF	; 255
     b6e:	23 e0       	ldi	r18, 0x03	; 3
     b70:	20 83       	st	Z, r18
     b72:	fc 01       	movw	r30, r24
     b74:	ea 57       	subi	r30, 0x7A	; 122
     b76:	ff 4f       	sbci	r31, 0xFF	; 255
     b78:	10 82       	st	Z, r1
     b7a:	08 95       	ret
     b7c:	42 2f       	mov	r20, r18
     b7e:	40 74       	andi	r20, 0x40	; 64
     b80:	32 2f       	mov	r19, r18
     b82:	31 74       	andi	r19, 0x41	; 65
     b84:	31 34       	cpi	r19, 0x41	; 65
     b86:	09 f4       	brne	.+2      	; 0xb8a <TWI_SlaveInterruptHandler+0x66>
     b88:	9c cf       	rjmp	.-200    	; 0xac2 <TWI_SlaveAddressMatchHandler>
     b8a:	44 23       	and	r20, r20
     b8c:	09 f0       	breq	.+2      	; 0xb90 <TWI_SlaveInterruptHandler+0x6c>
     b8e:	8b cf       	rjmp	.-234    	; 0xaa6 <TWI_SlaveStopHandler>
     b90:	22 23       	and	r18, r18
     b92:	0c f4       	brge	.+2      	; 0xb96 <TWI_SlaveInterruptHandler+0x72>
     b94:	80 cf       	rjmp	.-256    	; 0xa96 <TWI_SlaveDataHandler>
     b96:	65 e0       	ldi	r22, 0x05	; 5
     b98:	f6 ce       	rjmp	.-532    	; 0x986 <TWI_SlaveTransactionFinished>

00000b9a <uart_putc>:
     b9a:	1f 93       	push	r17
     b9c:	cf 93       	push	r28
     b9e:	df 93       	push	r29
     ba0:	ec 01       	movw	r28, r24
     ba2:	16 2f       	mov	r17, r22
     ba4:	8c d1       	rcall	.+792    	; 0xebe <USART_TXBuffer_FreeSpace>
     ba6:	88 23       	and	r24, r24
     ba8:	19 f0       	breq	.+6      	; 0xbb0 <uart_putc+0x16>
     baa:	61 2f       	mov	r22, r17
     bac:	ce 01       	movw	r24, r28
     bae:	96 d1       	rcall	.+812    	; 0xedc <USART_TXBuffer_PutByte>
     bb0:	df 91       	pop	r29
     bb2:	cf 91       	pop	r28
     bb4:	1f 91       	pop	r17
     bb6:	08 95       	ret

00000bb8 <uart_puts>:
     bb8:	0f 93       	push	r16
     bba:	1f 93       	push	r17
     bbc:	cf 93       	push	r28
     bbe:	df 93       	push	r29
     bc0:	8c 01       	movw	r16, r24
     bc2:	c6 2f       	mov	r28, r22
     bc4:	d7 2f       	mov	r29, r23
     bc6:	69 91       	ld	r22, Y+
     bc8:	66 23       	and	r22, r22
     bca:	29 f0       	breq	.+10     	; 0xbd6 <uart_puts+0x1e>
     bcc:	c8 01       	movw	r24, r16
     bce:	e5 df       	rcall	.-54     	; 0xb9a <uart_putc>
     bd0:	69 91       	ld	r22, Y+
     bd2:	61 11       	cpse	r22, r1
     bd4:	fb cf       	rjmp	.-10     	; 0xbcc <uart_puts+0x14>
     bd6:	df 91       	pop	r29
     bd8:	cf 91       	pop	r28
     bda:	1f 91       	pop	r17
     bdc:	0f 91       	pop	r16
     bde:	08 95       	ret

00000be0 <set_usart_txrx_direction>:
     be0:	80 3a       	cpi	r24, 0xA0	; 160
     be2:	28 e0       	ldi	r18, 0x08	; 8
     be4:	92 07       	cpc	r25, r18
     be6:	39 f4       	brne	.+14     	; 0xbf6 <set_usart_txrx_direction+0x16>
     be8:	e0 e4       	ldi	r30, 0x40	; 64
     bea:	f6 e0       	ldi	r31, 0x06	; 6
     bec:	88 e0       	ldi	r24, 0x08	; 8
     bee:	81 83       	std	Z+1, r24	; 0x01
     bf0:	84 e0       	ldi	r24, 0x04	; 4
     bf2:	82 83       	std	Z+2, r24	; 0x02
     bf4:	08 95       	ret
     bf6:	80 3b       	cpi	r24, 0xB0	; 176
     bf8:	28 e0       	ldi	r18, 0x08	; 8
     bfa:	92 07       	cpc	r25, r18
     bfc:	39 f4       	brne	.+14     	; 0xc0c <set_usart_txrx_direction+0x2c>
     bfe:	e0 e4       	ldi	r30, 0x40	; 64
     c00:	f6 e0       	ldi	r31, 0x06	; 6
     c02:	80 e8       	ldi	r24, 0x80	; 128
     c04:	81 83       	std	Z+1, r24	; 0x01
     c06:	80 e4       	ldi	r24, 0x40	; 64
     c08:	82 83       	std	Z+2, r24	; 0x02
     c0a:	08 95       	ret
     c0c:	80 3a       	cpi	r24, 0xA0	; 160
     c0e:	29 e0       	ldi	r18, 0x09	; 9
     c10:	92 07       	cpc	r25, r18
     c12:	39 f4       	brne	.+14     	; 0xc22 <set_usart_txrx_direction+0x42>
     c14:	e0 e6       	ldi	r30, 0x60	; 96
     c16:	f6 e0       	ldi	r31, 0x06	; 6
     c18:	88 e0       	ldi	r24, 0x08	; 8
     c1a:	81 83       	std	Z+1, r24	; 0x01
     c1c:	84 e0       	ldi	r24, 0x04	; 4
     c1e:	82 83       	std	Z+2, r24	; 0x02
     c20:	08 95       	ret
     c22:	80 3b       	cpi	r24, 0xB0	; 176
     c24:	29 e0       	ldi	r18, 0x09	; 9
     c26:	92 07       	cpc	r25, r18
     c28:	39 f4       	brne	.+14     	; 0xc38 <set_usart_txrx_direction+0x58>
     c2a:	e0 e6       	ldi	r30, 0x60	; 96
     c2c:	f6 e0       	ldi	r31, 0x06	; 6
     c2e:	80 e8       	ldi	r24, 0x80	; 128
     c30:	81 83       	std	Z+1, r24	; 0x01
     c32:	80 e4       	ldi	r24, 0x40	; 64
     c34:	82 83       	std	Z+2, r24	; 0x02
     c36:	08 95       	ret
     c38:	80 3a       	cpi	r24, 0xA0	; 160
     c3a:	9a 40       	sbci	r25, 0x0A	; 10
     c3c:	31 f4       	brne	.+12     	; 0xc4a <set_usart_txrx_direction+0x6a>
     c3e:	e0 e8       	ldi	r30, 0x80	; 128
     c40:	f6 e0       	ldi	r31, 0x06	; 6
     c42:	88 e0       	ldi	r24, 0x08	; 8
     c44:	81 83       	std	Z+1, r24	; 0x01
     c46:	84 e0       	ldi	r24, 0x04	; 4
     c48:	82 83       	std	Z+2, r24	; 0x02
     c4a:	08 95       	ret

00000c4c <calc_bsel>:
     c4c:	4f 92       	push	r4
     c4e:	5f 92       	push	r5
     c50:	6f 92       	push	r6
     c52:	7f 92       	push	r7
     c54:	8f 92       	push	r8
     c56:	9f 92       	push	r9
     c58:	af 92       	push	r10
     c5a:	bf 92       	push	r11
     c5c:	cf 92       	push	r12
     c5e:	df 92       	push	r13
     c60:	ef 92       	push	r14
     c62:	ff 92       	push	r15
     c64:	0f 93       	push	r16
     c66:	1f 93       	push	r17
     c68:	49 01       	movw	r8, r18
     c6a:	5a 01       	movw	r10, r20
     c6c:	4e 2d       	mov	r20, r14
     c6e:	41 70       	andi	r20, 0x01	; 1
     c70:	20 e1       	ldi	r18, 0x10	; 16
     c72:	30 e0       	ldi	r19, 0x00	; 0
     c74:	79 01       	movw	r14, r18
     c76:	02 c0       	rjmp	.+4      	; 0xc7c <calc_bsel+0x30>
     c78:	f5 94       	asr	r15
     c7a:	e7 94       	ror	r14
     c7c:	4a 95       	dec	r20
     c7e:	e2 f7       	brpl	.-8      	; 0xc78 <calc_bsel+0x2c>
     c80:	00 23       	and	r16, r16
     c82:	0c f0       	brlt	.+2      	; 0xc86 <calc_bsel+0x3a>
     c84:	3a c0       	rjmp	.+116    	; 0xcfa <calc_bsel+0xae>
     c86:	a4 d2       	rcall	.+1352   	; 0x11d0 <__floatunsisf>
     c88:	2b 01       	movw	r4, r22
     c8a:	3c 01       	movw	r6, r24
     c8c:	b7 01       	movw	r22, r14
     c8e:	77 27       	eor	r23, r23
     c90:	88 27       	eor	r24, r24
     c92:	77 fd       	sbrc	r23, 7
     c94:	80 95       	com	r24
     c96:	98 2f       	mov	r25, r24
     c98:	9d d2       	rcall	.+1338   	; 0x11d4 <__floatsisf>
     c9a:	6b 01       	movw	r12, r22
     c9c:	7c 01       	movw	r14, r24
     c9e:	c5 01       	movw	r24, r10
     ca0:	b4 01       	movw	r22, r8
     ca2:	96 d2       	rcall	.+1324   	; 0x11d0 <__floatunsisf>
     ca4:	9b 01       	movw	r18, r22
     ca6:	ac 01       	movw	r20, r24
     ca8:	c7 01       	movw	r24, r14
     caa:	b6 01       	movw	r22, r12
     cac:	1f d3       	rcall	.+1598   	; 0x12ec <__mulsf3>
     cae:	9b 01       	movw	r18, r22
     cb0:	ac 01       	movw	r20, r24
     cb2:	c3 01       	movw	r24, r6
     cb4:	b2 01       	movw	r22, r4
     cb6:	f8 d1       	rcall	.+1008   	; 0x10a8 <__divsf3>
     cb8:	20 e0       	ldi	r18, 0x00	; 0
     cba:	30 e0       	ldi	r19, 0x00	; 0
     cbc:	40 e8       	ldi	r20, 0x80	; 128
     cbe:	5f e3       	ldi	r21, 0x3F	; 63
     cc0:	8e d1       	rcall	.+796    	; 0xfde <__subsf3>
     cc2:	6b 01       	movw	r12, r22
     cc4:	7c 01       	movw	r14, r24
     cc6:	11 27       	eor	r17, r17
     cc8:	01 95       	neg	r16
     cca:	0c f4       	brge	.+2      	; 0xcce <calc_bsel+0x82>
     ccc:	10 95       	com	r17
     cce:	61 e0       	ldi	r22, 0x01	; 1
     cd0:	70 e0       	ldi	r23, 0x00	; 0
     cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <calc_bsel+0x8c>
     cd4:	66 0f       	add	r22, r22
     cd6:	77 1f       	adc	r23, r23
     cd8:	0a 95       	dec	r16
     cda:	e2 f7       	brpl	.-8      	; 0xcd4 <calc_bsel+0x88>
     cdc:	88 27       	eor	r24, r24
     cde:	77 fd       	sbrc	r23, 7
     ce0:	80 95       	com	r24
     ce2:	98 2f       	mov	r25, r24
     ce4:	77 d2       	rcall	.+1262   	; 0x11d4 <__floatsisf>
     ce6:	9b 01       	movw	r18, r22
     ce8:	ac 01       	movw	r20, r24
     cea:	c7 01       	movw	r24, r14
     cec:	b6 01       	movw	r22, r12
     cee:	fe d2       	rcall	.+1532   	; 0x12ec <__mulsf3>
     cf0:	60 d3       	rcall	.+1728   	; 0x13b2 <round>
     cf2:	42 d2       	rcall	.+1156   	; 0x1178 <__fixunssfsi>
     cf4:	86 2f       	mov	r24, r22
     cf6:	97 2f       	mov	r25, r23
     cf8:	35 c0       	rjmp	.+106    	; 0xd64 <calc_bsel+0x118>
     cfa:	6a d2       	rcall	.+1236   	; 0x11d0 <__floatunsisf>
     cfc:	2b 01       	movw	r4, r22
     cfe:	3c 01       	movw	r6, r24
     d00:	b7 01       	movw	r22, r14
     d02:	77 27       	eor	r23, r23
     d04:	88 27       	eor	r24, r24
     d06:	77 fd       	sbrc	r23, 7
     d08:	80 95       	com	r24
     d0a:	98 2f       	mov	r25, r24
     d0c:	63 d2       	rcall	.+1222   	; 0x11d4 <__floatsisf>
     d0e:	6b 01       	movw	r12, r22
     d10:	7c 01       	movw	r14, r24
     d12:	c5 01       	movw	r24, r10
     d14:	b4 01       	movw	r22, r8
     d16:	5c d2       	rcall	.+1208   	; 0x11d0 <__floatunsisf>
     d18:	9b 01       	movw	r18, r22
     d1a:	ac 01       	movw	r20, r24
     d1c:	c7 01       	movw	r24, r14
     d1e:	b6 01       	movw	r22, r12
     d20:	e5 d2       	rcall	.+1482   	; 0x12ec <__mulsf3>
     d22:	9b 01       	movw	r18, r22
     d24:	ac 01       	movw	r20, r24
     d26:	c3 01       	movw	r24, r6
     d28:	b2 01       	movw	r22, r4
     d2a:	be d1       	rcall	.+892    	; 0x10a8 <__divsf3>
     d2c:	4b 01       	movw	r8, r22
     d2e:	5c 01       	movw	r10, r24
     d30:	61 e0       	ldi	r22, 0x01	; 1
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	02 c0       	rjmp	.+4      	; 0xd3a <calc_bsel+0xee>
     d36:	66 0f       	add	r22, r22
     d38:	77 1f       	adc	r23, r23
     d3a:	0a 95       	dec	r16
     d3c:	e2 f7       	brpl	.-8      	; 0xd36 <calc_bsel+0xea>
     d3e:	88 27       	eor	r24, r24
     d40:	77 fd       	sbrc	r23, 7
     d42:	80 95       	com	r24
     d44:	98 2f       	mov	r25, r24
     d46:	46 d2       	rcall	.+1164   	; 0x11d4 <__floatsisf>
     d48:	9b 01       	movw	r18, r22
     d4a:	ac 01       	movw	r20, r24
     d4c:	c5 01       	movw	r24, r10
     d4e:	b4 01       	movw	r22, r8
     d50:	ab d1       	rcall	.+854    	; 0x10a8 <__divsf3>
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	40 e8       	ldi	r20, 0x80	; 128
     d58:	5f e3       	ldi	r21, 0x3F	; 63
     d5a:	41 d1       	rcall	.+642    	; 0xfde <__subsf3>
     d5c:	2a d3       	rcall	.+1620   	; 0x13b2 <round>
     d5e:	0c d2       	rcall	.+1048   	; 0x1178 <__fixunssfsi>
     d60:	86 2f       	mov	r24, r22
     d62:	97 2f       	mov	r25, r23
     d64:	1f 91       	pop	r17
     d66:	0f 91       	pop	r16
     d68:	ff 90       	pop	r15
     d6a:	ef 90       	pop	r14
     d6c:	df 90       	pop	r13
     d6e:	cf 90       	pop	r12
     d70:	bf 90       	pop	r11
     d72:	af 90       	pop	r10
     d74:	9f 90       	pop	r9
     d76:	8f 90       	pop	r8
     d78:	7f 90       	pop	r7
     d7a:	6f 90       	pop	r6
     d7c:	5f 90       	pop	r5
     d7e:	4f 90       	pop	r4
     d80:	08 95       	ret

00000d82 <calc_bscale>:
     d82:	4f 92       	push	r4
     d84:	5f 92       	push	r5
     d86:	6f 92       	push	r6
     d88:	7f 92       	push	r7
     d8a:	8f 92       	push	r8
     d8c:	9f 92       	push	r9
     d8e:	af 92       	push	r10
     d90:	bf 92       	push	r11
     d92:	ef 92       	push	r14
     d94:	0f 93       	push	r16
     d96:	cf 93       	push	r28
     d98:	df 93       	push	r29
     d9a:	2b 01       	movw	r4, r22
     d9c:	3c 01       	movw	r6, r24
     d9e:	49 01       	movw	r8, r18
     da0:	5a 01       	movw	r10, r20
     da2:	d0 2f       	mov	r29, r16
     da4:	c9 ef       	ldi	r28, 0xF9	; 249
     da6:	ed 2e       	mov	r14, r29
     da8:	0c 2f       	mov	r16, r28
     daa:	a5 01       	movw	r20, r10
     dac:	94 01       	movw	r18, r8
     dae:	c3 01       	movw	r24, r6
     db0:	b2 01       	movw	r22, r4
     db2:	4c df       	rcall	.-360    	; 0xc4c <calc_bsel>
     db4:	81 15       	cp	r24, r1
     db6:	90 41       	sbci	r25, 0x10	; 16
     db8:	18 f0       	brcs	.+6      	; 0xdc0 <calc_bscale+0x3e>
     dba:	cf 5f       	subi	r28, 0xFF	; 255
     dbc:	c8 30       	cpi	r28, 0x08	; 8
     dbe:	99 f7       	brne	.-26     	; 0xda6 <calc_bscale+0x24>
     dc0:	8c 2f       	mov	r24, r28
     dc2:	df 91       	pop	r29
     dc4:	cf 91       	pop	r28
     dc6:	0f 91       	pop	r16
     dc8:	ef 90       	pop	r14
     dca:	bf 90       	pop	r11
     dcc:	af 90       	pop	r10
     dce:	9f 90       	pop	r9
     dd0:	8f 90       	pop	r8
     dd2:	7f 90       	pop	r7
     dd4:	6f 90       	pop	r6
     dd6:	5f 90       	pop	r5
     dd8:	4f 90       	pop	r4
     dda:	08 95       	ret

00000ddc <init_uart>:
     ddc:	2f 92       	push	r2
     dde:	3f 92       	push	r3
     de0:	4f 92       	push	r4
     de2:	5f 92       	push	r5
     de4:	6f 92       	push	r6
     de6:	7f 92       	push	r7
     de8:	8f 92       	push	r8
     dea:	9f 92       	push	r9
     dec:	af 92       	push	r10
     dee:	bf 92       	push	r11
     df0:	cf 92       	push	r12
     df2:	ef 92       	push	r14
     df4:	ff 92       	push	r15
     df6:	0f 93       	push	r16
     df8:	1f 93       	push	r17
     dfa:	cf 93       	push	r28
     dfc:	df 93       	push	r29
     dfe:	ec 01       	movw	r28, r24
     e00:	3b 01       	movw	r6, r22
     e02:	49 01       	movw	r8, r18
     e04:	5a 01       	movw	r10, r20
     e06:	17 01       	movw	r2, r14
     e08:	28 01       	movw	r4, r16
     e0a:	ec 2c       	mov	r14, r12
     e0c:	0c 2d       	mov	r16, r12
     e0e:	a2 01       	movw	r20, r4
     e10:	91 01       	movw	r18, r2
     e12:	c5 01       	movw	r24, r10
     e14:	b4 01       	movw	r22, r8
     e16:	b5 df       	rcall	.-150    	; 0xd82 <calc_bscale>
     e18:	18 2f       	mov	r17, r24
     e1a:	08 2f       	mov	r16, r24
     e1c:	a2 01       	movw	r20, r4
     e1e:	91 01       	movw	r18, r2
     e20:	c5 01       	movw	r24, r10
     e22:	b4 01       	movw	r22, r8
     e24:	13 df       	rcall	.-474    	; 0xc4c <calc_bsel>
     e26:	b8 2e       	mov	r11, r24
     e28:	e9 2e       	mov	r14, r25
     e2a:	41 e0       	ldi	r20, 0x01	; 1
     e2c:	b3 01       	movw	r22, r6
     e2e:	ce 01       	movw	r24, r28
     e30:	32 d0       	rcall	.+100    	; 0xe96 <USART_InterruptDriver_Initialize>
     e32:	e8 81       	ld	r30, Y
     e34:	f9 81       	ldd	r31, Y+1	; 0x01
     e36:	83 e0       	ldi	r24, 0x03	; 3
     e38:	85 83       	std	Z+5, r24	; 0x05
     e3a:	e8 81       	ld	r30, Y
     e3c:	f9 81       	ldd	r31, Y+1	; 0x01
     e3e:	84 81       	ldd	r24, Z+4	; 0x04
     e40:	80 61       	ori	r24, 0x10	; 16
     e42:	84 83       	std	Z+4, r24	; 0x04
     e44:	e8 81       	ld	r30, Y
     e46:	f9 81       	ldd	r31, Y+1	; 0x01
     e48:	84 81       	ldd	r24, Z+4	; 0x04
     e4a:	88 60       	ori	r24, 0x08	; 8
     e4c:	84 83       	std	Z+4, r24	; 0x04
     e4e:	e8 81       	ld	r30, Y
     e50:	f9 81       	ldd	r31, Y+1	; 0x01
     e52:	83 81       	ldd	r24, Z+3	; 0x03
     e54:	8f 7c       	andi	r24, 0xCF	; 207
     e56:	80 61       	ori	r24, 0x10	; 16
     e58:	83 83       	std	Z+3, r24	; 0x03
     e5a:	e8 81       	ld	r30, Y
     e5c:	f9 81       	ldd	r31, Y+1	; 0x01
     e5e:	b6 82       	std	Z+6, r11	; 0x06
     e60:	e8 81       	ld	r30, Y
     e62:	f9 81       	ldd	r31, Y+1	; 0x01
     e64:	12 95       	swap	r17
     e66:	10 7f       	andi	r17, 0xF0	; 240
     e68:	e1 2a       	or	r14, r17
     e6a:	e7 82       	std	Z+7, r14	; 0x07
     e6c:	88 81       	ld	r24, Y
     e6e:	99 81       	ldd	r25, Y+1	; 0x01
     e70:	b7 de       	rcall	.-658    	; 0xbe0 <set_usart_txrx_direction>
     e72:	df 91       	pop	r29
     e74:	cf 91       	pop	r28
     e76:	1f 91       	pop	r17
     e78:	0f 91       	pop	r16
     e7a:	ff 90       	pop	r15
     e7c:	ef 90       	pop	r14
     e7e:	cf 90       	pop	r12
     e80:	bf 90       	pop	r11
     e82:	af 90       	pop	r10
     e84:	9f 90       	pop	r9
     e86:	8f 90       	pop	r8
     e88:	7f 90       	pop	r7
     e8a:	6f 90       	pop	r6
     e8c:	5f 90       	pop	r5
     e8e:	4f 90       	pop	r4
     e90:	3f 90       	pop	r3
     e92:	2f 90       	pop	r2
     e94:	08 95       	ret

00000e96 <USART_InterruptDriver_Initialize>:
     e96:	fc 01       	movw	r30, r24
     e98:	60 83       	st	Z, r22
     e9a:	71 83       	std	Z+1, r23	; 0x01
     e9c:	42 83       	std	Z+2, r20	; 0x02
     e9e:	ec 57       	subi	r30, 0x7C	; 124
     ea0:	ff 4f       	sbci	r31, 0xFF	; 255
     ea2:	10 82       	st	Z, r1
     ea4:	fc 01       	movw	r30, r24
     ea6:	ed 57       	subi	r30, 0x7D	; 125
     ea8:	ff 4f       	sbci	r31, 0xFF	; 255
     eaa:	10 82       	st	Z, r1
     eac:	fc 01       	movw	r30, r24
     eae:	ea 57       	subi	r30, 0x7A	; 122
     eb0:	ff 4f       	sbci	r31, 0xFF	; 255
     eb2:	10 82       	st	Z, r1
     eb4:	fc 01       	movw	r30, r24
     eb6:	eb 57       	subi	r30, 0x7B	; 123
     eb8:	ff 4f       	sbci	r31, 0xFF	; 255
     eba:	10 82       	st	Z, r1
     ebc:	08 95       	ret

00000ebe <USART_TXBuffer_FreeSpace>:
     ebe:	fc 01       	movw	r30, r24
     ec0:	eb 57       	subi	r30, 0x7B	; 123
     ec2:	ff 4f       	sbci	r31, 0xFF	; 255
     ec4:	20 81       	ld	r18, Z
     ec6:	fc 01       	movw	r30, r24
     ec8:	ea 57       	subi	r30, 0x7A	; 122
     eca:	ff 4f       	sbci	r31, 0xFF	; 255
     ecc:	90 81       	ld	r25, Z
     ece:	2f 5f       	subi	r18, 0xFF	; 255
     ed0:	2f 73       	andi	r18, 0x3F	; 63
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	29 13       	cpse	r18, r25
     ed6:	01 c0       	rjmp	.+2      	; 0xeda <USART_TXBuffer_FreeSpace+0x1c>
     ed8:	80 e0       	ldi	r24, 0x00	; 0
     eda:	08 95       	ret

00000edc <USART_TXBuffer_PutByte>:
     edc:	1f 93       	push	r17
     ede:	cf 93       	push	r28
     ee0:	df 93       	push	r29
     ee2:	ec 01       	movw	r28, r24
     ee4:	16 2f       	mov	r17, r22
     ee6:	eb df       	rcall	.-42     	; 0xebe <USART_TXBuffer_FreeSpace>
     ee8:	88 23       	and	r24, r24
     eea:	a1 f0       	breq	.+40     	; 0xf14 <USART_TXBuffer_PutByte+0x38>
     eec:	fe 01       	movw	r30, r28
     eee:	eb 57       	subi	r30, 0x7B	; 123
     ef0:	ff 4f       	sbci	r31, 0xFF	; 255
     ef2:	90 81       	ld	r25, Z
     ef4:	de 01       	movw	r26, r28
     ef6:	a9 0f       	add	r26, r25
     ef8:	b1 1d       	adc	r27, r1
     efa:	ad 5b       	subi	r26, 0xBD	; 189
     efc:	bf 4f       	sbci	r27, 0xFF	; 255
     efe:	1c 93       	st	X, r17
     f00:	9f 5f       	subi	r25, 0xFF	; 255
     f02:	9f 73       	andi	r25, 0x3F	; 63
     f04:	90 83       	st	Z, r25
     f06:	e8 81       	ld	r30, Y
     f08:	f9 81       	ldd	r31, Y+1	; 0x01
     f0a:	93 81       	ldd	r25, Z+3	; 0x03
     f0c:	9c 7f       	andi	r25, 0xFC	; 252
     f0e:	2a 81       	ldd	r18, Y+2	; 0x02
     f10:	92 2b       	or	r25, r18
     f12:	93 83       	std	Z+3, r25	; 0x03
     f14:	df 91       	pop	r29
     f16:	cf 91       	pop	r28
     f18:	1f 91       	pop	r17
     f1a:	08 95       	ret

00000f1c <USART_RXBufferData_Available>:
     f1c:	fc 01       	movw	r30, r24
     f1e:	ed 57       	subi	r30, 0x7D	; 125
     f20:	ff 4f       	sbci	r31, 0xFF	; 255
     f22:	20 81       	ld	r18, Z
     f24:	fc 01       	movw	r30, r24
     f26:	ec 57       	subi	r30, 0x7C	; 124
     f28:	ff 4f       	sbci	r31, 0xFF	; 255
     f2a:	90 81       	ld	r25, Z
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	29 13       	cpse	r18, r25
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <USART_RXBufferData_Available+0x18>
     f32:	80 e0       	ldi	r24, 0x00	; 0
     f34:	08 95       	ret

00000f36 <USART_RXBuffer_GetByte>:
     f36:	fc 01       	movw	r30, r24
     f38:	ec 57       	subi	r30, 0x7C	; 124
     f3a:	ff 4f       	sbci	r31, 0xFF	; 255
     f3c:	20 81       	ld	r18, Z
     f3e:	dc 01       	movw	r26, r24
     f40:	a2 0f       	add	r26, r18
     f42:	b1 1d       	adc	r27, r1
     f44:	13 96       	adiw	r26, 0x03	; 3
     f46:	8c 91       	ld	r24, X
     f48:	90 81       	ld	r25, Z
     f4a:	9f 5f       	subi	r25, 0xFF	; 255
     f4c:	9f 73       	andi	r25, 0x3F	; 63
     f4e:	90 83       	st	Z, r25
     f50:	08 95       	ret

00000f52 <USART_RXComplete>:
     f52:	fc 01       	movw	r30, r24
     f54:	ed 57       	subi	r30, 0x7D	; 125
     f56:	ff 4f       	sbci	r31, 0xFF	; 255
     f58:	20 81       	ld	r18, Z
     f5a:	2f 5f       	subi	r18, 0xFF	; 255
     f5c:	2f 73       	andi	r18, 0x3F	; 63
     f5e:	fc 01       	movw	r30, r24
     f60:	ec 57       	subi	r30, 0x7C	; 124
     f62:	ff 4f       	sbci	r31, 0xFF	; 255
     f64:	30 81       	ld	r19, Z
     f66:	dc 01       	movw	r26, r24
     f68:	ed 91       	ld	r30, X+
     f6a:	fc 91       	ld	r31, X
     f6c:	11 97       	sbiw	r26, 0x01	; 1
     f6e:	40 81       	ld	r20, Z
     f70:	23 17       	cp	r18, r19
     f72:	59 f0       	breq	.+22     	; 0xf8a <USART_RXComplete+0x38>
     f74:	fc 01       	movw	r30, r24
     f76:	ed 57       	subi	r30, 0x7D	; 125
     f78:	ff 4f       	sbci	r31, 0xFF	; 255
     f7a:	30 81       	ld	r19, Z
     f7c:	a3 0f       	add	r26, r19
     f7e:	b1 1d       	adc	r27, r1
     f80:	13 96       	adiw	r26, 0x03	; 3
     f82:	4c 93       	st	X, r20
     f84:	20 83       	st	Z, r18
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	08 95       	ret
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	08 95       	ret

00000f8e <USART_DataRegEmpty>:
     f8e:	cf 93       	push	r28
     f90:	df 93       	push	r29
     f92:	fc 01       	movw	r30, r24
     f94:	ea 57       	subi	r30, 0x7A	; 122
     f96:	ff 4f       	sbci	r31, 0xFF	; 255
     f98:	20 81       	ld	r18, Z
     f9a:	fc 01       	movw	r30, r24
     f9c:	eb 57       	subi	r30, 0x7B	; 123
     f9e:	ff 4f       	sbci	r31, 0xFF	; 255
     fa0:	30 81       	ld	r19, Z
     fa2:	32 13       	cpse	r19, r18
     fa4:	07 c0       	rjmp	.+14     	; 0xfb4 <USART_DataRegEmpty+0x26>
     fa6:	dc 01       	movw	r26, r24
     fa8:	ed 91       	ld	r30, X+
     faa:	fc 91       	ld	r31, X
     fac:	83 81       	ldd	r24, Z+3	; 0x03
     fae:	8c 7f       	andi	r24, 0xFC	; 252
     fb0:	83 83       	std	Z+3, r24	; 0x03
     fb2:	12 c0       	rjmp	.+36     	; 0xfd8 <USART_DataRegEmpty+0x4a>
     fb4:	fc 01       	movw	r30, r24
     fb6:	ea 57       	subi	r30, 0x7A	; 122
     fb8:	ff 4f       	sbci	r31, 0xFF	; 255
     fba:	20 81       	ld	r18, Z
     fbc:	dc 01       	movw	r26, r24
     fbe:	a2 0f       	add	r26, r18
     fc0:	b1 1d       	adc	r27, r1
     fc2:	ad 5b       	subi	r26, 0xBD	; 189
     fc4:	bf 4f       	sbci	r27, 0xFF	; 255
     fc6:	2c 91       	ld	r18, X
     fc8:	ec 01       	movw	r28, r24
     fca:	a8 81       	ld	r26, Y
     fcc:	b9 81       	ldd	r27, Y+1	; 0x01
     fce:	2c 93       	st	X, r18
     fd0:	80 81       	ld	r24, Z
     fd2:	8f 5f       	subi	r24, 0xFF	; 255
     fd4:	8f 73       	andi	r24, 0x3F	; 63
     fd6:	80 83       	st	Z, r24
     fd8:	df 91       	pop	r29
     fda:	cf 91       	pop	r28
     fdc:	08 95       	ret

00000fde <__subsf3>:
     fde:	50 58       	subi	r21, 0x80	; 128

00000fe0 <__addsf3>:
     fe0:	bb 27       	eor	r27, r27
     fe2:	aa 27       	eor	r26, r26
     fe4:	0e d0       	rcall	.+28     	; 0x1002 <__addsf3x>
     fe6:	48 c1       	rjmp	.+656    	; 0x1278 <__fp_round>
     fe8:	39 d1       	rcall	.+626    	; 0x125c <__fp_pscA>
     fea:	30 f0       	brcs	.+12     	; 0xff8 <__addsf3+0x18>
     fec:	3e d1       	rcall	.+636    	; 0x126a <__fp_pscB>
     fee:	20 f0       	brcs	.+8      	; 0xff8 <__addsf3+0x18>
     ff0:	31 f4       	brne	.+12     	; 0xffe <__addsf3+0x1e>
     ff2:	9f 3f       	cpi	r25, 0xFF	; 255
     ff4:	11 f4       	brne	.+4      	; 0xffa <__addsf3+0x1a>
     ff6:	1e f4       	brtc	.+6      	; 0xffe <__addsf3+0x1e>
     ff8:	2e c1       	rjmp	.+604    	; 0x1256 <__fp_nan>
     ffa:	0e f4       	brtc	.+2      	; 0xffe <__addsf3+0x1e>
     ffc:	e0 95       	com	r30
     ffe:	e7 fb       	bst	r30, 7
    1000:	24 c1       	rjmp	.+584    	; 0x124a <__fp_inf>

00001002 <__addsf3x>:
    1002:	e9 2f       	mov	r30, r25
    1004:	4a d1       	rcall	.+660    	; 0x129a <__fp_split3>
    1006:	80 f3       	brcs	.-32     	; 0xfe8 <__addsf3+0x8>
    1008:	ba 17       	cp	r27, r26
    100a:	62 07       	cpc	r22, r18
    100c:	73 07       	cpc	r23, r19
    100e:	84 07       	cpc	r24, r20
    1010:	95 07       	cpc	r25, r21
    1012:	18 f0       	brcs	.+6      	; 0x101a <__addsf3x+0x18>
    1014:	71 f4       	brne	.+28     	; 0x1032 <__addsf3x+0x30>
    1016:	9e f5       	brtc	.+102    	; 0x107e <__addsf3x+0x7c>
    1018:	62 c1       	rjmp	.+708    	; 0x12de <__fp_zero>
    101a:	0e f4       	brtc	.+2      	; 0x101e <__addsf3x+0x1c>
    101c:	e0 95       	com	r30
    101e:	0b 2e       	mov	r0, r27
    1020:	ba 2f       	mov	r27, r26
    1022:	a0 2d       	mov	r26, r0
    1024:	0b 01       	movw	r0, r22
    1026:	b9 01       	movw	r22, r18
    1028:	90 01       	movw	r18, r0
    102a:	0c 01       	movw	r0, r24
    102c:	ca 01       	movw	r24, r20
    102e:	a0 01       	movw	r20, r0
    1030:	11 24       	eor	r1, r1
    1032:	ff 27       	eor	r31, r31
    1034:	59 1b       	sub	r21, r25
    1036:	99 f0       	breq	.+38     	; 0x105e <__addsf3x+0x5c>
    1038:	59 3f       	cpi	r21, 0xF9	; 249
    103a:	50 f4       	brcc	.+20     	; 0x1050 <__addsf3x+0x4e>
    103c:	50 3e       	cpi	r21, 0xE0	; 224
    103e:	68 f1       	brcs	.+90     	; 0x109a <__addsf3x+0x98>
    1040:	1a 16       	cp	r1, r26
    1042:	f0 40       	sbci	r31, 0x00	; 0
    1044:	a2 2f       	mov	r26, r18
    1046:	23 2f       	mov	r18, r19
    1048:	34 2f       	mov	r19, r20
    104a:	44 27       	eor	r20, r20
    104c:	58 5f       	subi	r21, 0xF8	; 248
    104e:	f3 cf       	rjmp	.-26     	; 0x1036 <__addsf3x+0x34>
    1050:	46 95       	lsr	r20
    1052:	37 95       	ror	r19
    1054:	27 95       	ror	r18
    1056:	a7 95       	ror	r26
    1058:	f0 40       	sbci	r31, 0x00	; 0
    105a:	53 95       	inc	r21
    105c:	c9 f7       	brne	.-14     	; 0x1050 <__addsf3x+0x4e>
    105e:	7e f4       	brtc	.+30     	; 0x107e <__addsf3x+0x7c>
    1060:	1f 16       	cp	r1, r31
    1062:	ba 0b       	sbc	r27, r26
    1064:	62 0b       	sbc	r22, r18
    1066:	73 0b       	sbc	r23, r19
    1068:	84 0b       	sbc	r24, r20
    106a:	ba f0       	brmi	.+46     	; 0x109a <__addsf3x+0x98>
    106c:	91 50       	subi	r25, 0x01	; 1
    106e:	a1 f0       	breq	.+40     	; 0x1098 <__addsf3x+0x96>
    1070:	ff 0f       	add	r31, r31
    1072:	bb 1f       	adc	r27, r27
    1074:	66 1f       	adc	r22, r22
    1076:	77 1f       	adc	r23, r23
    1078:	88 1f       	adc	r24, r24
    107a:	c2 f7       	brpl	.-16     	; 0x106c <__addsf3x+0x6a>
    107c:	0e c0       	rjmp	.+28     	; 0x109a <__addsf3x+0x98>
    107e:	ba 0f       	add	r27, r26
    1080:	62 1f       	adc	r22, r18
    1082:	73 1f       	adc	r23, r19
    1084:	84 1f       	adc	r24, r20
    1086:	48 f4       	brcc	.+18     	; 0x109a <__addsf3x+0x98>
    1088:	87 95       	ror	r24
    108a:	77 95       	ror	r23
    108c:	67 95       	ror	r22
    108e:	b7 95       	ror	r27
    1090:	f7 95       	ror	r31
    1092:	9e 3f       	cpi	r25, 0xFE	; 254
    1094:	08 f0       	brcs	.+2      	; 0x1098 <__addsf3x+0x96>
    1096:	b3 cf       	rjmp	.-154    	; 0xffe <__addsf3+0x1e>
    1098:	93 95       	inc	r25
    109a:	88 0f       	add	r24, r24
    109c:	08 f0       	brcs	.+2      	; 0x10a0 <__addsf3x+0x9e>
    109e:	99 27       	eor	r25, r25
    10a0:	ee 0f       	add	r30, r30
    10a2:	97 95       	ror	r25
    10a4:	87 95       	ror	r24
    10a6:	08 95       	ret

000010a8 <__divsf3>:
    10a8:	0c d0       	rcall	.+24     	; 0x10c2 <__divsf3x>
    10aa:	e6 c0       	rjmp	.+460    	; 0x1278 <__fp_round>
    10ac:	de d0       	rcall	.+444    	; 0x126a <__fp_pscB>
    10ae:	40 f0       	brcs	.+16     	; 0x10c0 <__divsf3+0x18>
    10b0:	d5 d0       	rcall	.+426    	; 0x125c <__fp_pscA>
    10b2:	30 f0       	brcs	.+12     	; 0x10c0 <__divsf3+0x18>
    10b4:	21 f4       	brne	.+8      	; 0x10be <__divsf3+0x16>
    10b6:	5f 3f       	cpi	r21, 0xFF	; 255
    10b8:	19 f0       	breq	.+6      	; 0x10c0 <__divsf3+0x18>
    10ba:	c7 c0       	rjmp	.+398    	; 0x124a <__fp_inf>
    10bc:	51 11       	cpse	r21, r1
    10be:	10 c1       	rjmp	.+544    	; 0x12e0 <__fp_szero>
    10c0:	ca c0       	rjmp	.+404    	; 0x1256 <__fp_nan>

000010c2 <__divsf3x>:
    10c2:	eb d0       	rcall	.+470    	; 0x129a <__fp_split3>
    10c4:	98 f3       	brcs	.-26     	; 0x10ac <__divsf3+0x4>

000010c6 <__divsf3_pse>:
    10c6:	99 23       	and	r25, r25
    10c8:	c9 f3       	breq	.-14     	; 0x10bc <__divsf3+0x14>
    10ca:	55 23       	and	r21, r21
    10cc:	b1 f3       	breq	.-20     	; 0x10ba <__divsf3+0x12>
    10ce:	95 1b       	sub	r25, r21
    10d0:	55 0b       	sbc	r21, r21
    10d2:	bb 27       	eor	r27, r27
    10d4:	aa 27       	eor	r26, r26
    10d6:	62 17       	cp	r22, r18
    10d8:	73 07       	cpc	r23, r19
    10da:	84 07       	cpc	r24, r20
    10dc:	38 f0       	brcs	.+14     	; 0x10ec <__divsf3_pse+0x26>
    10de:	9f 5f       	subi	r25, 0xFF	; 255
    10e0:	5f 4f       	sbci	r21, 0xFF	; 255
    10e2:	22 0f       	add	r18, r18
    10e4:	33 1f       	adc	r19, r19
    10e6:	44 1f       	adc	r20, r20
    10e8:	aa 1f       	adc	r26, r26
    10ea:	a9 f3       	breq	.-22     	; 0x10d6 <__divsf3_pse+0x10>
    10ec:	33 d0       	rcall	.+102    	; 0x1154 <__divsf3_pse+0x8e>
    10ee:	0e 2e       	mov	r0, r30
    10f0:	3a f0       	brmi	.+14     	; 0x1100 <__divsf3_pse+0x3a>
    10f2:	e0 e8       	ldi	r30, 0x80	; 128
    10f4:	30 d0       	rcall	.+96     	; 0x1156 <__divsf3_pse+0x90>
    10f6:	91 50       	subi	r25, 0x01	; 1
    10f8:	50 40       	sbci	r21, 0x00	; 0
    10fa:	e6 95       	lsr	r30
    10fc:	00 1c       	adc	r0, r0
    10fe:	ca f7       	brpl	.-14     	; 0x10f2 <__divsf3_pse+0x2c>
    1100:	29 d0       	rcall	.+82     	; 0x1154 <__divsf3_pse+0x8e>
    1102:	fe 2f       	mov	r31, r30
    1104:	27 d0       	rcall	.+78     	; 0x1154 <__divsf3_pse+0x8e>
    1106:	66 0f       	add	r22, r22
    1108:	77 1f       	adc	r23, r23
    110a:	88 1f       	adc	r24, r24
    110c:	bb 1f       	adc	r27, r27
    110e:	26 17       	cp	r18, r22
    1110:	37 07       	cpc	r19, r23
    1112:	48 07       	cpc	r20, r24
    1114:	ab 07       	cpc	r26, r27
    1116:	b0 e8       	ldi	r27, 0x80	; 128
    1118:	09 f0       	breq	.+2      	; 0x111c <__divsf3_pse+0x56>
    111a:	bb 0b       	sbc	r27, r27
    111c:	80 2d       	mov	r24, r0
    111e:	bf 01       	movw	r22, r30
    1120:	ff 27       	eor	r31, r31
    1122:	93 58       	subi	r25, 0x83	; 131
    1124:	5f 4f       	sbci	r21, 0xFF	; 255
    1126:	2a f0       	brmi	.+10     	; 0x1132 <__divsf3_pse+0x6c>
    1128:	9e 3f       	cpi	r25, 0xFE	; 254
    112a:	51 05       	cpc	r21, r1
    112c:	68 f0       	brcs	.+26     	; 0x1148 <__divsf3_pse+0x82>
    112e:	8d c0       	rjmp	.+282    	; 0x124a <__fp_inf>
    1130:	d7 c0       	rjmp	.+430    	; 0x12e0 <__fp_szero>
    1132:	5f 3f       	cpi	r21, 0xFF	; 255
    1134:	ec f3       	brlt	.-6      	; 0x1130 <__divsf3_pse+0x6a>
    1136:	98 3e       	cpi	r25, 0xE8	; 232
    1138:	dc f3       	brlt	.-10     	; 0x1130 <__divsf3_pse+0x6a>
    113a:	86 95       	lsr	r24
    113c:	77 95       	ror	r23
    113e:	67 95       	ror	r22
    1140:	b7 95       	ror	r27
    1142:	f7 95       	ror	r31
    1144:	9f 5f       	subi	r25, 0xFF	; 255
    1146:	c9 f7       	brne	.-14     	; 0x113a <__divsf3_pse+0x74>
    1148:	88 0f       	add	r24, r24
    114a:	91 1d       	adc	r25, r1
    114c:	96 95       	lsr	r25
    114e:	87 95       	ror	r24
    1150:	97 f9       	bld	r25, 7
    1152:	08 95       	ret
    1154:	e1 e0       	ldi	r30, 0x01	; 1
    1156:	66 0f       	add	r22, r22
    1158:	77 1f       	adc	r23, r23
    115a:	88 1f       	adc	r24, r24
    115c:	bb 1f       	adc	r27, r27
    115e:	62 17       	cp	r22, r18
    1160:	73 07       	cpc	r23, r19
    1162:	84 07       	cpc	r24, r20
    1164:	ba 07       	cpc	r27, r26
    1166:	20 f0       	brcs	.+8      	; 0x1170 <__divsf3_pse+0xaa>
    1168:	62 1b       	sub	r22, r18
    116a:	73 0b       	sbc	r23, r19
    116c:	84 0b       	sbc	r24, r20
    116e:	ba 0b       	sbc	r27, r26
    1170:	ee 1f       	adc	r30, r30
    1172:	88 f7       	brcc	.-30     	; 0x1156 <__divsf3_pse+0x90>
    1174:	e0 95       	com	r30
    1176:	08 95       	ret

00001178 <__fixunssfsi>:
    1178:	98 d0       	rcall	.+304    	; 0x12aa <__fp_splitA>
    117a:	88 f0       	brcs	.+34     	; 0x119e <__fixunssfsi+0x26>
    117c:	9f 57       	subi	r25, 0x7F	; 127
    117e:	90 f0       	brcs	.+36     	; 0x11a4 <__fixunssfsi+0x2c>
    1180:	b9 2f       	mov	r27, r25
    1182:	99 27       	eor	r25, r25
    1184:	b7 51       	subi	r27, 0x17	; 23
    1186:	a0 f0       	brcs	.+40     	; 0x11b0 <__fixunssfsi+0x38>
    1188:	d1 f0       	breq	.+52     	; 0x11be <__fixunssfsi+0x46>
    118a:	66 0f       	add	r22, r22
    118c:	77 1f       	adc	r23, r23
    118e:	88 1f       	adc	r24, r24
    1190:	99 1f       	adc	r25, r25
    1192:	1a f0       	brmi	.+6      	; 0x119a <__fixunssfsi+0x22>
    1194:	ba 95       	dec	r27
    1196:	c9 f7       	brne	.-14     	; 0x118a <__fixunssfsi+0x12>
    1198:	12 c0       	rjmp	.+36     	; 0x11be <__fixunssfsi+0x46>
    119a:	b1 30       	cpi	r27, 0x01	; 1
    119c:	81 f0       	breq	.+32     	; 0x11be <__fixunssfsi+0x46>
    119e:	9f d0       	rcall	.+318    	; 0x12de <__fp_zero>
    11a0:	b1 e0       	ldi	r27, 0x01	; 1
    11a2:	08 95       	ret
    11a4:	9c c0       	rjmp	.+312    	; 0x12de <__fp_zero>
    11a6:	67 2f       	mov	r22, r23
    11a8:	78 2f       	mov	r23, r24
    11aa:	88 27       	eor	r24, r24
    11ac:	b8 5f       	subi	r27, 0xF8	; 248
    11ae:	39 f0       	breq	.+14     	; 0x11be <__fixunssfsi+0x46>
    11b0:	b9 3f       	cpi	r27, 0xF9	; 249
    11b2:	cc f3       	brlt	.-14     	; 0x11a6 <__fixunssfsi+0x2e>
    11b4:	86 95       	lsr	r24
    11b6:	77 95       	ror	r23
    11b8:	67 95       	ror	r22
    11ba:	b3 95       	inc	r27
    11bc:	d9 f7       	brne	.-10     	; 0x11b4 <__fixunssfsi+0x3c>
    11be:	3e f4       	brtc	.+14     	; 0x11ce <__fixunssfsi+0x56>
    11c0:	90 95       	com	r25
    11c2:	80 95       	com	r24
    11c4:	70 95       	com	r23
    11c6:	61 95       	neg	r22
    11c8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ca:	8f 4f       	sbci	r24, 0xFF	; 255
    11cc:	9f 4f       	sbci	r25, 0xFF	; 255
    11ce:	08 95       	ret

000011d0 <__floatunsisf>:
    11d0:	e8 94       	clt
    11d2:	09 c0       	rjmp	.+18     	; 0x11e6 <__floatsisf+0x12>

000011d4 <__floatsisf>:
    11d4:	97 fb       	bst	r25, 7
    11d6:	3e f4       	brtc	.+14     	; 0x11e6 <__floatsisf+0x12>
    11d8:	90 95       	com	r25
    11da:	80 95       	com	r24
    11dc:	70 95       	com	r23
    11de:	61 95       	neg	r22
    11e0:	7f 4f       	sbci	r23, 0xFF	; 255
    11e2:	8f 4f       	sbci	r24, 0xFF	; 255
    11e4:	9f 4f       	sbci	r25, 0xFF	; 255
    11e6:	99 23       	and	r25, r25
    11e8:	a9 f0       	breq	.+42     	; 0x1214 <__floatsisf+0x40>
    11ea:	f9 2f       	mov	r31, r25
    11ec:	96 e9       	ldi	r25, 0x96	; 150
    11ee:	bb 27       	eor	r27, r27
    11f0:	93 95       	inc	r25
    11f2:	f6 95       	lsr	r31
    11f4:	87 95       	ror	r24
    11f6:	77 95       	ror	r23
    11f8:	67 95       	ror	r22
    11fa:	b7 95       	ror	r27
    11fc:	f1 11       	cpse	r31, r1
    11fe:	f8 cf       	rjmp	.-16     	; 0x11f0 <__floatsisf+0x1c>
    1200:	fa f4       	brpl	.+62     	; 0x1240 <__floatsisf+0x6c>
    1202:	bb 0f       	add	r27, r27
    1204:	11 f4       	brne	.+4      	; 0x120a <__floatsisf+0x36>
    1206:	60 ff       	sbrs	r22, 0
    1208:	1b c0       	rjmp	.+54     	; 0x1240 <__floatsisf+0x6c>
    120a:	6f 5f       	subi	r22, 0xFF	; 255
    120c:	7f 4f       	sbci	r23, 0xFF	; 255
    120e:	8f 4f       	sbci	r24, 0xFF	; 255
    1210:	9f 4f       	sbci	r25, 0xFF	; 255
    1212:	16 c0       	rjmp	.+44     	; 0x1240 <__floatsisf+0x6c>
    1214:	88 23       	and	r24, r24
    1216:	11 f0       	breq	.+4      	; 0x121c <__floatsisf+0x48>
    1218:	96 e9       	ldi	r25, 0x96	; 150
    121a:	11 c0       	rjmp	.+34     	; 0x123e <__floatsisf+0x6a>
    121c:	77 23       	and	r23, r23
    121e:	21 f0       	breq	.+8      	; 0x1228 <__floatsisf+0x54>
    1220:	9e e8       	ldi	r25, 0x8E	; 142
    1222:	87 2f       	mov	r24, r23
    1224:	76 2f       	mov	r23, r22
    1226:	05 c0       	rjmp	.+10     	; 0x1232 <__floatsisf+0x5e>
    1228:	66 23       	and	r22, r22
    122a:	71 f0       	breq	.+28     	; 0x1248 <__floatsisf+0x74>
    122c:	96 e8       	ldi	r25, 0x86	; 134
    122e:	86 2f       	mov	r24, r22
    1230:	70 e0       	ldi	r23, 0x00	; 0
    1232:	60 e0       	ldi	r22, 0x00	; 0
    1234:	2a f0       	brmi	.+10     	; 0x1240 <__floatsisf+0x6c>
    1236:	9a 95       	dec	r25
    1238:	66 0f       	add	r22, r22
    123a:	77 1f       	adc	r23, r23
    123c:	88 1f       	adc	r24, r24
    123e:	da f7       	brpl	.-10     	; 0x1236 <__floatsisf+0x62>
    1240:	88 0f       	add	r24, r24
    1242:	96 95       	lsr	r25
    1244:	87 95       	ror	r24
    1246:	97 f9       	bld	r25, 7
    1248:	08 95       	ret

0000124a <__fp_inf>:
    124a:	97 f9       	bld	r25, 7
    124c:	9f 67       	ori	r25, 0x7F	; 127
    124e:	80 e8       	ldi	r24, 0x80	; 128
    1250:	70 e0       	ldi	r23, 0x00	; 0
    1252:	60 e0       	ldi	r22, 0x00	; 0
    1254:	08 95       	ret

00001256 <__fp_nan>:
    1256:	9f ef       	ldi	r25, 0xFF	; 255
    1258:	80 ec       	ldi	r24, 0xC0	; 192
    125a:	08 95       	ret

0000125c <__fp_pscA>:
    125c:	00 24       	eor	r0, r0
    125e:	0a 94       	dec	r0
    1260:	16 16       	cp	r1, r22
    1262:	17 06       	cpc	r1, r23
    1264:	18 06       	cpc	r1, r24
    1266:	09 06       	cpc	r0, r25
    1268:	08 95       	ret

0000126a <__fp_pscB>:
    126a:	00 24       	eor	r0, r0
    126c:	0a 94       	dec	r0
    126e:	12 16       	cp	r1, r18
    1270:	13 06       	cpc	r1, r19
    1272:	14 06       	cpc	r1, r20
    1274:	05 06       	cpc	r0, r21
    1276:	08 95       	ret

00001278 <__fp_round>:
    1278:	09 2e       	mov	r0, r25
    127a:	03 94       	inc	r0
    127c:	00 0c       	add	r0, r0
    127e:	11 f4       	brne	.+4      	; 0x1284 <__fp_round+0xc>
    1280:	88 23       	and	r24, r24
    1282:	52 f0       	brmi	.+20     	; 0x1298 <__fp_round+0x20>
    1284:	bb 0f       	add	r27, r27
    1286:	40 f4       	brcc	.+16     	; 0x1298 <__fp_round+0x20>
    1288:	bf 2b       	or	r27, r31
    128a:	11 f4       	brne	.+4      	; 0x1290 <__fp_round+0x18>
    128c:	60 ff       	sbrs	r22, 0
    128e:	04 c0       	rjmp	.+8      	; 0x1298 <__fp_round+0x20>
    1290:	6f 5f       	subi	r22, 0xFF	; 255
    1292:	7f 4f       	sbci	r23, 0xFF	; 255
    1294:	8f 4f       	sbci	r24, 0xFF	; 255
    1296:	9f 4f       	sbci	r25, 0xFF	; 255
    1298:	08 95       	ret

0000129a <__fp_split3>:
    129a:	57 fd       	sbrc	r21, 7
    129c:	90 58       	subi	r25, 0x80	; 128
    129e:	44 0f       	add	r20, r20
    12a0:	55 1f       	adc	r21, r21
    12a2:	59 f0       	breq	.+22     	; 0x12ba <__fp_splitA+0x10>
    12a4:	5f 3f       	cpi	r21, 0xFF	; 255
    12a6:	71 f0       	breq	.+28     	; 0x12c4 <__fp_splitA+0x1a>
    12a8:	47 95       	ror	r20

000012aa <__fp_splitA>:
    12aa:	88 0f       	add	r24, r24
    12ac:	97 fb       	bst	r25, 7
    12ae:	99 1f       	adc	r25, r25
    12b0:	61 f0       	breq	.+24     	; 0x12ca <__fp_splitA+0x20>
    12b2:	9f 3f       	cpi	r25, 0xFF	; 255
    12b4:	79 f0       	breq	.+30     	; 0x12d4 <__fp_splitA+0x2a>
    12b6:	87 95       	ror	r24
    12b8:	08 95       	ret
    12ba:	12 16       	cp	r1, r18
    12bc:	13 06       	cpc	r1, r19
    12be:	14 06       	cpc	r1, r20
    12c0:	55 1f       	adc	r21, r21
    12c2:	f2 cf       	rjmp	.-28     	; 0x12a8 <__fp_split3+0xe>
    12c4:	46 95       	lsr	r20
    12c6:	f1 df       	rcall	.-30     	; 0x12aa <__fp_splitA>
    12c8:	08 c0       	rjmp	.+16     	; 0x12da <__fp_splitA+0x30>
    12ca:	16 16       	cp	r1, r22
    12cc:	17 06       	cpc	r1, r23
    12ce:	18 06       	cpc	r1, r24
    12d0:	99 1f       	adc	r25, r25
    12d2:	f1 cf       	rjmp	.-30     	; 0x12b6 <__fp_splitA+0xc>
    12d4:	86 95       	lsr	r24
    12d6:	71 05       	cpc	r23, r1
    12d8:	61 05       	cpc	r22, r1
    12da:	08 94       	sec
    12dc:	08 95       	ret

000012de <__fp_zero>:
    12de:	e8 94       	clt

000012e0 <__fp_szero>:
    12e0:	bb 27       	eor	r27, r27
    12e2:	66 27       	eor	r22, r22
    12e4:	77 27       	eor	r23, r23
    12e6:	cb 01       	movw	r24, r22
    12e8:	97 f9       	bld	r25, 7
    12ea:	08 95       	ret

000012ec <__mulsf3>:
    12ec:	0b d0       	rcall	.+22     	; 0x1304 <__mulsf3x>
    12ee:	c4 cf       	rjmp	.-120    	; 0x1278 <__fp_round>
    12f0:	b5 df       	rcall	.-150    	; 0x125c <__fp_pscA>
    12f2:	28 f0       	brcs	.+10     	; 0x12fe <__mulsf3+0x12>
    12f4:	ba df       	rcall	.-140    	; 0x126a <__fp_pscB>
    12f6:	18 f0       	brcs	.+6      	; 0x12fe <__mulsf3+0x12>
    12f8:	95 23       	and	r25, r21
    12fa:	09 f0       	breq	.+2      	; 0x12fe <__mulsf3+0x12>
    12fc:	a6 cf       	rjmp	.-180    	; 0x124a <__fp_inf>
    12fe:	ab cf       	rjmp	.-170    	; 0x1256 <__fp_nan>
    1300:	11 24       	eor	r1, r1
    1302:	ee cf       	rjmp	.-36     	; 0x12e0 <__fp_szero>

00001304 <__mulsf3x>:
    1304:	ca df       	rcall	.-108    	; 0x129a <__fp_split3>
    1306:	a0 f3       	brcs	.-24     	; 0x12f0 <__mulsf3+0x4>

00001308 <__mulsf3_pse>:
    1308:	95 9f       	mul	r25, r21
    130a:	d1 f3       	breq	.-12     	; 0x1300 <__mulsf3+0x14>
    130c:	95 0f       	add	r25, r21
    130e:	50 e0       	ldi	r21, 0x00	; 0
    1310:	55 1f       	adc	r21, r21
    1312:	62 9f       	mul	r22, r18
    1314:	f0 01       	movw	r30, r0
    1316:	72 9f       	mul	r23, r18
    1318:	bb 27       	eor	r27, r27
    131a:	f0 0d       	add	r31, r0
    131c:	b1 1d       	adc	r27, r1
    131e:	63 9f       	mul	r22, r19
    1320:	aa 27       	eor	r26, r26
    1322:	f0 0d       	add	r31, r0
    1324:	b1 1d       	adc	r27, r1
    1326:	aa 1f       	adc	r26, r26
    1328:	64 9f       	mul	r22, r20
    132a:	66 27       	eor	r22, r22
    132c:	b0 0d       	add	r27, r0
    132e:	a1 1d       	adc	r26, r1
    1330:	66 1f       	adc	r22, r22
    1332:	82 9f       	mul	r24, r18
    1334:	22 27       	eor	r18, r18
    1336:	b0 0d       	add	r27, r0
    1338:	a1 1d       	adc	r26, r1
    133a:	62 1f       	adc	r22, r18
    133c:	73 9f       	mul	r23, r19
    133e:	b0 0d       	add	r27, r0
    1340:	a1 1d       	adc	r26, r1
    1342:	62 1f       	adc	r22, r18
    1344:	83 9f       	mul	r24, r19
    1346:	a0 0d       	add	r26, r0
    1348:	61 1d       	adc	r22, r1
    134a:	22 1f       	adc	r18, r18
    134c:	74 9f       	mul	r23, r20
    134e:	33 27       	eor	r19, r19
    1350:	a0 0d       	add	r26, r0
    1352:	61 1d       	adc	r22, r1
    1354:	23 1f       	adc	r18, r19
    1356:	84 9f       	mul	r24, r20
    1358:	60 0d       	add	r22, r0
    135a:	21 1d       	adc	r18, r1
    135c:	82 2f       	mov	r24, r18
    135e:	76 2f       	mov	r23, r22
    1360:	6a 2f       	mov	r22, r26
    1362:	11 24       	eor	r1, r1
    1364:	9f 57       	subi	r25, 0x7F	; 127
    1366:	50 40       	sbci	r21, 0x00	; 0
    1368:	8a f0       	brmi	.+34     	; 0x138c <__mulsf3_pse+0x84>
    136a:	e1 f0       	breq	.+56     	; 0x13a4 <__mulsf3_pse+0x9c>
    136c:	88 23       	and	r24, r24
    136e:	4a f0       	brmi	.+18     	; 0x1382 <__mulsf3_pse+0x7a>
    1370:	ee 0f       	add	r30, r30
    1372:	ff 1f       	adc	r31, r31
    1374:	bb 1f       	adc	r27, r27
    1376:	66 1f       	adc	r22, r22
    1378:	77 1f       	adc	r23, r23
    137a:	88 1f       	adc	r24, r24
    137c:	91 50       	subi	r25, 0x01	; 1
    137e:	50 40       	sbci	r21, 0x00	; 0
    1380:	a9 f7       	brne	.-22     	; 0x136c <__mulsf3_pse+0x64>
    1382:	9e 3f       	cpi	r25, 0xFE	; 254
    1384:	51 05       	cpc	r21, r1
    1386:	70 f0       	brcs	.+28     	; 0x13a4 <__mulsf3_pse+0x9c>
    1388:	60 cf       	rjmp	.-320    	; 0x124a <__fp_inf>
    138a:	aa cf       	rjmp	.-172    	; 0x12e0 <__fp_szero>
    138c:	5f 3f       	cpi	r21, 0xFF	; 255
    138e:	ec f3       	brlt	.-6      	; 0x138a <__mulsf3_pse+0x82>
    1390:	98 3e       	cpi	r25, 0xE8	; 232
    1392:	dc f3       	brlt	.-10     	; 0x138a <__mulsf3_pse+0x82>
    1394:	86 95       	lsr	r24
    1396:	77 95       	ror	r23
    1398:	67 95       	ror	r22
    139a:	b7 95       	ror	r27
    139c:	f7 95       	ror	r31
    139e:	e7 95       	ror	r30
    13a0:	9f 5f       	subi	r25, 0xFF	; 255
    13a2:	c1 f7       	brne	.-16     	; 0x1394 <__mulsf3_pse+0x8c>
    13a4:	fe 2b       	or	r31, r30
    13a6:	88 0f       	add	r24, r24
    13a8:	91 1d       	adc	r25, r1
    13aa:	96 95       	lsr	r25
    13ac:	87 95       	ror	r24
    13ae:	97 f9       	bld	r25, 7
    13b0:	08 95       	ret

000013b2 <round>:
    13b2:	7b df       	rcall	.-266    	; 0x12aa <__fp_splitA>
    13b4:	e0 f0       	brcs	.+56     	; 0x13ee <round+0x3c>
    13b6:	9e 37       	cpi	r25, 0x7E	; 126
    13b8:	d8 f0       	brcs	.+54     	; 0x13f0 <round+0x3e>
    13ba:	96 39       	cpi	r25, 0x96	; 150
    13bc:	b8 f4       	brcc	.+46     	; 0x13ec <round+0x3a>
    13be:	9e 38       	cpi	r25, 0x8E	; 142
    13c0:	48 f4       	brcc	.+18     	; 0x13d4 <round+0x22>
    13c2:	67 2f       	mov	r22, r23
    13c4:	78 2f       	mov	r23, r24
    13c6:	88 27       	eor	r24, r24
    13c8:	98 5f       	subi	r25, 0xF8	; 248
    13ca:	f9 cf       	rjmp	.-14     	; 0x13be <round+0xc>
    13cc:	86 95       	lsr	r24
    13ce:	77 95       	ror	r23
    13d0:	67 95       	ror	r22
    13d2:	93 95       	inc	r25
    13d4:	95 39       	cpi	r25, 0x95	; 149
    13d6:	d0 f3       	brcs	.-12     	; 0x13cc <round+0x1a>
    13d8:	b6 2f       	mov	r27, r22
    13da:	b1 70       	andi	r27, 0x01	; 1
    13dc:	6b 0f       	add	r22, r27
    13de:	71 1d       	adc	r23, r1
    13e0:	81 1d       	adc	r24, r1
    13e2:	20 f4       	brcc	.+8      	; 0x13ec <round+0x3a>
    13e4:	87 95       	ror	r24
    13e6:	77 95       	ror	r23
    13e8:	67 95       	ror	r22
    13ea:	93 95       	inc	r25
    13ec:	02 c0       	rjmp	.+4      	; 0x13f2 <__fp_mintl>
    13ee:	1c c0       	rjmp	.+56     	; 0x1428 <__fp_mpack>
    13f0:	77 cf       	rjmp	.-274    	; 0x12e0 <__fp_szero>

000013f2 <__fp_mintl>:
    13f2:	88 23       	and	r24, r24
    13f4:	71 f4       	brne	.+28     	; 0x1412 <__fp_mintl+0x20>
    13f6:	77 23       	and	r23, r23
    13f8:	21 f0       	breq	.+8      	; 0x1402 <__fp_mintl+0x10>
    13fa:	98 50       	subi	r25, 0x08	; 8
    13fc:	87 2b       	or	r24, r23
    13fe:	76 2f       	mov	r23, r22
    1400:	07 c0       	rjmp	.+14     	; 0x1410 <__fp_mintl+0x1e>
    1402:	66 23       	and	r22, r22
    1404:	11 f4       	brne	.+4      	; 0x140a <__fp_mintl+0x18>
    1406:	99 27       	eor	r25, r25
    1408:	0d c0       	rjmp	.+26     	; 0x1424 <__fp_mintl+0x32>
    140a:	90 51       	subi	r25, 0x10	; 16
    140c:	86 2b       	or	r24, r22
    140e:	70 e0       	ldi	r23, 0x00	; 0
    1410:	60 e0       	ldi	r22, 0x00	; 0
    1412:	2a f0       	brmi	.+10     	; 0x141e <__fp_mintl+0x2c>
    1414:	9a 95       	dec	r25
    1416:	66 0f       	add	r22, r22
    1418:	77 1f       	adc	r23, r23
    141a:	88 1f       	adc	r24, r24
    141c:	da f7       	brpl	.-10     	; 0x1414 <__fp_mintl+0x22>
    141e:	88 0f       	add	r24, r24
    1420:	96 95       	lsr	r25
    1422:	87 95       	ror	r24
    1424:	97 f9       	bld	r25, 7
    1426:	08 95       	ret

00001428 <__fp_mpack>:
    1428:	9f 3f       	cpi	r25, 0xFF	; 255
    142a:	31 f0       	breq	.+12     	; 0x1438 <__fp_mpack_finite+0xc>

0000142c <__fp_mpack_finite>:
    142c:	91 50       	subi	r25, 0x01	; 1
    142e:	20 f4       	brcc	.+8      	; 0x1438 <__fp_mpack_finite+0xc>
    1430:	87 95       	ror	r24
    1432:	77 95       	ror	r23
    1434:	67 95       	ror	r22
    1436:	b7 95       	ror	r27
    1438:	88 0f       	add	r24, r24
    143a:	91 1d       	adc	r25, r1
    143c:	96 95       	lsr	r25
    143e:	87 95       	ror	r24
    1440:	97 f9       	bld	r25, 7
    1442:	08 95       	ret

00001444 <__umulhisi3>:
    1444:	a2 9f       	mul	r26, r18
    1446:	b0 01       	movw	r22, r0
    1448:	b3 9f       	mul	r27, r19
    144a:	c0 01       	movw	r24, r0
    144c:	a3 9f       	mul	r26, r19
    144e:	01 d0       	rcall	.+2      	; 0x1452 <__umulhisi3+0xe>
    1450:	b2 9f       	mul	r27, r18
    1452:	70 0d       	add	r23, r0
    1454:	81 1d       	adc	r24, r1
    1456:	11 24       	eor	r1, r1
    1458:	91 1d       	adc	r25, r1
    145a:	08 95       	ret

0000145c <sprintf>:
    145c:	0f 93       	push	r16
    145e:	1f 93       	push	r17
    1460:	cf 93       	push	r28
    1462:	df 93       	push	r29
    1464:	cd b7       	in	r28, 0x3d	; 61
    1466:	de b7       	in	r29, 0x3e	; 62
    1468:	2e 97       	sbiw	r28, 0x0e	; 14
    146a:	cd bf       	out	0x3d, r28	; 61
    146c:	de bf       	out	0x3e, r29	; 62
    146e:	0e 89       	ldd	r16, Y+22	; 0x16
    1470:	1f 89       	ldd	r17, Y+23	; 0x17
    1472:	86 e0       	ldi	r24, 0x06	; 6
    1474:	8c 83       	std	Y+4, r24	; 0x04
    1476:	09 83       	std	Y+1, r16	; 0x01
    1478:	1a 83       	std	Y+2, r17	; 0x02
    147a:	8f ef       	ldi	r24, 0xFF	; 255
    147c:	9f e7       	ldi	r25, 0x7F	; 127
    147e:	8d 83       	std	Y+5, r24	; 0x05
    1480:	9e 83       	std	Y+6, r25	; 0x06
    1482:	ce 01       	movw	r24, r28
    1484:	4a 96       	adiw	r24, 0x1a	; 26
    1486:	ac 01       	movw	r20, r24
    1488:	68 8d       	ldd	r22, Y+24	; 0x18
    148a:	79 8d       	ldd	r23, Y+25	; 0x19
    148c:	ce 01       	movw	r24, r28
    148e:	01 96       	adiw	r24, 0x01	; 1
    1490:	0d d0       	rcall	.+26     	; 0x14ac <vfprintf>
    1492:	ef 81       	ldd	r30, Y+7	; 0x07
    1494:	f8 85       	ldd	r31, Y+8	; 0x08
    1496:	e0 0f       	add	r30, r16
    1498:	f1 1f       	adc	r31, r17
    149a:	10 82       	st	Z, r1
    149c:	2e 96       	adiw	r28, 0x0e	; 14
    149e:	cd bf       	out	0x3d, r28	; 61
    14a0:	de bf       	out	0x3e, r29	; 62
    14a2:	df 91       	pop	r29
    14a4:	cf 91       	pop	r28
    14a6:	1f 91       	pop	r17
    14a8:	0f 91       	pop	r16
    14aa:	08 95       	ret

000014ac <vfprintf>:
    14ac:	2f 92       	push	r2
    14ae:	3f 92       	push	r3
    14b0:	4f 92       	push	r4
    14b2:	5f 92       	push	r5
    14b4:	6f 92       	push	r6
    14b6:	7f 92       	push	r7
    14b8:	8f 92       	push	r8
    14ba:	9f 92       	push	r9
    14bc:	af 92       	push	r10
    14be:	bf 92       	push	r11
    14c0:	cf 92       	push	r12
    14c2:	df 92       	push	r13
    14c4:	ef 92       	push	r14
    14c6:	ff 92       	push	r15
    14c8:	0f 93       	push	r16
    14ca:	1f 93       	push	r17
    14cc:	cf 93       	push	r28
    14ce:	df 93       	push	r29
    14d0:	cd b7       	in	r28, 0x3d	; 61
    14d2:	de b7       	in	r29, 0x3e	; 62
    14d4:	2c 97       	sbiw	r28, 0x0c	; 12
    14d6:	cd bf       	out	0x3d, r28	; 61
    14d8:	de bf       	out	0x3e, r29	; 62
    14da:	7c 01       	movw	r14, r24
    14dc:	6b 01       	movw	r12, r22
    14de:	8a 01       	movw	r16, r20
    14e0:	fc 01       	movw	r30, r24
    14e2:	16 82       	std	Z+6, r1	; 0x06
    14e4:	17 82       	std	Z+7, r1	; 0x07
    14e6:	83 81       	ldd	r24, Z+3	; 0x03
    14e8:	81 ff       	sbrs	r24, 1
    14ea:	b9 c1       	rjmp	.+882    	; 0x185e <vfprintf+0x3b2>
    14ec:	88 24       	eor	r8, r8
    14ee:	83 94       	inc	r8
    14f0:	91 2c       	mov	r9, r1
    14f2:	8c 0e       	add	r8, r28
    14f4:	9d 1e       	adc	r9, r29
    14f6:	f7 01       	movw	r30, r14
    14f8:	93 81       	ldd	r25, Z+3	; 0x03
    14fa:	f6 01       	movw	r30, r12
    14fc:	93 fd       	sbrc	r25, 3
    14fe:	85 91       	lpm	r24, Z+
    1500:	93 ff       	sbrs	r25, 3
    1502:	81 91       	ld	r24, Z+
    1504:	6f 01       	movw	r12, r30
    1506:	88 23       	and	r24, r24
    1508:	09 f4       	brne	.+2      	; 0x150c <vfprintf+0x60>
    150a:	a5 c1       	rjmp	.+842    	; 0x1856 <vfprintf+0x3aa>
    150c:	85 32       	cpi	r24, 0x25	; 37
    150e:	39 f4       	brne	.+14     	; 0x151e <vfprintf+0x72>
    1510:	93 fd       	sbrc	r25, 3
    1512:	85 91       	lpm	r24, Z+
    1514:	93 ff       	sbrs	r25, 3
    1516:	81 91       	ld	r24, Z+
    1518:	6f 01       	movw	r12, r30
    151a:	85 32       	cpi	r24, 0x25	; 37
    151c:	21 f4       	brne	.+8      	; 0x1526 <vfprintf+0x7a>
    151e:	b7 01       	movw	r22, r14
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	cc d1       	rcall	.+920    	; 0x18bc <fputc>
    1524:	e8 cf       	rjmp	.-48     	; 0x14f6 <vfprintf+0x4a>
    1526:	51 2c       	mov	r5, r1
    1528:	31 2c       	mov	r3, r1
    152a:	20 e0       	ldi	r18, 0x00	; 0
    152c:	20 32       	cpi	r18, 0x20	; 32
    152e:	a8 f4       	brcc	.+42     	; 0x155a <vfprintf+0xae>
    1530:	8b 32       	cpi	r24, 0x2B	; 43
    1532:	61 f0       	breq	.+24     	; 0x154c <vfprintf+0xa0>
    1534:	28 f4       	brcc	.+10     	; 0x1540 <vfprintf+0x94>
    1536:	80 32       	cpi	r24, 0x20	; 32
    1538:	51 f0       	breq	.+20     	; 0x154e <vfprintf+0xa2>
    153a:	83 32       	cpi	r24, 0x23	; 35
    153c:	71 f4       	brne	.+28     	; 0x155a <vfprintf+0xae>
    153e:	0b c0       	rjmp	.+22     	; 0x1556 <vfprintf+0xaa>
    1540:	8d 32       	cpi	r24, 0x2D	; 45
    1542:	39 f0       	breq	.+14     	; 0x1552 <vfprintf+0xa6>
    1544:	80 33       	cpi	r24, 0x30	; 48
    1546:	49 f4       	brne	.+18     	; 0x155a <vfprintf+0xae>
    1548:	21 60       	ori	r18, 0x01	; 1
    154a:	28 c0       	rjmp	.+80     	; 0x159c <vfprintf+0xf0>
    154c:	22 60       	ori	r18, 0x02	; 2
    154e:	24 60       	ori	r18, 0x04	; 4
    1550:	25 c0       	rjmp	.+74     	; 0x159c <vfprintf+0xf0>
    1552:	28 60       	ori	r18, 0x08	; 8
    1554:	23 c0       	rjmp	.+70     	; 0x159c <vfprintf+0xf0>
    1556:	20 61       	ori	r18, 0x10	; 16
    1558:	21 c0       	rjmp	.+66     	; 0x159c <vfprintf+0xf0>
    155a:	27 fd       	sbrc	r18, 7
    155c:	27 c0       	rjmp	.+78     	; 0x15ac <vfprintf+0x100>
    155e:	38 2f       	mov	r19, r24
    1560:	30 53       	subi	r19, 0x30	; 48
    1562:	3a 30       	cpi	r19, 0x0A	; 10
    1564:	78 f4       	brcc	.+30     	; 0x1584 <vfprintf+0xd8>
    1566:	26 ff       	sbrs	r18, 6
    1568:	06 c0       	rjmp	.+12     	; 0x1576 <vfprintf+0xca>
    156a:	fa e0       	ldi	r31, 0x0A	; 10
    156c:	5f 9e       	mul	r5, r31
    156e:	30 0d       	add	r19, r0
    1570:	11 24       	eor	r1, r1
    1572:	53 2e       	mov	r5, r19
    1574:	13 c0       	rjmp	.+38     	; 0x159c <vfprintf+0xf0>
    1576:	8a e0       	ldi	r24, 0x0A	; 10
    1578:	38 9e       	mul	r3, r24
    157a:	30 0d       	add	r19, r0
    157c:	11 24       	eor	r1, r1
    157e:	33 2e       	mov	r3, r19
    1580:	20 62       	ori	r18, 0x20	; 32
    1582:	0c c0       	rjmp	.+24     	; 0x159c <vfprintf+0xf0>
    1584:	8e 32       	cpi	r24, 0x2E	; 46
    1586:	21 f4       	brne	.+8      	; 0x1590 <vfprintf+0xe4>
    1588:	26 fd       	sbrc	r18, 6
    158a:	65 c1       	rjmp	.+714    	; 0x1856 <vfprintf+0x3aa>
    158c:	20 64       	ori	r18, 0x40	; 64
    158e:	06 c0       	rjmp	.+12     	; 0x159c <vfprintf+0xf0>
    1590:	8c 36       	cpi	r24, 0x6C	; 108
    1592:	11 f4       	brne	.+4      	; 0x1598 <vfprintf+0xec>
    1594:	20 68       	ori	r18, 0x80	; 128
    1596:	02 c0       	rjmp	.+4      	; 0x159c <vfprintf+0xf0>
    1598:	88 36       	cpi	r24, 0x68	; 104
    159a:	41 f4       	brne	.+16     	; 0x15ac <vfprintf+0x100>
    159c:	f6 01       	movw	r30, r12
    159e:	93 fd       	sbrc	r25, 3
    15a0:	85 91       	lpm	r24, Z+
    15a2:	93 ff       	sbrs	r25, 3
    15a4:	81 91       	ld	r24, Z+
    15a6:	6f 01       	movw	r12, r30
    15a8:	81 11       	cpse	r24, r1
    15aa:	c0 cf       	rjmp	.-128    	; 0x152c <vfprintf+0x80>
    15ac:	98 2f       	mov	r25, r24
    15ae:	95 54       	subi	r25, 0x45	; 69
    15b0:	93 30       	cpi	r25, 0x03	; 3
    15b2:	18 f0       	brcs	.+6      	; 0x15ba <vfprintf+0x10e>
    15b4:	90 52       	subi	r25, 0x20	; 32
    15b6:	93 30       	cpi	r25, 0x03	; 3
    15b8:	28 f4       	brcc	.+10     	; 0x15c4 <vfprintf+0x118>
    15ba:	0c 5f       	subi	r16, 0xFC	; 252
    15bc:	1f 4f       	sbci	r17, 0xFF	; 255
    15be:	ff e3       	ldi	r31, 0x3F	; 63
    15c0:	f9 83       	std	Y+1, r31	; 0x01
    15c2:	0d c0       	rjmp	.+26     	; 0x15de <vfprintf+0x132>
    15c4:	83 36       	cpi	r24, 0x63	; 99
    15c6:	31 f0       	breq	.+12     	; 0x15d4 <vfprintf+0x128>
    15c8:	83 37       	cpi	r24, 0x73	; 115
    15ca:	71 f0       	breq	.+28     	; 0x15e8 <vfprintf+0x13c>
    15cc:	83 35       	cpi	r24, 0x53	; 83
    15ce:	09 f0       	breq	.+2      	; 0x15d2 <vfprintf+0x126>
    15d0:	5a c0       	rjmp	.+180    	; 0x1686 <vfprintf+0x1da>
    15d2:	22 c0       	rjmp	.+68     	; 0x1618 <vfprintf+0x16c>
    15d4:	f8 01       	movw	r30, r16
    15d6:	80 81       	ld	r24, Z
    15d8:	89 83       	std	Y+1, r24	; 0x01
    15da:	0e 5f       	subi	r16, 0xFE	; 254
    15dc:	1f 4f       	sbci	r17, 0xFF	; 255
    15de:	44 24       	eor	r4, r4
    15e0:	43 94       	inc	r4
    15e2:	51 2c       	mov	r5, r1
    15e4:	54 01       	movw	r10, r8
    15e6:	14 c0       	rjmp	.+40     	; 0x1610 <vfprintf+0x164>
    15e8:	38 01       	movw	r6, r16
    15ea:	f2 e0       	ldi	r31, 0x02	; 2
    15ec:	6f 0e       	add	r6, r31
    15ee:	71 1c       	adc	r7, r1
    15f0:	f8 01       	movw	r30, r16
    15f2:	a0 80       	ld	r10, Z
    15f4:	b1 80       	ldd	r11, Z+1	; 0x01
    15f6:	26 ff       	sbrs	r18, 6
    15f8:	03 c0       	rjmp	.+6      	; 0x1600 <vfprintf+0x154>
    15fa:	65 2d       	mov	r22, r5
    15fc:	70 e0       	ldi	r23, 0x00	; 0
    15fe:	02 c0       	rjmp	.+4      	; 0x1604 <vfprintf+0x158>
    1600:	6f ef       	ldi	r22, 0xFF	; 255
    1602:	7f ef       	ldi	r23, 0xFF	; 255
    1604:	c5 01       	movw	r24, r10
    1606:	2c 87       	std	Y+12, r18	; 0x0c
    1608:	4e d1       	rcall	.+668    	; 0x18a6 <strnlen>
    160a:	2c 01       	movw	r4, r24
    160c:	83 01       	movw	r16, r6
    160e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1610:	6f e7       	ldi	r22, 0x7F	; 127
    1612:	26 2e       	mov	r2, r22
    1614:	22 22       	and	r2, r18
    1616:	17 c0       	rjmp	.+46     	; 0x1646 <vfprintf+0x19a>
    1618:	38 01       	movw	r6, r16
    161a:	f2 e0       	ldi	r31, 0x02	; 2
    161c:	6f 0e       	add	r6, r31
    161e:	71 1c       	adc	r7, r1
    1620:	f8 01       	movw	r30, r16
    1622:	a0 80       	ld	r10, Z
    1624:	b1 80       	ldd	r11, Z+1	; 0x01
    1626:	26 ff       	sbrs	r18, 6
    1628:	03 c0       	rjmp	.+6      	; 0x1630 <vfprintf+0x184>
    162a:	65 2d       	mov	r22, r5
    162c:	70 e0       	ldi	r23, 0x00	; 0
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <vfprintf+0x188>
    1630:	6f ef       	ldi	r22, 0xFF	; 255
    1632:	7f ef       	ldi	r23, 0xFF	; 255
    1634:	c5 01       	movw	r24, r10
    1636:	2c 87       	std	Y+12, r18	; 0x0c
    1638:	2b d1       	rcall	.+598    	; 0x1890 <strnlen_P>
    163a:	2c 01       	movw	r4, r24
    163c:	2c 85       	ldd	r18, Y+12	; 0x0c
    163e:	50 e8       	ldi	r21, 0x80	; 128
    1640:	25 2e       	mov	r2, r21
    1642:	22 2a       	or	r2, r18
    1644:	83 01       	movw	r16, r6
    1646:	23 fc       	sbrc	r2, 3
    1648:	1a c0       	rjmp	.+52     	; 0x167e <vfprintf+0x1d2>
    164a:	05 c0       	rjmp	.+10     	; 0x1656 <vfprintf+0x1aa>
    164c:	b7 01       	movw	r22, r14
    164e:	80 e2       	ldi	r24, 0x20	; 32
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	34 d1       	rcall	.+616    	; 0x18bc <fputc>
    1654:	3a 94       	dec	r3
    1656:	83 2d       	mov	r24, r3
    1658:	90 e0       	ldi	r25, 0x00	; 0
    165a:	48 16       	cp	r4, r24
    165c:	59 06       	cpc	r5, r25
    165e:	b0 f3       	brcs	.-20     	; 0x164c <vfprintf+0x1a0>
    1660:	0e c0       	rjmp	.+28     	; 0x167e <vfprintf+0x1d2>
    1662:	f5 01       	movw	r30, r10
    1664:	27 fc       	sbrc	r2, 7
    1666:	85 91       	lpm	r24, Z+
    1668:	27 fe       	sbrs	r2, 7
    166a:	81 91       	ld	r24, Z+
    166c:	5f 01       	movw	r10, r30
    166e:	b7 01       	movw	r22, r14
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	24 d1       	rcall	.+584    	; 0x18bc <fputc>
    1674:	31 10       	cpse	r3, r1
    1676:	3a 94       	dec	r3
    1678:	f1 e0       	ldi	r31, 0x01	; 1
    167a:	4f 1a       	sub	r4, r31
    167c:	51 08       	sbc	r5, r1
    167e:	41 14       	cp	r4, r1
    1680:	51 04       	cpc	r5, r1
    1682:	79 f7       	brne	.-34     	; 0x1662 <vfprintf+0x1b6>
    1684:	e5 c0       	rjmp	.+458    	; 0x1850 <vfprintf+0x3a4>
    1686:	84 36       	cpi	r24, 0x64	; 100
    1688:	11 f0       	breq	.+4      	; 0x168e <vfprintf+0x1e2>
    168a:	89 36       	cpi	r24, 0x69	; 105
    168c:	39 f5       	brne	.+78     	; 0x16dc <vfprintf+0x230>
    168e:	f8 01       	movw	r30, r16
    1690:	27 ff       	sbrs	r18, 7
    1692:	07 c0       	rjmp	.+14     	; 0x16a2 <vfprintf+0x1f6>
    1694:	60 81       	ld	r22, Z
    1696:	71 81       	ldd	r23, Z+1	; 0x01
    1698:	82 81       	ldd	r24, Z+2	; 0x02
    169a:	93 81       	ldd	r25, Z+3	; 0x03
    169c:	0c 5f       	subi	r16, 0xFC	; 252
    169e:	1f 4f       	sbci	r17, 0xFF	; 255
    16a0:	08 c0       	rjmp	.+16     	; 0x16b2 <vfprintf+0x206>
    16a2:	60 81       	ld	r22, Z
    16a4:	71 81       	ldd	r23, Z+1	; 0x01
    16a6:	88 27       	eor	r24, r24
    16a8:	77 fd       	sbrc	r23, 7
    16aa:	80 95       	com	r24
    16ac:	98 2f       	mov	r25, r24
    16ae:	0e 5f       	subi	r16, 0xFE	; 254
    16b0:	1f 4f       	sbci	r17, 0xFF	; 255
    16b2:	4f e6       	ldi	r20, 0x6F	; 111
    16b4:	b4 2e       	mov	r11, r20
    16b6:	b2 22       	and	r11, r18
    16b8:	97 ff       	sbrs	r25, 7
    16ba:	09 c0       	rjmp	.+18     	; 0x16ce <vfprintf+0x222>
    16bc:	90 95       	com	r25
    16be:	80 95       	com	r24
    16c0:	70 95       	com	r23
    16c2:	61 95       	neg	r22
    16c4:	7f 4f       	sbci	r23, 0xFF	; 255
    16c6:	8f 4f       	sbci	r24, 0xFF	; 255
    16c8:	9f 4f       	sbci	r25, 0xFF	; 255
    16ca:	f0 e8       	ldi	r31, 0x80	; 128
    16cc:	bf 2a       	or	r11, r31
    16ce:	2a e0       	ldi	r18, 0x0A	; 10
    16d0:	30 e0       	ldi	r19, 0x00	; 0
    16d2:	a4 01       	movw	r20, r8
    16d4:	1f d1       	rcall	.+574    	; 0x1914 <__ultoa_invert>
    16d6:	a8 2e       	mov	r10, r24
    16d8:	a8 18       	sub	r10, r8
    16da:	42 c0       	rjmp	.+132    	; 0x1760 <vfprintf+0x2b4>
    16dc:	85 37       	cpi	r24, 0x75	; 117
    16de:	31 f4       	brne	.+12     	; 0x16ec <vfprintf+0x240>
    16e0:	3f ee       	ldi	r19, 0xEF	; 239
    16e2:	b3 2e       	mov	r11, r19
    16e4:	b2 22       	and	r11, r18
    16e6:	2a e0       	ldi	r18, 0x0A	; 10
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	24 c0       	rjmp	.+72     	; 0x1734 <vfprintf+0x288>
    16ec:	99 ef       	ldi	r25, 0xF9	; 249
    16ee:	b9 2e       	mov	r11, r25
    16f0:	b2 22       	and	r11, r18
    16f2:	8f 36       	cpi	r24, 0x6F	; 111
    16f4:	b9 f0       	breq	.+46     	; 0x1724 <vfprintf+0x278>
    16f6:	20 f4       	brcc	.+8      	; 0x1700 <vfprintf+0x254>
    16f8:	88 35       	cpi	r24, 0x58	; 88
    16fa:	09 f0       	breq	.+2      	; 0x16fe <vfprintf+0x252>
    16fc:	ac c0       	rjmp	.+344    	; 0x1856 <vfprintf+0x3aa>
    16fe:	0d c0       	rjmp	.+26     	; 0x171a <vfprintf+0x26e>
    1700:	80 37       	cpi	r24, 0x70	; 112
    1702:	21 f0       	breq	.+8      	; 0x170c <vfprintf+0x260>
    1704:	88 37       	cpi	r24, 0x78	; 120
    1706:	09 f0       	breq	.+2      	; 0x170a <vfprintf+0x25e>
    1708:	a6 c0       	rjmp	.+332    	; 0x1856 <vfprintf+0x3aa>
    170a:	02 c0       	rjmp	.+4      	; 0x1710 <vfprintf+0x264>
    170c:	20 e1       	ldi	r18, 0x10	; 16
    170e:	b2 2a       	or	r11, r18
    1710:	b4 fe       	sbrs	r11, 4
    1712:	0b c0       	rjmp	.+22     	; 0x172a <vfprintf+0x27e>
    1714:	84 e0       	ldi	r24, 0x04	; 4
    1716:	b8 2a       	or	r11, r24
    1718:	08 c0       	rjmp	.+16     	; 0x172a <vfprintf+0x27e>
    171a:	24 ff       	sbrs	r18, 4
    171c:	09 c0       	rjmp	.+18     	; 0x1730 <vfprintf+0x284>
    171e:	e6 e0       	ldi	r30, 0x06	; 6
    1720:	be 2a       	or	r11, r30
    1722:	06 c0       	rjmp	.+12     	; 0x1730 <vfprintf+0x284>
    1724:	28 e0       	ldi	r18, 0x08	; 8
    1726:	30 e0       	ldi	r19, 0x00	; 0
    1728:	05 c0       	rjmp	.+10     	; 0x1734 <vfprintf+0x288>
    172a:	20 e1       	ldi	r18, 0x10	; 16
    172c:	30 e0       	ldi	r19, 0x00	; 0
    172e:	02 c0       	rjmp	.+4      	; 0x1734 <vfprintf+0x288>
    1730:	20 e1       	ldi	r18, 0x10	; 16
    1732:	32 e0       	ldi	r19, 0x02	; 2
    1734:	f8 01       	movw	r30, r16
    1736:	b7 fe       	sbrs	r11, 7
    1738:	07 c0       	rjmp	.+14     	; 0x1748 <vfprintf+0x29c>
    173a:	60 81       	ld	r22, Z
    173c:	71 81       	ldd	r23, Z+1	; 0x01
    173e:	82 81       	ldd	r24, Z+2	; 0x02
    1740:	93 81       	ldd	r25, Z+3	; 0x03
    1742:	0c 5f       	subi	r16, 0xFC	; 252
    1744:	1f 4f       	sbci	r17, 0xFF	; 255
    1746:	06 c0       	rjmp	.+12     	; 0x1754 <vfprintf+0x2a8>
    1748:	60 81       	ld	r22, Z
    174a:	71 81       	ldd	r23, Z+1	; 0x01
    174c:	80 e0       	ldi	r24, 0x00	; 0
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	0e 5f       	subi	r16, 0xFE	; 254
    1752:	1f 4f       	sbci	r17, 0xFF	; 255
    1754:	a4 01       	movw	r20, r8
    1756:	de d0       	rcall	.+444    	; 0x1914 <__ultoa_invert>
    1758:	a8 2e       	mov	r10, r24
    175a:	a8 18       	sub	r10, r8
    175c:	ff e7       	ldi	r31, 0x7F	; 127
    175e:	bf 22       	and	r11, r31
    1760:	b6 fe       	sbrs	r11, 6
    1762:	0b c0       	rjmp	.+22     	; 0x177a <vfprintf+0x2ce>
    1764:	2b 2d       	mov	r18, r11
    1766:	2e 7f       	andi	r18, 0xFE	; 254
    1768:	a5 14       	cp	r10, r5
    176a:	50 f4       	brcc	.+20     	; 0x1780 <vfprintf+0x2d4>
    176c:	b4 fe       	sbrs	r11, 4
    176e:	0a c0       	rjmp	.+20     	; 0x1784 <vfprintf+0x2d8>
    1770:	b2 fc       	sbrc	r11, 2
    1772:	08 c0       	rjmp	.+16     	; 0x1784 <vfprintf+0x2d8>
    1774:	2b 2d       	mov	r18, r11
    1776:	2e 7e       	andi	r18, 0xEE	; 238
    1778:	05 c0       	rjmp	.+10     	; 0x1784 <vfprintf+0x2d8>
    177a:	7a 2c       	mov	r7, r10
    177c:	2b 2d       	mov	r18, r11
    177e:	03 c0       	rjmp	.+6      	; 0x1786 <vfprintf+0x2da>
    1780:	7a 2c       	mov	r7, r10
    1782:	01 c0       	rjmp	.+2      	; 0x1786 <vfprintf+0x2da>
    1784:	75 2c       	mov	r7, r5
    1786:	24 ff       	sbrs	r18, 4
    1788:	0d c0       	rjmp	.+26     	; 0x17a4 <vfprintf+0x2f8>
    178a:	fe 01       	movw	r30, r28
    178c:	ea 0d       	add	r30, r10
    178e:	f1 1d       	adc	r31, r1
    1790:	80 81       	ld	r24, Z
    1792:	80 33       	cpi	r24, 0x30	; 48
    1794:	11 f4       	brne	.+4      	; 0x179a <vfprintf+0x2ee>
    1796:	29 7e       	andi	r18, 0xE9	; 233
    1798:	09 c0       	rjmp	.+18     	; 0x17ac <vfprintf+0x300>
    179a:	22 ff       	sbrs	r18, 2
    179c:	06 c0       	rjmp	.+12     	; 0x17aa <vfprintf+0x2fe>
    179e:	73 94       	inc	r7
    17a0:	73 94       	inc	r7
    17a2:	04 c0       	rjmp	.+8      	; 0x17ac <vfprintf+0x300>
    17a4:	82 2f       	mov	r24, r18
    17a6:	86 78       	andi	r24, 0x86	; 134
    17a8:	09 f0       	breq	.+2      	; 0x17ac <vfprintf+0x300>
    17aa:	73 94       	inc	r7
    17ac:	23 fd       	sbrc	r18, 3
    17ae:	13 c0       	rjmp	.+38     	; 0x17d6 <vfprintf+0x32a>
    17b0:	20 ff       	sbrs	r18, 0
    17b2:	0e c0       	rjmp	.+28     	; 0x17d0 <vfprintf+0x324>
    17b4:	5a 2c       	mov	r5, r10
    17b6:	73 14       	cp	r7, r3
    17b8:	58 f4       	brcc	.+22     	; 0x17d0 <vfprintf+0x324>
    17ba:	53 0c       	add	r5, r3
    17bc:	57 18       	sub	r5, r7
    17be:	73 2c       	mov	r7, r3
    17c0:	07 c0       	rjmp	.+14     	; 0x17d0 <vfprintf+0x324>
    17c2:	b7 01       	movw	r22, r14
    17c4:	80 e2       	ldi	r24, 0x20	; 32
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	2c 87       	std	Y+12, r18	; 0x0c
    17ca:	78 d0       	rcall	.+240    	; 0x18bc <fputc>
    17cc:	73 94       	inc	r7
    17ce:	2c 85       	ldd	r18, Y+12	; 0x0c
    17d0:	73 14       	cp	r7, r3
    17d2:	b8 f3       	brcs	.-18     	; 0x17c2 <vfprintf+0x316>
    17d4:	04 c0       	rjmp	.+8      	; 0x17de <vfprintf+0x332>
    17d6:	73 14       	cp	r7, r3
    17d8:	10 f4       	brcc	.+4      	; 0x17de <vfprintf+0x332>
    17da:	37 18       	sub	r3, r7
    17dc:	01 c0       	rjmp	.+2      	; 0x17e0 <vfprintf+0x334>
    17de:	31 2c       	mov	r3, r1
    17e0:	24 ff       	sbrs	r18, 4
    17e2:	11 c0       	rjmp	.+34     	; 0x1806 <vfprintf+0x35a>
    17e4:	b7 01       	movw	r22, r14
    17e6:	80 e3       	ldi	r24, 0x30	; 48
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	2c 87       	std	Y+12, r18	; 0x0c
    17ec:	67 d0       	rcall	.+206    	; 0x18bc <fputc>
    17ee:	2c 85       	ldd	r18, Y+12	; 0x0c
    17f0:	22 ff       	sbrs	r18, 2
    17f2:	1c c0       	rjmp	.+56     	; 0x182c <vfprintf+0x380>
    17f4:	21 ff       	sbrs	r18, 1
    17f6:	03 c0       	rjmp	.+6      	; 0x17fe <vfprintf+0x352>
    17f8:	88 e5       	ldi	r24, 0x58	; 88
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	02 c0       	rjmp	.+4      	; 0x1802 <vfprintf+0x356>
    17fe:	88 e7       	ldi	r24, 0x78	; 120
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	b7 01       	movw	r22, r14
    1804:	0c c0       	rjmp	.+24     	; 0x181e <vfprintf+0x372>
    1806:	82 2f       	mov	r24, r18
    1808:	86 78       	andi	r24, 0x86	; 134
    180a:	81 f0       	breq	.+32     	; 0x182c <vfprintf+0x380>
    180c:	21 fd       	sbrc	r18, 1
    180e:	02 c0       	rjmp	.+4      	; 0x1814 <vfprintf+0x368>
    1810:	80 e2       	ldi	r24, 0x20	; 32
    1812:	01 c0       	rjmp	.+2      	; 0x1816 <vfprintf+0x36a>
    1814:	8b e2       	ldi	r24, 0x2B	; 43
    1816:	27 fd       	sbrc	r18, 7
    1818:	8d e2       	ldi	r24, 0x2D	; 45
    181a:	b7 01       	movw	r22, r14
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	4e d0       	rcall	.+156    	; 0x18bc <fputc>
    1820:	05 c0       	rjmp	.+10     	; 0x182c <vfprintf+0x380>
    1822:	b7 01       	movw	r22, r14
    1824:	80 e3       	ldi	r24, 0x30	; 48
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	49 d0       	rcall	.+146    	; 0x18bc <fputc>
    182a:	5a 94       	dec	r5
    182c:	a5 14       	cp	r10, r5
    182e:	c8 f3       	brcs	.-14     	; 0x1822 <vfprintf+0x376>
    1830:	aa 94       	dec	r10
    1832:	f4 01       	movw	r30, r8
    1834:	ea 0d       	add	r30, r10
    1836:	f1 1d       	adc	r31, r1
    1838:	b7 01       	movw	r22, r14
    183a:	80 81       	ld	r24, Z
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	3e d0       	rcall	.+124    	; 0x18bc <fputc>
    1840:	a1 10       	cpse	r10, r1
    1842:	f6 cf       	rjmp	.-20     	; 0x1830 <vfprintf+0x384>
    1844:	05 c0       	rjmp	.+10     	; 0x1850 <vfprintf+0x3a4>
    1846:	b7 01       	movw	r22, r14
    1848:	80 e2       	ldi	r24, 0x20	; 32
    184a:	90 e0       	ldi	r25, 0x00	; 0
    184c:	37 d0       	rcall	.+110    	; 0x18bc <fputc>
    184e:	3a 94       	dec	r3
    1850:	31 10       	cpse	r3, r1
    1852:	f9 cf       	rjmp	.-14     	; 0x1846 <vfprintf+0x39a>
    1854:	50 ce       	rjmp	.-864    	; 0x14f6 <vfprintf+0x4a>
    1856:	f7 01       	movw	r30, r14
    1858:	26 81       	ldd	r18, Z+6	; 0x06
    185a:	37 81       	ldd	r19, Z+7	; 0x07
    185c:	02 c0       	rjmp	.+4      	; 0x1862 <vfprintf+0x3b6>
    185e:	2f ef       	ldi	r18, 0xFF	; 255
    1860:	3f ef       	ldi	r19, 0xFF	; 255
    1862:	c9 01       	movw	r24, r18
    1864:	2c 96       	adiw	r28, 0x0c	; 12
    1866:	cd bf       	out	0x3d, r28	; 61
    1868:	de bf       	out	0x3e, r29	; 62
    186a:	df 91       	pop	r29
    186c:	cf 91       	pop	r28
    186e:	1f 91       	pop	r17
    1870:	0f 91       	pop	r16
    1872:	ff 90       	pop	r15
    1874:	ef 90       	pop	r14
    1876:	df 90       	pop	r13
    1878:	cf 90       	pop	r12
    187a:	bf 90       	pop	r11
    187c:	af 90       	pop	r10
    187e:	9f 90       	pop	r9
    1880:	8f 90       	pop	r8
    1882:	7f 90       	pop	r7
    1884:	6f 90       	pop	r6
    1886:	5f 90       	pop	r5
    1888:	4f 90       	pop	r4
    188a:	3f 90       	pop	r3
    188c:	2f 90       	pop	r2
    188e:	08 95       	ret

00001890 <strnlen_P>:
    1890:	fc 01       	movw	r30, r24
    1892:	05 90       	lpm	r0, Z+
    1894:	61 50       	subi	r22, 0x01	; 1
    1896:	70 40       	sbci	r23, 0x00	; 0
    1898:	01 10       	cpse	r0, r1
    189a:	d8 f7       	brcc	.-10     	; 0x1892 <strnlen_P+0x2>
    189c:	80 95       	com	r24
    189e:	90 95       	com	r25
    18a0:	8e 0f       	add	r24, r30
    18a2:	9f 1f       	adc	r25, r31
    18a4:	08 95       	ret

000018a6 <strnlen>:
    18a6:	fc 01       	movw	r30, r24
    18a8:	61 50       	subi	r22, 0x01	; 1
    18aa:	70 40       	sbci	r23, 0x00	; 0
    18ac:	01 90       	ld	r0, Z+
    18ae:	01 10       	cpse	r0, r1
    18b0:	d8 f7       	brcc	.-10     	; 0x18a8 <strnlen+0x2>
    18b2:	80 95       	com	r24
    18b4:	90 95       	com	r25
    18b6:	8e 0f       	add	r24, r30
    18b8:	9f 1f       	adc	r25, r31
    18ba:	08 95       	ret

000018bc <fputc>:
    18bc:	0f 93       	push	r16
    18be:	1f 93       	push	r17
    18c0:	cf 93       	push	r28
    18c2:	df 93       	push	r29
    18c4:	8c 01       	movw	r16, r24
    18c6:	eb 01       	movw	r28, r22
    18c8:	8b 81       	ldd	r24, Y+3	; 0x03
    18ca:	81 fd       	sbrc	r24, 1
    18cc:	03 c0       	rjmp	.+6      	; 0x18d4 <fputc+0x18>
    18ce:	0f ef       	ldi	r16, 0xFF	; 255
    18d0:	1f ef       	ldi	r17, 0xFF	; 255
    18d2:	1a c0       	rjmp	.+52     	; 0x1908 <fputc+0x4c>
    18d4:	82 ff       	sbrs	r24, 2
    18d6:	0d c0       	rjmp	.+26     	; 0x18f2 <fputc+0x36>
    18d8:	2e 81       	ldd	r18, Y+6	; 0x06
    18da:	3f 81       	ldd	r19, Y+7	; 0x07
    18dc:	8c 81       	ldd	r24, Y+4	; 0x04
    18de:	9d 81       	ldd	r25, Y+5	; 0x05
    18e0:	28 17       	cp	r18, r24
    18e2:	39 07       	cpc	r19, r25
    18e4:	64 f4       	brge	.+24     	; 0x18fe <fputc+0x42>
    18e6:	e8 81       	ld	r30, Y
    18e8:	f9 81       	ldd	r31, Y+1	; 0x01
    18ea:	01 93       	st	Z+, r16
    18ec:	e8 83       	st	Y, r30
    18ee:	f9 83       	std	Y+1, r31	; 0x01
    18f0:	06 c0       	rjmp	.+12     	; 0x18fe <fputc+0x42>
    18f2:	e8 85       	ldd	r30, Y+8	; 0x08
    18f4:	f9 85       	ldd	r31, Y+9	; 0x09
    18f6:	80 2f       	mov	r24, r16
    18f8:	19 95       	eicall
    18fa:	89 2b       	or	r24, r25
    18fc:	41 f7       	brne	.-48     	; 0x18ce <fputc+0x12>
    18fe:	8e 81       	ldd	r24, Y+6	; 0x06
    1900:	9f 81       	ldd	r25, Y+7	; 0x07
    1902:	01 96       	adiw	r24, 0x01	; 1
    1904:	8e 83       	std	Y+6, r24	; 0x06
    1906:	9f 83       	std	Y+7, r25	; 0x07
    1908:	c8 01       	movw	r24, r16
    190a:	df 91       	pop	r29
    190c:	cf 91       	pop	r28
    190e:	1f 91       	pop	r17
    1910:	0f 91       	pop	r16
    1912:	08 95       	ret

00001914 <__ultoa_invert>:
    1914:	fa 01       	movw	r30, r20
    1916:	aa 27       	eor	r26, r26
    1918:	28 30       	cpi	r18, 0x08	; 8
    191a:	51 f1       	breq	.+84     	; 0x1970 <__ultoa_invert+0x5c>
    191c:	20 31       	cpi	r18, 0x10	; 16
    191e:	81 f1       	breq	.+96     	; 0x1980 <__ultoa_invert+0x6c>
    1920:	e8 94       	clt
    1922:	6f 93       	push	r22
    1924:	6e 7f       	andi	r22, 0xFE	; 254
    1926:	6e 5f       	subi	r22, 0xFE	; 254
    1928:	7f 4f       	sbci	r23, 0xFF	; 255
    192a:	8f 4f       	sbci	r24, 0xFF	; 255
    192c:	9f 4f       	sbci	r25, 0xFF	; 255
    192e:	af 4f       	sbci	r26, 0xFF	; 255
    1930:	b1 e0       	ldi	r27, 0x01	; 1
    1932:	3e d0       	rcall	.+124    	; 0x19b0 <__ultoa_invert+0x9c>
    1934:	b4 e0       	ldi	r27, 0x04	; 4
    1936:	3c d0       	rcall	.+120    	; 0x19b0 <__ultoa_invert+0x9c>
    1938:	67 0f       	add	r22, r23
    193a:	78 1f       	adc	r23, r24
    193c:	89 1f       	adc	r24, r25
    193e:	9a 1f       	adc	r25, r26
    1940:	a1 1d       	adc	r26, r1
    1942:	68 0f       	add	r22, r24
    1944:	79 1f       	adc	r23, r25
    1946:	8a 1f       	adc	r24, r26
    1948:	91 1d       	adc	r25, r1
    194a:	a1 1d       	adc	r26, r1
    194c:	6a 0f       	add	r22, r26
    194e:	71 1d       	adc	r23, r1
    1950:	81 1d       	adc	r24, r1
    1952:	91 1d       	adc	r25, r1
    1954:	a1 1d       	adc	r26, r1
    1956:	20 d0       	rcall	.+64     	; 0x1998 <__ultoa_invert+0x84>
    1958:	09 f4       	brne	.+2      	; 0x195c <__ultoa_invert+0x48>
    195a:	68 94       	set
    195c:	3f 91       	pop	r19
    195e:	2a e0       	ldi	r18, 0x0A	; 10
    1960:	26 9f       	mul	r18, r22
    1962:	11 24       	eor	r1, r1
    1964:	30 19       	sub	r19, r0
    1966:	30 5d       	subi	r19, 0xD0	; 208
    1968:	31 93       	st	Z+, r19
    196a:	de f6       	brtc	.-74     	; 0x1922 <__ultoa_invert+0xe>
    196c:	cf 01       	movw	r24, r30
    196e:	08 95       	ret
    1970:	46 2f       	mov	r20, r22
    1972:	47 70       	andi	r20, 0x07	; 7
    1974:	40 5d       	subi	r20, 0xD0	; 208
    1976:	41 93       	st	Z+, r20
    1978:	b3 e0       	ldi	r27, 0x03	; 3
    197a:	0f d0       	rcall	.+30     	; 0x199a <__ultoa_invert+0x86>
    197c:	c9 f7       	brne	.-14     	; 0x1970 <__ultoa_invert+0x5c>
    197e:	f6 cf       	rjmp	.-20     	; 0x196c <__ultoa_invert+0x58>
    1980:	46 2f       	mov	r20, r22
    1982:	4f 70       	andi	r20, 0x0F	; 15
    1984:	40 5d       	subi	r20, 0xD0	; 208
    1986:	4a 33       	cpi	r20, 0x3A	; 58
    1988:	18 f0       	brcs	.+6      	; 0x1990 <__ultoa_invert+0x7c>
    198a:	49 5d       	subi	r20, 0xD9	; 217
    198c:	31 fd       	sbrc	r19, 1
    198e:	40 52       	subi	r20, 0x20	; 32
    1990:	41 93       	st	Z+, r20
    1992:	02 d0       	rcall	.+4      	; 0x1998 <__ultoa_invert+0x84>
    1994:	a9 f7       	brne	.-22     	; 0x1980 <__ultoa_invert+0x6c>
    1996:	ea cf       	rjmp	.-44     	; 0x196c <__ultoa_invert+0x58>
    1998:	b4 e0       	ldi	r27, 0x04	; 4
    199a:	a6 95       	lsr	r26
    199c:	97 95       	ror	r25
    199e:	87 95       	ror	r24
    19a0:	77 95       	ror	r23
    19a2:	67 95       	ror	r22
    19a4:	ba 95       	dec	r27
    19a6:	c9 f7       	brne	.-14     	; 0x199a <__ultoa_invert+0x86>
    19a8:	00 97       	sbiw	r24, 0x00	; 0
    19aa:	61 05       	cpc	r22, r1
    19ac:	71 05       	cpc	r23, r1
    19ae:	08 95       	ret
    19b0:	9b 01       	movw	r18, r22
    19b2:	ac 01       	movw	r20, r24
    19b4:	0a 2e       	mov	r0, r26
    19b6:	06 94       	lsr	r0
    19b8:	57 95       	ror	r21
    19ba:	47 95       	ror	r20
    19bc:	37 95       	ror	r19
    19be:	27 95       	ror	r18
    19c0:	ba 95       	dec	r27
    19c2:	c9 f7       	brne	.-14     	; 0x19b6 <__ultoa_invert+0xa2>
    19c4:	62 0f       	add	r22, r18
    19c6:	73 1f       	adc	r23, r19
    19c8:	84 1f       	adc	r24, r20
    19ca:	95 1f       	adc	r25, r21
    19cc:	a0 1d       	adc	r26, r0
    19ce:	08 95       	ret

000019d0 <_exit>:
    19d0:	f8 94       	cli

000019d2 <__stop_program>:
    19d2:	ff cf       	rjmp	.-2      	; 0x19d2 <__stop_program>
